(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
<<<<<<< Updated upstream
NotebookDataLength[    749686,      13278]
NotebookOptionsPosition[    745451,      13134]
NotebookOutlinePosition[    745798,      13149]
CellTagsIndexPosition[    745755,      13146]
=======
NotebookDataLength[    687712,      12305]
NotebookOptionsPosition[    683524,      12161]
NotebookOutlinePosition[    683881,      12177]
CellTagsIndexPosition[    683838,      12174]
>>>>>>> Stashed changes
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[{
 "Coverage over a nomal distribution\n",
 StyleBox["Mary Burbage and Aaron Becker\nLesson: use RevolutionPlot3D, not \
Plot3D,\n", "Text"],
 StyleBox["http://mathworld.wolfram.com/BivariateNormalDistribution.html", 
  "Text"]
}], "Section",
 CellChangeTimes->{{3.686399177180443*^9, 3.686399229883835*^9}, {
  3.686405392582644*^9, 3.686405393476005*^9}, {3.686406634565097*^9, 
  3.686406634913272*^9}}],

Cell[CellGroupData[{

Cell["\<\
Distribution after a random walk of length r~U[0,1] at angle \[Theta]~U[0,2\
\[Pi]].  Unsure about this result\
\>", "Subsection",
 CellChangeTimes->{{3.690743420196802*^9, 3.690743484613315*^9}, {
  3.690805069553739*^9, 3.6908050734098463`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      SqrtBox[
       RowBox[{
        SuperscriptBox["x", "2"], "+", 
        SuperscriptBox["y", "2"]}]], ",", 
      RowBox[{"ArcTan", "[", 
       RowBox[{"y", ",", "x"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}], "}"}]}], "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.690744442918928*^9, 3.690744445484582*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["x", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["x", "2"], "+", 
         SuperscriptBox["y", "2"]}]]], 
      FractionBox["y", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["x", "2"], "+", 
         SuperscriptBox["y", "2"]}]]]},
     {
      FractionBox["y", 
       RowBox[{
        SuperscriptBox["x", "2"], "+", 
        SuperscriptBox["y", "2"]}]], 
      RowBox[{"-", 
       FractionBox["x", 
        RowBox[{
         SuperscriptBox["x", "2"], "+", 
         SuperscriptBox["y", "2"]}]]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.690744440623171*^9, 3.690744445963043*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Det", "[", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       SqrtBox[
        RowBox[{
         SuperscriptBox["x", "2"], "+", 
         SuperscriptBox["y", "2"]}]], ",", 
       RowBox[{"ArcTan", "[", 
        RowBox[{"x", ",", "y"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}], "}"}]}], "]"}], "]"}], "]"}]], "Input",\

 CellChangeTimes->{{3.690744355912014*^9, 3.690744367137821*^9}, {
  3.6907445988926907`*^9, 3.6907446031313953`*^9}, {3.690744779325786*^9, 
  3.6907447799392757`*^9}}],

Cell[BoxData[
 FractionBox["1", 
  SqrtBox[
   RowBox[{
    SuperscriptBox["x", "2"], "+", 
    SuperscriptBox["y", "2"]}]]]], "Output",
 CellChangeTimes->{{3.690744361958684*^9, 3.690744367545917*^9}, {
   3.6907445969791822`*^9, 3.690744603524468*^9}, 3.690744783650868*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["1", 
    SqrtBox[
     RowBox[{
      SuperscriptBox["x", "2"], "+", 
      SuperscriptBox["y", "2"]}]]]}], "*", 
  FractionBox["1", 
   RowBox[{"2", "\[Pi]"}]]}]], "Input",
 CellChangeTimes->{{3.69074438245142*^9, 3.690744400565673*^9}, 
   3.690744615571299*^9}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox["1", 
   RowBox[{"2", " ", "\[Pi]", " ", 
    SqrtBox[
     RowBox[{
      SuperscriptBox["x", "2"], "+", 
      SuperscriptBox["y", "2"]}]]}]]}]], "Output",
 CellChangeTimes->{3.690744401130352*^9, 3.690744616204328*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"2", " ", "\[Pi]", " ", 
     SqrtBox[
      RowBox[{
       SuperscriptBox["x", "2"], "+", 
       SuperscriptBox["y", "2"]}]]}]], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"RegionFunction", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"x", "^", "2"}], "+", 
        RowBox[{"y", "^", "2"}]}], "<", "1"}]}], "]"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", "Automatic", ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6907444046604643`*^9, 3.690744418691968*^9}, {
  3.690744464695588*^9, 3.690744469776231*^9}, {3.6907446104766397`*^9, 
  3.690744628265018*^9}, {3.6907452188064337`*^9, 3.6907452191691303`*^9}, {
  3.690805024323887*^9, 3.690805057533269*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJyVnXmc1sWR/1mvIB4R1HijRtY70bgxHomWEg/w2GQ9oqIIKIgXnqgJHmjU
aNYTvBDRKF5R8ZooooCt4wzXSIQRQRlBGAFB5dTEoCLLzlPv+ub7eaZ/+e38
M6/5PDXV1dXV1dXdVf3seMaFx/VZq02bNn9v26bN2mt+Lxl+2Vmduu5jO846
9i+rVy9Nl8x6o/tOPeqsT/8X7h/Zrymd1fL7s9ThmnbvtutcbxX6xsB/fvJm
x+166zjHawO//41Pbhh68Xhr4z/gf/rdK2eeWTceelN652/K3+Wx1uVpTk9v
sOm1/ZoWpJt/dN7zJxwe9IGfc+cvn57Qf0LID/7iRevsuPGVk0J+8KGHzFs2
4KuGkB98xaDO7Q+78e2QX+mRX/kjf+vyNJvKz9/0D5y/+f3Vp8vnXLHvxOgv
+JclORsD327sHb/Y5ON3or/g97X7zdJ2R0+N/oLv/8DE/z7q3anRX6Wnv8qf
/rYuT7Op/N5f0/4y3vSPcUc/4KLPwGmXv/n99fKjP/vVX6eEfsLeL5526g3j
3g39gFfscHroB/zhFnueEfpRevSj/NFP6/I0m8qPfrS/rh9T/aA3+sc8KttV
o9h/c+AyjoGX9dMYeGUcPxC7gs9HYleNbldzxa4K+rJdFfzLdqXyNJvKX7ar
or/oTfVT1ltt+KWy3mplvjcHzrwo661W7SHwcn9rA6/0d5HorTZV/lomeivo
y3or+Jf1pvI0m8pf1lvR37LeCv2wfvh6EusI+qQf+H/0CV72q82B43/QJ3h5
3jUKfdhV4GW9rXi9dbzWWscbA4c/+mxdnmahL/Sp/UWfqh/Xp7E+qz6RN2Of
lrFPy9inZezTMvZpGfu0jH1axj4tY5+WsU/L2Kdl7DP0I/7QMv7QMv7QMv7Q
Mv7QMv7QMv7QMv7QMv7QMv7QMv7QMv7QMv7Q1B/STmb9tcz6a5n11zLrr2XW
X8usv5ZZf9WeTfnL+muZ9dcy669l1t8q/cAvE79ZJn6zTPxmmfjNMvGbZeI3
y8RvaufWujwRv1kmfqvqL59n4nPLxOeWic8tE59bJj63THxumfhc7dly8jP+
mf2RZfZHltkfWWZ/ZJn9kWX2RyLPPon1ZJ07jlu525p1pH3TsAmrt5mRfrtJ
3VGdZixONz271nfWs852aKH7KLV9Y+6GgzstStvV7zNqykf1zr8h1e06cOem
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
r7jHvYFX7L85/uZzcP7m97MnNlzQ+50PI37mNzhxPHiGf+DsfzL6MdUn/087
wj/wjH5Un1V6Rp4MfRUOvfIRPYec9EvHXezBwKW/Ol5Br/1VXPSj9Jahr8JF
P4FLv0z7xeeZeRH0Yj+WsRPlb8ofPux3V06qr913k9mx/+Vz8PI6Xj2/Wo9D
hpviZfvgZ5n4E+VfkxvHTL5uTcYP1FSNF+cFjJf2N2MPmf1R9LfKTmgH/vDB
fu8qj7spjp2gv8p+ZKHEM6M9rv5c5a8aL9VbuZ8Fjp3xf3eV/UzICy52UqUH
7LAsf7FPysRLsl+IfYTGV7EelfHRsb7Qbtk/1Ibe0Humv0n7S3/oX7lfMb6W
Gd8qvdHOc7988KG9exR65nPwsv+pNZHfdN2R9ahqnVL+5bh3tKldwUfo02k/
7ntEp6eWpuOWj1l00hnFPZ3iw27udke/K+fE+U+7U9Y76v3ToW9OWz83fH6X
zp+m8weuc/T04NNsiv+l87DTOvXhvGFBWtbt22579SzyQ/xzxU1x5xvtwx/5
XN6Qs9vV3x3TaRHnfk3p69lX9p1zZpHPo/Te/9ATehDcwIW/wV/ktIwejH6J
ng15kNvbCf60p/hVY3uuGjRsqd244+4HN01/K7W7du5z1/aos+b9dlk16KU1
8m/UdFu/bd60sx54K93ea02/juiw/uDRn9q8/jPeW33vXPtyxuIH2q6Rc91D
F3UY/PCC+P1+7xd3umgNPXT8H/S0R/u0S3u0T7vffPOPx0ceO92G7X3rXSNX
LU5P1y0b0WENfZstz72pX8PHcd576LfP3zd0Dd74wZRenQ6YZ7d3vuDKfg0L
065rf9L+yTXtrnX+tEVdfr8w8j83PnjSeX9cw9/p+L+g/+Ozezd3qSnyPDed
3WafH63RG3IgF/I4boojB3LBX+wqxtHbjf0a7YqcwQe5+Rxc5kXYj+sh8qfQ
g+gt+Mg8Dft0/cc9APqX8Qo97DBp0/Gr04y4r95vt7Ff7VJttzHvmG/qTxgP
xgf9iJ0HH/So9PgL9TPYB/aCfqS/YW/oUenxa+p/+H/sFz4yLsEH/Sq92En0
i3mufkzw8AOMB+PDuIifVPtMap/SX8v0N+xE+hW4+Hm126R2K+NomXEMehmv
wGWdUjtPaudin5axz9CP2GHgMn/D/4jfCNz9anK/mvCr7j+T+8+E/xS/Grj4
5yT+PPEbfy5+PnD+H7ngI+tF4MiBvMgj647iKbMepcx6lDLrUdL1SPQW/Kfd
seErqy9cYu0vvvOmfqPfTWvdcu9FC/7Xfi7ueWSnQ4tz3B4737zj9n3q7Iad
u33Q5Yyltuz+uT9p+vuEtNUWp/3nz6rpDXr+n88FN8WRw+UKeYRPyCPrbKzv
yOfyhpzSrvKxDB9TPi6nqZz8ndFn3BeMevOxiUt6RnySND6hvYyeYx8hfKIf
wif6AR8Zd0NO0YNl9GAZPQQf4maNG6W/KmfKyJlUTrGTwGXcg4/E+ZaJ8wNn
33VY277n9btyqZ0297GLT6juV9Bf89z+H6z+0Rw74aed7x/5wGfp5yds+PjY
NeNy+t3DGlcvbU6/fbHt7/o1LEpHXb/J+b3OCNwU3/jIUZsP7j/fzv/mD8NH
jv0k9V3R/egn17TL3/654qa484324Y98Lm/IedG1z8zusvviNGan9dsNPmFm
avejI0Z0KOjtX9Ab9NKuZfplyCl6M/gjh7cT/GlPcZEz+Ih+ol3Rf8hJP3Uc
0a+OC+OnekY+1afgqreU0VvK6C2p3u58zC7od/SSyCcZts3zk0f2qtKbjm/K
6C1l9JZUb9T/UA9EHZDUSQU+5OnBT90+5sXwD5y3nL7ZH/v+eMv6zDlbbfL/
i/MZ4VN1T6f0cPR2Ar9xj1G2Wc9Bqcefz1+y82V1IQ9/8zn4Aat+NPSZH4+N
3xn+VeeBnTvawFkHVr2HQL8Ch07PIctyF/px+qpzPPrfun5q4v8y9FXnkBn5
LSN/1Tmq9EvlSSpPm5lXDdzBaq19+xuGbLtvwSf+9s/B99370eMv/fZN63Hz
1rf+obngz998LuNuOu4+ronfwic5nyTtJj7PyBk4f2f6ZUov9qbtmrYr/VV7
NrVnsXPVfwq5WteP6j9l9J9U/zK+gYseLCN/bv7mxjfwhwZsdshLx72evT/i
c8H5P+VTdW+Ss+ec3eb8WK5fbfwn48eq+pvzAzk95/xDbh7l9JPzkzm95eZv
zr/l7Cfn/3P2k/OrufmS83s5f5Xzh7n5m5vvuXmd8885f5Lz8zl/KPam9FXr
Zm59z/nD3PqY87e5eZrz27n5nvPbufU357dz63gufsjFOTk/nIt/cv45t87m
/HPOn+f89i4t5zwpzi1fe+XNh7+4knchhozRd/O2qdDHeduYr5c8scF1462j
38eAvz9ryISLJo+zGS11dDMC33qbx64fX1dv+z69yZTVqz+O88xdxz74yeAr
6u2Hfh4F/o/TZ4zYuPt4m1nhE/gN8xpG/nC/idbJ74/An+n97Qm7zZwU/QKv
b7dss5+u/3b0C5z3OuiX0tMv5U+/VJ7t/dwMfKXLT90i53bnXj1z7acfKvQA
vvjMHs+du82E0AP4ZQdvvbL7rEmhB/Cdfj/wkYsmTA49gN95zi2NC4+cEnoA
f+aquuYOp00NPYDzTgt6UHr0AD7I+aMH8E4uD3oAv9zl/2mlv4Ev8f5eveO8
MatXF+/s3dRw9G/O/Lyo9wTf8qm32376wPjQG3iP5cMnbb56UugN/IsDF3+x
fJN3Qm/gtTsOvOfMzwo9gPOeD3oAP3tMl5f2+sv00AP4tuf1PmXxFdNCD+Bv
OX/0AP43lwc9gPd0+d/3ulPwaUdf9tOt/jw+9MP988CXH9m04y7jxK4aU9tZ
5x79u/Mnil01pv7X/vyS7384WeyqMX29y8YHrfeh2kPxPl7ZHhp93OeIPTT6
+M4Ue2hMq65Jz24/5T2xh8b0jbdbtofGdJnLiR7A7z63y7MnDJwoeqhNExac
3P6rNjq/alPa//DdvxozSfRQm0YPfqP52I2miB5q09k/efnh+z97V/RQrF9l
PdSm3/f44KtZcz4VPdR6v+aKHmrTPS3yfyB6qE3nertlPdSmMS5nWQ+16YEd
5r+31vRJoQdWnLTVuQN6/arQA/isho/mb3BiQ+gBvOdVX5+ywdWFHsDP++9D
vpreMC36q+sa/QL5qIV/U/QLvJ/zoV/gvbxd+gU+2+WU8bXM+FpmfC0zvlY1
vp3L+SEy7oHLuNtvW+y8atwtM+6WGXfLjLtlxt103MkzyfgBy/gBy/gBww+U
15dG+9bnr/gHy/gHy/gHy/gHu/aaG4c+/HiVf7CMf7CMfzD1D9wbZtYRe9f9
qqwjlllHLLOOGOsI6y/4Nr4usP6C9/V1RNYdy6w7dvw+E2ffUF+17tjYKy68
78gbqtYdy6w7lll3LLPuGOuOxC2WiVssE7dYJm6xTNximbjFMnGLZeIWy8Qt
lolbLBO3WCZuMeIWiWMtE8daJo61TBxrmTjWMnGsZeJYy8SxloljLRPHGnEs
cnKPfFyLfY7TfYRl9hGW2UcEvewj3P6r9hHGPgL+fX1/8ZDwv8b9wbgHPjv0
ug0L/vd63WTnGVuue/Lf60P+X42/6vJ+TZ+mt7a+dOT3N5sQ/J/xeH656Ll2
1BGPjuz3SXrzsgF37HlBQ/Cf6fNmzi+n7n1ymhjyL+/w3KIugxemb89477Xt
pxb+h9+vnH/zx89uMz7s51jPCxj70W96HtNnYthP73V++4PBneanPXbc4bqd
Dm6IcbnK3zt555QLNply3dvRr7tO/+i0Tl0XpOO3H7Dv6YsL+1nqcfh+Mo/W
+/VTf+zX1JzOvGRg46pFU6JfHf3dlG9nPbZo94V/jX4h/5WH7zHjwjcbwn6Q
/4WxQw/f4b0izh/Uov8P08It/u3VTm8U/rm2Jb9jVnpr95+/eMzuhX6+aKnj
n52OfnvQMUf9qPDP/O7/SV3TBudMDv38+YGZ33YZPCf98LfTPvnBCVPEDpt8
P1v423tcnqFt9rh/w7+9F/2tc3lqZrzU5old3o3+Ik/Nued+d8OVU6K/yMN7
lfgN5Fnrjxft+bPFhR62bdHnu+nmI0549JK2xTpOHvTSW7ttM6VdsY5Xxve9
dPKef+nz8lbFOv6M13PsNevAfe5ap/CTyzx+3k/W647e7jct4zg7+nust1sZ
r/ejv1d7uzd9uP3Ul9tPi/7S7mELJ67zeY8p0d8PfBywB/p7VAv/urTuzi9P
PXFx0V/uaaft8eaQ268u4rp2LXksE9M1+9321Ypb3ol+Lc/E5//p/I/8w4Gr
drplYfRrBPfALXLOiX5t4PxPr93v7oe/nhH9Otvv91cfdM/j429ujH7Vt9jD
5HT+BXsdMurcv8a6yfwbcdiqA14cVcQhs1vkHJxeOW+/z7p30fV0eLrnXXu9
do8iPr+gpd1n0vaTFz562RlTol/rPFrho3H4pU4/a+P7N3r505kh/5d+3vXa
ygsueHWvIg5/rkUPI9O3hzYO+XiXIs7s5+dpH7bwKeLMTt7+a9e91n7XjcZL
HDXaFj29yY9nzyvG6/EKf/vG+WOfC/386lWXh3H8LBNv83tAy7xeHP0d7vxv
OGLvrk8Mmxn96l7Rg+3gekP+N1rebZpq6b579zjk0MLeyB/GPyP/G5XxtfN8
fJH/DM/T+M7tAfk/9/jzQJlfr3u7mz+x9pZ/OLHYFyTn//SEJ+/dr+uMkH/d
ih3atW7njMsTnt99fUt/i3HZv6U+faZt8pMp3X7aoXhvjXcXGrb9usez3yvi
E9pnPtKvP3udFPOXfvX2OHC4+Ml9vd0Tjpuw8tsFM2J+reftLmqz4fVPbDc9
+svvZ8eseunPx78b9km7P3F/hR4GVPyMdXP/Rr94B+y4lX/9y+AO46JfT1b8
quFX6VfMA/fDrAvLKn7b8NvM2zcrft7+4n6edXNwZV2wB3xdQD+LPQ48QNbN
6X879JdNI+faSdvNG7dyrcbQz+su/2Yt9jA19IL8O/k6hdz8vsLXNfSz3OU/
xtdB9HBmJR6w08buvMXjPcaFHo72/EHWX/QAP+wBPWzr75+t8vUdPaxbiQes
t8cD6OEpjw+/kLhocCXesN94vIEeBvg7bFM9PkEPyP9jj2foP/Inj3+Qk/mB
v0XONyvxmI1+8uDVW1zcIPusz3yfVcSH/1mJ96ze4z3k/Jm/81ax8/Eh5/b9
Nt+7aeQi69vxe4dftE4Rz9+w/YJX3z1pcbpgywfXe+f2utD/+p5Puq2/dwr+
PXk3mH594e8Y3XHXmZ8P6l8X+N2ZeBV/MNr9M/LzHtKdzgd96nvFincUOZVe
7C1hb9hT7wzuv9Moj2/Lcc681P+oQe06DK/T+Z6Y74z3G44fr7jHaXUeN15V
0Ytt7XHOHz2+Aq+t+OfEugB+hMcP63l8Ar6n6xs9g7/u6/u1x0wfdfDR43Xd
t4GOCx9TPt6uabu1sn6B/+2xN0+5ptu71mbtvY+a326cxs9G/Cz6sTrF3S8d
L37Vfxv7ERlHGyV4b/E/8Cd/+TIfX7H/eAdY5ott27p9WscMDh/mY8fh7536
YZfFNuDjvdsfdH/VPDLmkcw7Y97J/Irxkv2mZfabES/JfjPaxZ+s+8bBx3Q6
YLE9f9JFD97xT/rRd4ORk3enJg36j5t/uWfhB8CP/HKjVw4aXR/yKF7e1xR8
0Ke2y/hyn7Wbn2/I+CbGt3wuV9xzYbec51/r55ZlvDZN9PNewa11vNHgI+3G
OZX4GcPPSL9sNzm3UbuScYl3d0Vvlhkvy4yXZcbLMuMVfJinnCecNWvrs+ff
Wxe4r4Ppv95rPmnKLvXhl9od+Ydh71y3Zh/9gwln7HVxXbT74Xs1XTt1XWLd
3tn+wl1Pqpfzz8IekH+Dvbe+c2S/pel3k+88cN17CnxmhU861fnAv53TD3B6
aTfR7r+yw1rpF+PucUs63N8bBO8o799iP3f4fn+Rnz+Ab+T6Ocb1I+cVxnmF
6NPQp/C3DH+Dv8hvGfnjHUUZX0MPop/AZRz/pd3K+FpmfI3xBeedxTZnP7Xz
sBXF+IL/m+MSn9id4m+JW+CDv9X3ToV/gj965l6JezH43LBbZR4NWVnhI/zj
3T/wese3EfzF177aYvSqpWnTLX91wQM965Q+Kf1x7z+1xYrVS9OqR7rO+Pce
BX1NhY9tNuetbx/5Jz5Ob6vPeb3Pnj3qdH+X2N9hh1fc8s3KVz+dnpbetvKv
dwyq131iYp8I/r6vk5svvWXKaeeon5xmnDsJf1P+zsfgE/usil8yzjnBd/D4
+SyJn7HDrfxcF5z1FP5yjhr8wRn/Hzi9nLPZ9bee1WXFv40L3M/TrH/3B7/b
4KV6lTOpnMvk/FbkT8iPPB2dT9u2Q6duuqpYp9rJOIIf5edvy1z/9OdyH99l
rn/wA2V8wae7XOhB+Bv8RZ44N4AP76j84IRhU6+6q6pdy7Qb+kcPO1TisUQ8
JuMVcsr5TJyfl+/1GtLuPbvP2vPRcXrOk87rOPKD8zr/E+7ndd977MBfv3R9
1Xmjcd4o/E35+7mljb1r3/WHLCxwP5+03fv8+qxdXinuKdg3nbB0q3Nf6D0+
u/+C/td+73DNC2s98Y9/us8lz41ztvL9b0364d5Trrjy58W+o5+fB/5u7dmp
6aAizq/sR4bbvX7eKOd+9qnzL8dXNbaT85f9jo3y80zwq/38bYC3K/v0NNfH
ERw97PfCfqe+9cKE8Ocjrjx67cGdFqd/Xzi524F7jNNzyLjHAX/CzzM32OTr
G8/co+p81ThflXurNMPz08D39/ce9/F3JsH9HCD91HE5H0hP7HdK1/nji/if
fq1cdMv8s+6dqOcMacDm9826f52iv/iZh479+zHrbVTc7/D7GT834+8Bcg6P
nOu7P1ng52/gR8l5vpzXpcx5XXpW2uXc+0k/twT3c8vU3c/PafcJOW+P+yP/
/Hl//0HORRPnotD3cvsf6u/MgP/dx/duf79C5DHkEfkN+UVOQ07ikC4+37u2
fo9gmXsEO13a5TyT8ZLxNcZXxssYLxlfY3zlvsYy9zWmdsL5SQc/h5TzzzRw
6cSfrXPIu5rPkMZ4vgH6mVE550wn+jmnnIsmzkXlHDUNnrFiyjtfvBc48cl/
+XmynD8nzp/L9+PTPS90huarpIGeT1LOK2hM/T3/RM6xE+fY5XyDRs+fnCP3
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
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJw1m3ccV9P/xz/3fu44yChlZY+ylRVZmcluoGRUKKmMQgNFlKyGkV1RooiS
VFZ2S4V8JTOjki1SpPxeT6/z++M83u977rnnnnvGe7ze77tTh8tbXJZWKpUs
r1Sqopsmlco7over7FhWKtfpenvRzqKXqgTa6Hoz0fZFpdJSD4lUVmWVSl2V
9uLHqO4LlU3Enyv6VeZn54j+o/fsqfpt1ccGerCR+B3Ed9X9Liq6XdlI14vV
9i29LBE9RHU3q58bdL+fSsfEfCeVlrpXT+1OFv+n+ttAzzYVv1L8j7p3vPhF
oruqn8tEJ6qfj0QvUf0E0atEe6icpLJa9/ZSXW/Gn7nN56JzVXZXfc/4LWer
/kzxG+pdJ4r/RYPOxfdWmyF6bya+bWL+PbXvovpn1H5vXV8jfk/VnZu4TVdd
76XrzqJPq82N6usX1bcQ3Zt5U/0E1R+l64WqP0L0K9FHVS7WvQZqc4XoZLVp
KP5K8c+L30/85eKfE3+0nnlM7TcR3Sbx9/Pt26hNO9HRanO46g9TeUbXLUXP
V1ksvqpvOUf8KI29tWgblYNV/7bKBeKHi26nNn3E1y09Jx3i/LdPzG+nNkH1
7cSfq/q9E6/Ls6ovS/fTWvXdNI7tVTdN4xpd8fM8e5To0SpviJ+qe/eKviD6
a8X1r4keqz3wuvjm6q+Zyr3iG4r+Jvq8ymCVm3T9tOgJoodo07/C+FVu1PV4
0WNFW2kMIpXf1f8tqrs58f7+U9cDEu9z6rh3k8rAyNOmZen+rtNFon5+FP+v
3lMVP1P8X+IHqs1z4k8ULdRXEz13W9V9DIx95qo/SvW3qj4Tf6T4QeJH6Zml
un+l6OMqQ8Xvx1lM/e0PJD5HA+JZ2lDPLBddq/u9S3/vaby36jn5XfX7q//u
6n+K6laL31H8FeL/Er+T+FraMz3Z74nlwzuZ98fb8RyclXi+ZuoaOTI7896h
zSRdb6F1aaa6ZqJbMccqH3AeRY9ReajiPXlc3Je/V1w/M55NzjV79C310UL8
NaKniZ7K+VL967oeLPoaskUD3F98X9F1KgeI7ye6TG3vYH/rur+uDxJ9N/Oa
38occgb1EbeJ37P03mKPTcz83uaq/1jPjRMdpLKv7p2o+nsqrt9czxwv/lKt
+xmJ29+t6y1Vf7X4C1S/V+GzebvoblFOPq5nVzEWlREq9UvP+e+a8691bwPx
Z4t+quvNxX8l/hvkjvjWonuo/c7i/9D948XXFV2kea6he9/pveu0IKflPgup
6IHB+622xnC02m/Je1S3pdq9qDbTVb7VsxupTRvRLzOvL3KbPXCNSivmQs/V
qPi7VqjdpuLPF/2M/Sq+uejSqtucI7oo95jPU/vn1WAXZK/oJ7mfbVf4fHGu
/hC9VuVh1Z8uOlxllvg+oqdozI3Fb6L2u2vML6v9XSqHqqxX/VMqHdTnFF3v
JnpH7jOCUmkYvB9yPfszukD134juU3o9OcD7lt4LifjlGvdW4juJNlG728W/
hxwWf5v4BcyxytboEtGb9I7J6nNX0abqZx/V/yt+P723nvg14vcK1i/rxH+v
ti+pNEM26lt+iLKotvp6B12kujp6V1PdH6a62uJPED9U/HYaXyvxvUSbqq83
2MOiqd67h+rX0n/VOvoC0U/07EWsm+jewfp0Q3Rl5rPAmXgpsy6bLrpK13VV
30X0D5Vt2NuiTxfWcYeJHsKeEP+S6pvpfSP17AaiddX/tao/Qm0O1fUI1QfR
4YXlxIuiLfTsfeJPFr1T5XXxV4v2ymx3nMrZKmwLfCt6b2H5Oh17IbMOfVHv
3a2wfrxFdCfVnyf+Uc695u5BvfdsXW+bea4eYN7Enyn+war1D3oI2+BK0Ss4
txXrfeyKz0Rrqp+5yCiVnZFruv+Ynu0t/gHxp2WWh8ioVxiXBvyu+Eait6vM
E3+IaD3d66D2Y/XsnsFngTNxv8Zdi/GIrlG5RXwz0edUhopvIXqcnh0kfp6e
PTZzm3c5++rnDsagNjsW/vZ+oodrkrcQ/536X8M+ZU5Ufq5ahnQQ/YX9JP5C
5iq33qiKTtTzd3LuRJ9VGYicE31G5WbxJ4jekVnfXiX6b+HzyzleklmGNRfd
TGPYWPxi1e9a2g7cTXRr3Ttd/L1672Q920PXL+o7Dhe9Hlletcz8XtezVX+Y
6HXIdtVPKizvm4seofq+4t9QfePM45wjvj+6PLHMRVb1jDprKfuANRJtnFjf
YP9sIVoXmSf+c/Yn6y76Q2Fd9ajoJyoDdL+p6LyK55T5fEzlT5VRKu/r3l+i
D4muFq2p8rL4L5E36ueFqNPQbei7LcVvr7IM/aFSR/xE0dF65gm+i/40d/XF
/635aFjYlsOm+1C0ltqPRd7Fs8MZerzwN80UPVL3N1J5FR2jewG7APkZzxfn
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
8YrjxNipa3S9t2gffOqqZWb3qm0I9H5ncKWqbY/Lqo514GfiY3Ku2f+n5JZb
k6PsWpz4u5iLCYnjg8zRej1/IGdKdDW2pfi99e1Dc8ugnXP7qvip+LPrc4/t
gGC5MiXKw4ap7Sr2eokvLXq7+kzFHyp+QNX2Cjjw1aIrc387cdqVVb+3R9W2
C/IR/YbcI7Z0OjI/2i3It7tzx/j2ws4svddai5ZxXYgR1iqN5xDPRF+cJX4H
7dWT4znlvNYoPLaDwN5y6yBs0J1S61P008Gl9yk2zEm69z56M3e8CZznTmzU
4LNzJnumatvvqqqxUvxc/N2NS2MSm4iOLYzrzNJzJ6qvOWpzkGivKN8PFp2X
2e4Bq3kodxzoTvZ7cOxmJ/Wxf7As3RXcper4142iqyKGQw4J8Vnw9kmqP7Vw
7G+t6EGFbWxs74MLy0ls430zx7xerRpvxhfBbwSvJ34xQ/W3ZY4/XBnxybEV
xxf+jDgYeNiTmX3Z2zPHdfD7ttN4P8ycL/KBaJvSYzhf9DyVI9m7anNCZpzk
I/XTNDM2tQiMq7APji9+TPSdP6g6rjNQfH09e0tmv5gYATEmMJOF+Oylv7GX
6I9V2/DkaDQuLdPal47H0f9M1k58f/HvcJZLY1Hb6j2vFj6nxEcADTgTN1WN
9aIeWlSdBwI+tb4wBgPm8BpnJjHeSOwAu3BZxTEP4ingHjMrxmTxTcFoty6d
A1FTtFVmLAKc4YzMPiNYDXEb/NFRFccNwEDof5fS8REwDWxKbPj2VWPkfAv4
HDYxeMwTFeP0YINghMQxwGSIZRySOEZALIOYCNjLisKYPfsfvPOBwnEkMFLw
ezBSsNLapftZrvp5heNMxAfBnMEywXSJm4AZElupFXXu+tQ5XJzZBrntun1T
x/XQSw2ivTEw91knL4DzShvOdlY4d6JB6dgl7W8TTQvLv5GqH5c7ZsYeHp8b
byJGTx9HxH4WRTwTXPNZPbNPav2+WWF7eWbuPBbsYfrcPrOORlffk9uOfVj0
2NR2DPfGl7aJni/tdzdOrX/HlraRbi4sm/dPLZ8fKa27fg/GPAZF3AO5znuR
7Y+WHg/jIpdgj+gbHBh1Lrr3bZU7VT+ncH7RLerzk+D8BrAv4r98D/0ME/0x
+jvk/tyMrye6QPTZqmULMaZHdL0tOj/63Z9gM+deP9YRG2p1lNtp1e8grkVM
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
EvBz/w/06YkN
          "]], Polygon3DBox[CompressedData["
1:eJw1m3ngVsP3x+/zPHPnXjsRSZYkElkiIftWKEtZo5WsKVsRWaKy73upb6HN
voZSSlR2kpAkUqmvULKFr9/71Xt+f8znOeeeuXPnzp05y/ucT8Puvdv3qmZZ
9lkty4J+78uzbG9duL+SZceKPrrMspMlW0uyzUQvFX2u2ubiv5H8iSLL9lH/
h9T/RNHHqU8XyTeUfHPRj0h2u9o34kv1+Uaybmp1xD8Y1TTG/pLvonaj6NP0
e4LaAsl/VBunMVuKv1v3HiO6rcY8RfevLVlT0adLdqLaQvE/qbXXte6Sbyz6
S403UM84U/QY5i3ZMWqdRK+va9tpvBG6d6Dal+KresYJkp8peV3xX+n+Y8V3
Fr+B+H811knizxNfX/y3kt+mtofuP1l8FP2K+kwX3U+LeYxaB/U/Q/030bV5
kk8U/7v41nrWL+o7RNcO0v17sk6iX9ecxur3Ad37keRHsbZqv+n+R9QmSf6B
+HZqL4l+XuM1U98XJHtc/XtXvSasxUTWL1rG++0q+gjJHlT7Vfw7akfp/na6
/0HRjTTekeKPFH+/+P+p/2jxfcRPFf+S+HfU52nWgj3DeJKfy1xYT9Hj1E4K
nuv7kv+od+2ttrX4RXqv1up7n9oK8f9hjurzLvPTtSkau2fVe4Bv/wp7TmOt
EN9AYwzT/SNF36Q2X7Jca3iO6I5qyzPPAbqD2leZrz2sew6uek/fK7qq5+0n
+gHRv5Tejx2C9zf7JVM7UPLd1W4Vva36fKjLV6vPeM6C5nioZMMl+1X8c4X7
PyR+FWsneojaH7y/2rOSb1HzO/AubfX7sNpfkn2kNkP35ZwntYGiT9b8OI9v
qr0rerju3569oXc9ovCZ5GyupWu9OKtqw8TvJv4W0dvl7ss914t+kTOo5wZd
m6D7a7nP2kzxe+Tea5dVvRfYc9eKbyz+a8nHaU5HRH+Hl9WeFt1e8g8q7jNA
9E65zyZn9B7RLxReb9Z9pZ79fOH9zT5fIX504fMyNPE35577AWrDal5X1vcs
PW8rzWeM+D5Vr8co1kf3XKh+24hfLH5w1WeYsztP186X/CnJzxPdWPM9T/yT
nH3xrUrv8QHq+3Pw3mePnyj+7eC931PtafU/X/23l6weZ1fjv6c+P+r3avHN
9Xuz+L9FR/U/SvRrun+S6A6sgfiV6vOB6E3RhaKn69py/W4gvtTvJPHL2BPo
Qv3+IP4H/d6p+U0V/ZvoRaJ/1u9KxldbJTqo/z+il6itTvuY/cwz+d5jdU/9
mvcUe2u6+Lsk/1bv87Xep62ujVHfTXXtCr612h28i1r33HuevX8gRyHth7PR
rRV/7wka423xw9TuF3146fVgXdj/r+raTM4dtkR0S93zcMXv2JfzpxZFL0Wf
i35E82uS9Hsb0XcUlveUbLnGu0v8m5LtLv5H8T/pt434iZrba6XX+Cf0ScVr
/5r69xW/Ss//UM+/TvxfknWVbJn6j9e1aZItUTsxWueie0eqz7qinxPdper3
4z2/VJ8o2UjJhrKX9LtQ8q669qnmsG06by34dqxlbnovtbuwj2pDNM5KtXvU
/w3NZ75knXTPWI3dKlpvvaj2pOjL1H9j9J/kx4t+lbOg9rzkc9Wm6f4PxR8p
+X/Uv1/ub/mk+Aaix4meyL6qWGc/Ifop9l3FOv5P3hfdru91nd5nlGSj1daV
fIyuD9WYj3LW1D4W/aXmfJZk13C/7rlf7XjJLhS/SLJS4w3n/KgNr1m/4Auw
h7Hnu6q9IfortXskv0rPPCf5D/+V7Gu1zTjLuna5ZFPQtxr3VPX/C31c+Fuw
1tMku1f9jsV2Sb4n/kJc0yU7Qdffk3y1rjVBd6r/6+gXyS8U/7zkF4jvoc5z
de/N4m8TP0jtCtE7sya693rxfWseg7GW5PYFNtTvLMkW6ncjnqfxx4r/nvUX
v7F+Z2Pbg/VTQ13bQc8aqGuf6doZeuYW4nfXfK6UbBddu0uys8RvkdmnwLc4
J/pexkDXDVC7VPT22G98K933pOgdNd7t6Rv20e8O6duupfYfdA37Q9dHqHXi
W4rfV7Lu0fPHR8NXa4T+E7+lxj1HfH+1syWrp2vL1L8fPlbylxaIvzN4b2zJ
99P1LfEBRG+i693Ut47e8QI9ax2+ofj24qdhn3TvGeJP1fXHmL/aZbp/qe7f
SfJndL2r5Heq3abrh0peX7Kzdf88bJ/uP12ynaN1+U7q30v8V6VtEvrpcvXd
U/KLJW8u+cXoD/FXi5+qMS9ifPFXiZ8i/kLx/6rfbbr3ebVG6Bi1BpKfoutP
YB/0e6tki9XaSfZtYb2N/u5X2B/unPxd/MG7g23VA/hWwTaks+htg23LtuJP
EN9A/Nnit4nez5uL74FvGu3b4nPje1+R/FX8T/xt/KnuyZ/E/m2l/q1F19X9
3dV3sNqVkjfTtdaa35Wl/e2Nk/+1o/p3x7YFn4em4s8Qv7ZkH/Ktg/XAp2oD
8Hn0rq+r1Wf/qJ0bfTY4I6ckW9lT/GmSfYQfqnE+Vf9jxfcW/yLnX/Kf8ffQ
/br/YI61ZDfq/kL8IeJL8TeVPiNXsLY1nx1838ur9hHxgZ/TtUnqezQ+juhn
eT/xz0o2JnrPsHc66dpTpdfgafXdKvfafBtTX8aUbCu1/pIP1PNulnxFbl3w
h/hrxI/Bn9BYjdTnu2gdsY/k1WDd8UTa06wJe2eGxrtWY38sfrLot9WeQLew
prr/GfU5s+ozxFlCx7QQ/W/NumdItO88InN89Dg+Z3C89B32WvRz6ttLfJMk
/6Fmnf1wtO95dNU+Kz7oytx74U/1uba0798GfyZzDDBUdH98FfpwpjVGC73r
C/iI2NJofY/e74K9QB9pDlOwWdF7Ct9+ec17rV/SJw/VrA/2l/yTiu3ZWOaQ
zsPImvf7+vgA7B21x9Mceyf/jrm31RxekWwHfBPJNtDvo+JnqT3BmqX9O7pm
/UWcR7w3ouI9fXXpeJV47QfxU6L9bvzv4aJX1ax70cHLc/tx+HOXqD2Gfk3n
ZVTN53UH8V2ytOfEtxB/jfg9xN8t/qbo87DmXJTWoduJX1GzbkWHoluX1Kxb
OdPYwu9rPuuXJn2AnevE+SfmFD+k5vPdR/xx+FboHfzVdP7vFN9R/HB8ItE3
6drRko0UP01zOw57Gr2ne6V4jL3+dGHflhhiz8I2uTFrn2x1qXv24nxjd0qv
Ibbol5rX9sZoXxmfG9/7b+2b7zVWod/105qxdt0y676n1MZnjt/2E/1Lbnv3
p8Z/v3RMQmzyu9opuffHOZLPEX8wtPqdi87WtcOj9xexwmzJDxS9v95hlOht
sTGiR+f2ffGB3xB9AXOp+Lxwbnqrz0Lxl4rfB9ul9i3fX/ypoo/WPd+I78F8
c9sY+jYJtj25+NMln41vhz4rvd+Zy9eip6p9LNnl2Hx0nfqPk3wX8c1EX6Q5
fC5+NDFJzf7UaZJ9KH4fvk+y+YdjM3T/4GT/2PvzJftVfb5Q38N4T/HPqM3D
tuja+hq/LB2vYSOZ77u54xi+Of74SerzLrZT9LzS8eJ5wTFf46Rfuwfvafb+
6YX9i22Cn48fhT91l1oMjuc6qu/7Fcejh6r/46J35f0L6+/JxMF8Y433uejR
kvUQP5c1xQ8RPQcbqrH7im8PDz6QW/c/J1kHXZsuuqIxTxH9XvL32O8f675b
+f6iHyhsu1uhw5g7/iW6Xnxb/G3dd6nGnlt1fEkcSDx4gtoM0TdEx5LEkMSS
J/KNxJ8n+TeSH6r2nq7diL1X37eC5/aF+Efxv9T5I/3eIr5dknfNbL+Y/1F6
5gLRp2f2z8Dflok/MjNe8Tn+dsXnt43656X9cfzyt0S3UZ/5xFKZ/WG+/VOZ
13C+6L+xN2lt38S/LOyLt2MO+Aea08SKn3mp+FW5z86m2PHS36ND5v3EeO9E
Y3OfaL3eUv8NxE+QbLOq17djsL7Af39f9NDCvih7eojod4LX7ly1r8GJ9IxZ
NZ/nZ8GqeD9dH8h6iL+x5liXGDXo+lXiF6H70WfJh2cPHsT7l/Yz8TeH0D+3
zsKnwSdAlxFfo5vuI74SfZPuHS/6zorj3c66Z3XFPmFD0f1rjq2ImVfXjN+9
on5b4dMQD4t/Tvxk8S9o/EGFY2nme1HhuJP4kxiRWPF0tT8r1mnYOzADbE63
ZM+Jd8F2wHg6QJe2j+i+jznfhfFScNO54s/U778Vx89gMcTAK9LzwIKwSeNr
1mfYKuLT/fCjKo5X+T4Nq47R+ooeXHi8M9h7yT/m7Dyb1uOq6G9JrPel5L/p
2lOSbanfz8TfS/wQrOPR9fcVjmcvS/qlRrxbMdbwBf5B6fEbpefhb+8r/hl0
jK7dj/2q2cYerHu/AZNUn4mSteZbsD6iC/X/Kvq8sxdfFX9x4f3+MrpQ9yws
HUcQT7Dnd07xKWeHM9Q6N+YF9vWH2ta6p0Vpf29wzf4H8Ta67LuK8ZML9Mw2
2BfJT5O8Zen5EyssKj0H5rJj4sFIR+A75MZOt0zrt3vm/bxHaf8THx5/FXz3
zGB/bzdimWhdQWy3BPtf2D5hp74rHf8hR6ccKfqS6Pcj9ub9wXtY/wMynyfs
EfHNP6LnlNah6FJ8UnzTyeLfCPbnV2us30qfSe5vI3p1sC0bK3k9bFdhXw7M
qIXoVmqPid8oxc/gPcRa7MGRYIOlzx/nELwHnAe8Z2jFePrWuf33fdM3qESv
f5fceM4BhW1n3dzx90GFz2rbpL+IcYj9e2eOfX6S/HzJV2ne0yU7pfBc+dZL
S8f0xPYj8WGjfdSRKYYmViMnsA7fv+ZcwVrB8SoxDLEMGD/x28Kasf+zeOea
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
/xpSq4aturvqmjUwJbAlbBq1OP8HcNYa7Q==
          "]], 
         Polygon3DBox[CompressedData["
1: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

          "]], 
         Polygon3DBox[{{1549, 1548, 2101, 1319, 1320, 2102}, {2028, 848, 492, 
          1360, 1481, 2016}, {2055, 1063, 950, 949, 1342, 1885}, {1854, 1299, 
          869, 870, 1300, 1855}, {1554, 488, 780, 1484, 1480, 2120}, {1643, 
          1035, 1250, 2092, 1546, 1547}, {1651, 1038, 1318, 2100, 1556, 
          1557}}]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, 
     {GrayLevel[1], EdgeForm[None], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJwtlEtrVEEQhXvuTecOGa4igmiMZpIJPqJORETwraMLnYgJ4gO3go8oOInG
jUl0JfG9SAJGdKe/w2STjTufC0FEFBEiKERd+x2rFs2p6q6qrj6n7u040zh2
OQkhDLBSVjdOynpRCKE/C2EWfAiOuK29nPMyaxp/FP8PmBZDqFOgTo1esIbf
iz3YHMJHYo5gD2E/5ew09stoNX+T+xxcy/5f7HXgbfwC9e+AO/B3E78TnMc/
BDaocx17gfhn4Ci1lhM/Alaj9X4c3EsPl8AfYAvnq1iPClZ7BWsSOyaWq5xJ
ai3GngI7vc8K+AV/DTiW2b0zxPaBjWh1B8FFzok4muBsKfHfwK7Eas6JoyZ7
yzhnlcR4Uz+tzvkU9s1o+yfB96yjxF4B72cWcw/cL6Gwa+B33rasyfjv8J7V
+wA5CTEXwDesrexdjMbtOfAn8U/Y6xHP+G2JxYuTT66XdHvFWTk1vfYUTd8P
mfEu/qWvuJSt3PPR+L0VrS/1I82H8Et+V8m1mPG3R+dfveTO1abUeqiC230G
NAvtHi+uTlGrm73XrrXmTXPX5xrddT07vab0Uv9j4JJmqyk+r7l+w9H6Kvmc
PM7sLs3/YZ/tur9F9bZE0zf3b+EXd+dNNue6t8v3H5C/jbyvmXGnOprhDX6X
eq25pgdS43+ztM1sVtSnNNN8/uczs1naxdlb9jcm1v+s8y8u9R1MZ6apeNA9
FX+XvpcF/0auRuPthuureZkv2qy1ui56k77TE9FmRvHK0167ayEOVnsP0XO1
X/bexMNZcg6S/85nQO9XrQnXetj7avM51Le10vmpekxPajVzv0t6tXjMZ965
j/PxzP4j+p+sT02nOf+mctdF/j++uoGq
          "]], Polygon3DBox[CompressedData["
1:eJwtlNlLlVEUxc+9x89zqSwiiMLSbCSVLBuh0ubRMqKBXoNmSG14SW89hVnZ
gwoV+VZ/RwVZD701QjNRhKBQ0PDc+rG+h8Vd55z9nbP32mvfuqMd+88WQwhH
hAqhN4awXlgnRG28SyEMFnSgoF7xg1kIf7QeEp6KjwgNiq0XDos/EbaKbxGO
iR8Qfit2pr5fIn5Dd0TxemFqZQjPtLdHsW1CZx7/UPEzdN6T+Y3lOmuOfntI
30/R2R3FfEgG/J9QFn+jmM3R+fL+Ie7Q2Vytr4iXhWrxCUJH5pzIrSCcEL+p
O9bo+9XCx+Q7uAsNqK1HezU6my18TsZtnf0t+Kwv+S7i0e55Zm3rFP9CvDtz
bZlwRvyyUCNeJZwXbxbmiU8UusQfJOtdpV78KoXQr3VF0fqTH/XxNt/w7Uth
cbQe9OO1sJaeBveTfOZoXSsM5zVyFz2h9tOZ71+ps1fiY3rzpH6LaJ7cM3p3
VXs/S/bEBsW2RteLRtRO/Cnx+9prEH+kvUviw8m9oIeD4l26r025DUTXd0t7
jwvW5G5yT6llkc6/iXcofof4duG91u3CrKI9xv34hXqogVquJ79dnefP+/Rj
urQYLTnHbdGeJXfeWyi+INpbsWR98Q7x+7RXW3RPupM9i5fwAF4e0N6kfI03
eB8tyJFcmRf8Olnri3l/G4uumfvQFX2ZAfzYJzQV7WH8gD54hxzIhZzIDU2p
jZ5wBx68ltw/PL9LNbeIj5fsud1at4pvKtmTeJE1NZA7NZzLrOGK6BlEWzRE
y3LuDfzDrKyK9iY9pJfURG3cwV3t2nubuebG6P8MtMAzeKclenbQHO3nR896
Z6VzxUN4aVRoivbMl3z+mMVp0dp/T/Yu/e/P/ULtO7U3pvWP5FzIiXhmjtlD
43vR+qBFlvvvQuZeUQ91fdLeMv0ujX4fvY9nni9mg3r3Rv+noSUziH/p+Uje
T2abmniPN/A6PRnP54n/m406+yr+HwLApns=
          "]], 
         Polygon3DBox[{{1931, 61, 825, 824, 1932}, {1396, 76, 813, 812, 
          1397}, {1648, 499, 1404, 1403, 2114}, {1392, 844, 843, 74, 1391}, {
          1940, 804, 803, 89, 1939}}], 
         Polygon3DBox[{{1929, 830, 829, 903, 1382, 1928}, {1649, 1037, 1365, 
          818, 817, 2013}, {2010, 839, 838, 1385, 1384, 2110}, {2051, 1046, 
          924, 799, 798, 1916}}]}],
       Lighting->{{"Ambient", 
          GrayLevel[0.8]}}]}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl1DVsVlEYxvFbgieQEAghYQAW2EgICwMDCe5Q3N2huLu7e3FtaaEUL1Cg
uLu7QxNCwsDIwO9Nh3+fV55zz3vPPf1q9B+dmpaSJEkFf27SiE8VT5K6gnRx
dokk2VQsSRrhMI4gGxfUy/PUQJZ8U6xTGy8uFN8rlSQTxRlqb+gEbERT3ELf
eJbeejoVBfxv6RRsRQvcxSWe/nQD7vPMpO8wA9vQGg/wXG8gPcr/y/5txA9x
Vb2QHkdDs1bBLbUT8lM4Ge+CHeFXz7K2Ef6UTJL6vDniO+q79G/gYsyE03iq
XomnCQrkXzAIx6x5ofdYnFqs6FDPmuuR2kL5NyzAbizCRyzGNf0hdFk8g/87
XYo9WI5PeMWzgo7AOZ7V9AdWYS/W4DOu6K2NmfnL2L9znBFOqOcb6bK4qnpl
HFLLjDW4jl5xbtiHfL1L/HX4NtIz7kYD8RXxSb3eMXfMgvM4FGekXo2nOvLl
Y+N5/OPiO+u9oF1QVr9paevU1smfoRN6YjReY0x8O/00ujLm8z5PaUf0wMg4
E1zmGUWH4zHPEvoEHdAdQ/ESw9DEnrn8KfafJ/8Q727N/NjLnIPpWdTWL4e7
ehnyPJxBe3SLe6f+kj8Vv92XerzZ4tvqO/XboSsO4kDMo16Rpxb2y3/GTGrv
6Vz8szbPXHPEN9Uf0bbYjlZx/zE73lVvAJ2FHP57tCXS0Rx34ix5ptN+MTPP
NHobzbAlziD2wGRkxjfm/2v/SfKvOKy2Q94n7iJqphT9RmSp58hzcRSNsTn+
H0oU/X78BzRNpC8=
       "]], 
      Line3DBox[{848, 767, 769, 748, 791, 1483, 750, 792, 760, 789, 761, 771, 
       2023, 795, 753, 796, 1488, 770, 759, 788, 749, 790, 758, 2021, 782, 
       764, 768, 765, 780, 1484, 779, 2025, 781, 763, 778, 762, 772, 754, 
       1486, 751, 745, 776, 755, 774, 2026, 794, 773, 793, 1487, 775, 757, 
       777, 756, 752, 2018, 746, 783, 747, 784, 766, 786, 1485, 785, 2028, 
       848}], Line3DBox[{2017, 833, 834, 835, 1493, 836, 837, 838, 839, 840, 
       2027, 841, 842, 843, 844, 845, 846, 1494, 847, 2022, 787, 797, 798, 
       799, 800, 1489, 801, 802, 803, 804, 805, 806, 2019, 807, 808, 809, 
       1490, 810, 811, 812, 813, 814, 815, 2024, 816, 817, 818, 819, 820, 
       1491, 821, 2020, 822, 823, 824, 825, 826, 827, 1492, 828, 829, 830, 
       831, 832, 2017}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{1773, 1655, 1772, 1769, 2144, 2074, 1563, 1654, 2143, 1561, 
       1653, 2142, 1559, 1652, 2141, 1557, 1651, 2275, 1896, 1867, 1907, 1650,
        1967, 2266, 2115, 1873, 1936, 2021}], 
      Line3DBox[{1776, 1775, 1766, 1768, 1767, 1812, 2233, 1642, 1811, 1810, 
       2137, 1643, 1547, 2138, 1644, 1549, 2102, 2139, 1645, 1894, 2104, 2140,
        1895, 1646, 1869, 2116, 2290, 1971, 1961, 1870, 1913, 2018}], 
      Line3DBox[{1983, 1744, 1743, 1980, 1628, 1800, 2243, 1792, 1686, 1722, 
       1627, 2252, 1830, 1685, 1721, 1626, 2247, 1817, 1809, 1684, 1764, 2215,
        2029, 1102, 1720, 1625, 1827, 2122, 2072, 1719, 1624, 1799, 1790, 
       2121, 2070, 1979, 1623, 1739, 1996}], 
      Line3DBox[{1984, 1723, 2229, 233, 1687, 2071, 2123, 1629, 1495, 2090, 
       2124, 1630, 1816, 2249, 1815, 1631, 1496, 2125, 2030, 2167, 1497, 1808,
        2031, 2246, 1829, 1828, 2126, 1632, 1498, 1791, 2127, 1633, 1807, 
       2073, 2128, 1634, 1724, 247, 2129, 1725, 2004}], 
      Line3DBox[{1985, 1976, 2230, 2082, 1727, 1639, 1689, 2216, 1507, 1638, 
       2134, 1506, 1001, 1505, 2170, 2034, 1504, 2169, 2033, 1503, 2168, 2032,
        2133, 1502, 1637, 2132, 1501, 1636, 2131, 1500, 1635, 2130, 1499, 993,
        1688, 1690, 1741, 2217, 1740, 1997}], 
      Line3DBox[{1986, 1704, 1798, 2242, 1797, 1679, 1796, 2241, 1582, 1678, 
       2159, 1581, 1677, 2158, 1580, 1066, 1850, 1889, 2257, 2057, 1903, 1849,
        1912, 2269, 2056, 1901, 1881, 1886, 2271, 2055, 1885, 2276, 1900, 
       1676, 1848, 2256, 1579, 1675, 1847, 2255, 1578, 1674, 2157, 1577, 1061,
        1576, 2237, 2054, 1781, 1782, 2086, 2225, 1783, 2006}], 
      Line3DBox[{1987, 1695, 1780, 2236, 1519, 1802, 1778, 1801, 1779, 2235, 
       1520, 2039, 2175, 1521, 2040, 2176, 1522, 1271, 1831, 1523, 2253, 1832,
        1853, 1833, 1524, 2261, 1856, 1892, 1857, 2274, 1525, 1860, 1861, 
       2263, 1526, 1834, 1835, 2254, 1527, 1836, 2177, 2095, 1528, 2041, 2178,
        1529, 2042, 2179, 1530, 2239, 1793, 1794, 1531, 2240, 1795, 1696, 
       2007}], Line3DBox[{1988, 1977, 2231, 1753, 1596, 1709, 2196, 2075, 
       1597, 2061, 2197, 1598, 1083, 1599, 2164, 1683, 1600, 2165, 2062, 2198,
        1601, 2063, 2199, 1602, 2064, 2200, 1603, 2065, 2201, 1604, 2066, 
       2202, 1605, 1128, 1710, 1606, 2085, 2228, 1978, 2001}], 
      Line3DBox[{1989, 1738, 2232, 1757, 1756, 1615, 1712, 2210, 2077, 1614, 
       2089, 2209, 1787, 1613, 2208, 2069, 1612, 2207, 2068, 1611, 2206, 2067,
        2166, 1610, 1091, 1609, 1784, 2205, 2087, 1608, 1711, 2204, 2076, 
       1607, 1754, 1755, 2203, 1737, 2008}], 
      Line3DBox[{1990, 1759, 1758, 1616, 1786, 2238, 2088, 1785, 1713, 1617, 
       2078, 2211, 1714, 1618, 2079, 2212, 1715, 2234, 1619, 1716, 2213, 2080,
        1620, 1717, 2214, 2081, 1621, 1718, 1788, 1220, 1789, 1622, 1760, 
       1761, 2119}], 
      Line3DBox[{1991, 1982, 1974, 1746, 1694, 1728, 1693, 2219, 1518, 1641, 
       2136, 1517, 1012, 1516, 2174, 2038, 1515, 2173, 2037, 1514, 2172, 2036,
        1513, 2259, 1855, 1854, 2260, 1512, 1852, 1851, 2258, 1511, 1640, 
       2135, 1510, 1006, 1509, 2171, 2035, 1508, 2218, 1692, 1726, 1691, 1745,
        1973, 1981, 2005}], 
      Line3DBox[{1992, 1771, 1697, 1729, 1804, 1803, 2244, 1532, 1820, 1821, 
       1819, 2180, 2091, 1533, 2043, 2181, 1534, 2099, 2182, 1863, 1535, 2096,
        2262, 1858, 1837, 1536, 1373, 1921, 1859, 1838, 1537, 2282, 1922, 
       1923, 1862, 1950, 1949, 2291, 1538, 1951, 1952, 1905, 1925, 1924, 2265,
        1539, 1839, 1957, 2117, 2292, 1969, 1540, 1840, 2183, 2097, 1541, 
       2044, 2184, 1542, 2045, 2185, 1543, 1033, 1544, 2220, 1698, 1730, 1699,
        2002}], 
      Line3DBox[{1993, 1749, 1765, 1750, 1732, 1700, 2221, 1562, 2192, 2049, 
       1560, 2191, 2048, 1558, 2190, 2047, 1556, 2100, 2189, 1893, 1866, 1555,
        1935, 2285, 2112, 1865, 1841, 1554, 2120, 2294, 2025}], 
      Line3DBox[{1994, 1751, 1777, 1752, 1733, 2050, 2222, 1564, 1825, 1826, 
       2251, 1656, 1565, 2145, 1657, 1566, 2146, 1658, 1567, 2105, 2147, 1874,
        1659, 1908, 2113, 2286, 1937, 1875, 1660, 1909, 2278, 2016, 2028}], 
      Line3DBox[{1995, 1762, 1736, 1703, 2224, 1575, 1673, 2156, 1574, 1672, 
       2155, 1573, 1671, 2154, 2107, 1899, 1670, 2270, 1884, 1846, 1882, 1920,
        1371, 1883, 1845, 1880, 2281, 1919, 1918, 1898, 1844, 1966, 1879, 
       2293, 1965, 1964, 1911, 1843, 1941, 2268, 1878, 1669, 1959, 1842, 1970,
        2289, 1958, 1668, 2153, 2098, 1572, 1667, 2152, 1571, 1666, 2151, 
       1570, 2245, 2053, 1814, 1805, 1806, 2223, 2052, 1735, 1701, 1774, 
       2003}], 
      Line3DBox[{1998, 1975, 1770, 1742, 1734, 1702, 2248, 1813, 1665, 2150, 
       2093, 1569, 1664, 2149, 1568, 1663, 2148, 2106, 1897, 1662, 2279, 1910,
        1947, 1946, 1876, 1661, 2267, 2108, 1877, 1963, 1962, 1972, 1047, 
       1968, 2023}], 
      Line3DBox[{1999, 1747, 1763, 1748, 1731, 1818, 2250, 2094, 1545, 1823, 
       1824, 1822, 2186, 2092, 1546, 2046, 2187, 1548, 2101, 2188, 1868, 1550,
        2103, 2277, 1906, 1943, 1942, 1551, 2109, 2264, 1926, 1864, 1954, 
       1953, 1552, 1479, 1960, 2026}], 
      Line3DBox[{2000, 2083, 1583, 1705, 1706, 2226, 1584, 2058, 2193, 1585, 
       1071, 1586, 2160, 1680, 1587, 2161, 1681, 1588, 2162, 2059, 2194, 1589,
        1887, 1902, 1888, 2272, 1590, 1890, 1904, 1891, 2273, 1591, 2060, 
       2195, 1592, 1079, 1593, 2163, 1682, 1594, 2227, 1707, 1708, 1595, 2084,
        2118}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{1205, 1203, 1204, 1197, 2215, 985, 850, 2167, 989, 859, 2168,
        998, 870, 1300, 2259, 1008, 881, 1303, 2274, 1348, 1018, 892, 1410, 
       2291, 1431, 1411, 1316, 1363, 1486}], 
      Line3DBox[{1207, 1206, 1200, 1202, 1201, 2234, 1139, 981, 1093, 2206, 
       974, 1086, 2198, 963, 1075, 2194, 950, 1063, 2271, 1343, 1341, 936, 
       1054, 1438, 2293, 1430, 1335, 1398, 1483}], 
      Line3DBox[{1447, 1445, 1143, 1170, 1098, 1106, 1099, 2123, 855, 994, 
       2130, 866, 1006, 879, 2176, 1017, 891, 2182, 1310, 1311, 902, 2188, 
       1319, 1320, 2139, 913, 1045, 2146, 922, 1053, 2152, 934, 1062, 2157, 
       946, 1071, 959, 2197, 1082, 970, 2204, 1131, 1159, 1132, 1189, 1160, 
       1446, 1474}], 
      Line3DBox[{1449, 1137, 1162, 1136, 2211, 979, 1091, 972, 2164, 1084, 
       961, 2161, 1073, 948, 1293, 2256, 1292, 1422, 1434, 2289, 1435, 1421, 
       1286, 1329, 2286, 1389, 1390, 1359, 1429, 1428, 1436, 2290, 1426, 1427,
        1323, 1380, 1379, 2264, 1315, 1279, 1313, 1374, 1373, 1306, 1274, 
       1304, 2253, 1273, 1298, 1297, 2258, 1296, 868, 2132, 996, 857, 1258, 
       2249, 1259, 1266, 1265, 1264, 2122, 1101, 1144, 1100, 1469}], 
      Line3DBox[{1450, 1103, 1147, 987, 2252, 852, 1267, 991, 2126, 861, 2170,
        1000, 872, 2173, 1010, 883, 1275, 2254, 1020, 894, 2292, 1433, 1280, 
       1420, 1029, 905, 2285, 1388, 1282, 1358, 1414, 1415, 2266, 1432, 1416, 
       1283, 1331, 1368, 1369, 2267, 926, 1288, 1337, 1371, 1372, 938, 1294, 
       1345, 2257, 1065, 952, 1346, 2273, 1077, 965, 2200, 1088, 976, 2208, 
       1095, 983, 2214, 1141, 1165, 1195, 1470}], 
      Line3DBox[{1451, 1171, 1196, 1172, 1145, 1102, 849, 988, 2125, 858, 997,
        2133, 869, 1299, 2260, 1301, 1347, 1302, 2261, 1356, 1402, 1401, 1308,
        1375, 2282, 1376, 1314, 1424, 1423, 1425, 1479, 1412, 1487}], 
      Line3DBox[{1452, 1237, 2243, 1238, 853, 1249, 1226, 1247, 992, 2127, 
       862, 1001, 873, 2174, 1011, 884, 2177, 1276, 1021, 895, 2183, 1281, 
       1030, 906, 2189, 1318, 1038, 2275, 915, 1327, 1351, 1048, 2279, 927, 
       1289, 1353, 1056, 2270, 939, 1295, 1066, 953, 2195, 1078, 966, 2201, 
       1089, 977, 2209, 1219, 1096, 984, 1220, 1142, 1472}], 
      Line3DBox[{1453, 1166, 2229, 1167, 854, 1107, 993, 865, 2171, 1005, 878,
        2175, 1016, 890, 2181, 1026, 901, 2187, 1036, 2138, 912, 1044, 2145, 
       921, 1052, 2151, 933, 1061, 945, 2193, 1070, 958, 2196, 1127, 1081, 
       969, 1187, 2203, 1441, 1466}], 
      Line3DBox[{1454, 1150, 2230, 1178, 1177, 1151, 1112, 2219, 1113, 887, 
       1227, 2239, 1228, 898, 1033, 909, 2192, 1041, 2143, 918, 1253, 1254, 
       2150, 930, 1058, 2156, 942, 1232, 2241, 1233, 956, 1125, 2227, 1126, 
       1156, 1185, 1186, 2228, 1130, 1473}], 
      Line3DBox[{1455, 1168, 1003, 876, 1210, 2236, 1211, 1209, 1014, 888, 
       1241, 2244, 1242, 1240, 1024, 899, 2250, 1261, 1262, 1251, 1252, 1034, 
       2233, 910, 1119, 2222, 1042, 919, 1245, 1246, 1244, 2223, 1050, 931, 
       1221, 1222, 1213, 2225, 1214, 1059, 943, 1181, 1182, 1465}], 
      Line3DBox[{1456, 1184, 1183, 1444, 1235, 2242, 1236, 1234, 1123, 1155, 
       1122, 2224, 1121, 1154, 1120, 2248, 1255, 1257, 1256, 1199, 2144, 1118,
        2221, 1117, 1153, 1116, 2220, 1115, 1152, 1114, 1229, 1231, 2240, 
       1230, 1443, 1179, 1180, 1464}], 
      Line3DBox[{1457, 1157, 2231, 259, 957, 1069, 2226, 1124, 944, 1060, 
       2237, 1212, 932, 1051, 2245, 1243, 920, 2251, 1043, 1263, 911, 2137, 
       1035, 1250, 2186, 900, 1025, 1239, 2180, 889, 1015, 2235, 1208, 877, 
       1004, 2218, 1111, 864, 234, 2217, 1110, 1471}], 
      Line3DBox[{1458, 1442, 2232, 1188, 1158, 1129, 1128, 968, 2163, 1080, 
       955, 2159, 1068, 941, 2155, 1057, 929, 2149, 1049, 917, 2142, 1040, 
       2191, 908, 1032, 2185, 897, 1023, 2179, 886, 2136, 1013, 875, 1109, 
       2216, 1108, 1149, 1176, 2129, 1440, 1463}], 
      Line3DBox[{1459, 1135, 1218, 2238, 1217, 1216, 1215, 2205, 971, 1083, 
       960, 2160, 1072, 947, 1291, 2255, 1290, 935, 2153, 1285, 1284, 1328, 
       2147, 1325, 1324, 1350, 2140, 1322, 1349, 1321, 2277, 1357, 1278, 1312,
        1277, 2262, 1305, 1272, 1271, 880, 2135, 1007, 867, 2131, 995, 856, 
       2124, 1224, 1223, 1225, 2121, 1097, 1461}], 
      Line3DBox[{1460, 1439, 1194, 1169, 1164, 1140, 2213, 982, 1094, 2207, 
       975, 1087, 2199, 964, 1076, 2272, 1344, 951, 1064, 2269, 1362, 1409, 
       1408, 937, 1055, 2281, 1370, 1336, 1419, 1418, 925, 1047, 1437, 1488}],
       Line3DBox[{1462, 1173, 1198, 1174, 1146, 1260, 986, 2247, 851, 1269, 
       1270, 1268, 2246, 990, 860, 2169, 999, 871, 2172, 1009, 882, 1307, 
       2263, 1309, 1019, 893, 1377, 2265, 1378, 1317, 1028, 904, 2294, 1480, 
       1484}], Line3DBox[{1467, 1190, 1161, 1134, 1133, 2210, 978, 1090, 2202,
        967, 1079, 954, 2158, 1067, 940, 2154, 1339, 1354, 1338, 928, 2148, 
       1333, 1352, 1332, 916, 2141, 1039, 2190, 907, 1031, 2184, 896, 1022, 
       2178, 885, 1012, 874, 2134, 1002, 863, 2128, 1105, 1248, 1104, 1148, 
       1175, 1448}], 
      Line3DBox[{1468, 1191, 1193, 1192, 1163, 1138, 2212, 980, 2166, 1092, 
       973, 2165, 1085, 962, 2162, 1074, 949, 1342, 2276, 1355, 1340, 1361, 
       1399, 2268, 1400, 1334, 1287, 1360, 1481, 2278, 1485}]}, {}, {}}},
   VertexNormals->CompressedData["
1:eJzsvXlYjt3XP5xQhDJPGUqIVKZSRCsZI3MoMoRkrJSpMhVRmclUJGNSpHmg
dvOsgQalSXNKVyIZ89t7u1bP93s9t/d9n+N43uP3/PHc/5zHuVrnZ3/2Z629
9rrO67Jv+U0Wy03FxcTEvnQRE+tIr8l2ez9vb5OAx8lm49YPiydbtSp3qrgJ
oCVxqsX9M4EkP0D2wP0zcaTQwf203ykBVKg91nn64ym5nmEUFjs9iRy7nh3i
vk0A9yeZXBhifId8uzSvzzipVLLzqJr7uyUCcL+78MXCucO1S3bsG+IyKI38
uRdA0KnGDOoP0R/GcX/dmX24f/X6lg0UH5aFz+L480kgx1/eKEN5BAqvcUTB
yYnz6RXzLE6iPJKQjzozZj+JJUP9diiFWAggoUXecoxVJFEZn2+W7pxMuquY
y3pNEMD7kL01L56FkbHT76o1FGWQ8OJOu5urG+FTP5Xs0QW+pC5jk0mY5Cvy
cpzOxDsPG8Gy4ZHxqjOq2jY7Q9+Jy7wmf+4bQenkfGnFAl845zOL+3tP78b9
Bb17S0Q+C4PROnM5fn7co10MX8gHRPkI+YMof7zH+aH9jlKihIZ5AsGrmEFN
RY8BAhi1pEA9qySRhIpv/LHjCB234dk6xnNslNz2F2nxZG7puP0v0nKIl9ug
ZwuzPkCzhvj94xXhxOnhq/DjFQXEuHtxYm2/DyBXOONxQdx07fDIpqJ9UkXk
z30DpH9Pi6b+4H7sJPefcfQU99+6uONeig/yK8r2MfyPC5/4MfxOS5t0KB+Q
VK34zvgol07mfDJVNH9PMU+A+R9/cf4XtTUrGf+WgvPqdL4wd0ELn++25AA+
X8w/zEfMQ9QR44x64vxRD9TBRmGrw5Nf2QSvJ1QX784x/gBhYT0vTZ31iiQu
aTHJ2/KWBIorJ7y3rIch89Svr6pMJuuvPpKY6VNONqZ3rSzQqoP9SXWG/cbP
1x5l+fTcvc+V5M99LXQNOxdC/SH1XFxn5r9aK6ec+VcdiTtN8aFPdtomhn+t
XDyR4UckdzpKecD8zc84n1jjJM6nV8W4z5Q/3DilPIXxt+gnt57xX+uabUjn
Cw8lXvH5evmMGcLm26NgG9UlTngNJOG7a7g+uD5xveI6xbzHdYD5j/mB+YJ5
grqgTqjPho6Sd2qvlhK8DpxY/eNnXTWc+y7nBQPfkDD19EgYWEsiAvZtd5jz
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
fgwOrxScpP0YSVBNmsv6sc/CvHES5hHmz+tXclXs/cxm5RGDhqkHkc+nA/n7
GYcXR4q2/koie/OcFc0ue5EBd+bp/TIVwNsYH3nnvESSkKjZ1Ufal1j92HhU
ivbJMn7n7zy9nUQOe4zSXP31Een5ulxuzXYBxFvH8PeNFxyUM3cosvNLffn7
xjWXt3J8gZrbcooPAVZjOL6ynvXjMYXJpOdvT7+Fo+5Cs4nFmyLan3v1vVu7
cnoyubf9m9SFkgeQb6zZV22LABqjt39tvBQCP0Ycc3N4kUR+lPZutVj2H/+/
GNHPWcOP6X/tbRQIh98csI53TyDJJpP6e1mxc6e72LH3bD2M7PaKK98nHiM+
8vdsJ9tc+pN3KaSvp/Wvcy0XSKD2bf17KwVwx9jgkuX7FOJk39lNqsKZWMW9
bn1M7Xb9Pb6tNc+GCM2R1uHfTsLOLla72PvGNU+dd1N8aFw025W9x5vZO+Qe
w1+96bs0xYfMla2251suQPL0Zo4f/GTnW60eqbTebzuwTcwSns1+zN9njixI
dKHjwsF53127VTjDkWilr2xcM2H8MJ4YR+9affFJl/zJ1Jcaj+Xj0ohRWQWZ
PFYAve4/Tb9x/QZYnOwRNehoEhm3+tCkiVQHVYVP/PubJT5bT4uPvEUKx+zm
3+PMLpr/290vhYyWndg4LdyVNMy9sv8h/VxjkfiDv1+91RKzh813cupZ/n7V
S9kz43CVDwkslbzHfp/2sacG/30anjOZI3LOZLzQniu0pwvtdrph4qs1/EDO
YXbFzC6p5O0+w9CptA48kFwcI2l/D847bjjbGpdBaj9sfhbeVQBvdoyw2zjW
E1Imqj6WMU4jwbM+dztK15frYJnmuot3wfDIxv6dr74kNR6PXG4PofXz85Mm
D4c8glcJBfdp7L3ZsCmXljbkvSFfN/rOYe/hDRRedGfv4StdxowZtD6HyG4e
u36Wehmxif0dwt6/dYl6H9lN4i153ingMnuf3+Tcpsje53ffIDmKva+b930r
91/7/kAo8/8QL1bD3tNVNg1vZuPWLZo7nY371ij8nr/ZOxJnmHBtnGEuUelX
NIm9tzxd/lZqrmc5iQrQOcTen6cOmreAvT8fl2h5dbNMNdEriJzG3rcvW7bn
OHvf7io892G48ByI1cLzH5yGdePvRY+HN99i+E1JCVMZvq/wfBk54XkzKcJz
ZvDcisXCcyxChOdXfGg9yvm8tak7SvlAycd0Pcan455Czn9xF82r7L3rDzJ4
MsO/F1zAedobXNOkPGGN0QfOs1J/o+Us9Qoy7KqR3oJhtfBqqUkk+x5he/UB
/j3Cu4ej5zD/kpar/HuEiFeX+PcIriUmJ9m4F/YFLmPjNnxWWs7iNcZnoRaN
FxiHnpBm8SpDfYV61wt1fvnYJo7Fq3P6fhcaLyibrabC4qVruUmFxTej4Rp/
vypRM4e/X73YEPCCfV8zbPOa08x/314HVeY/Xp/MYt/XKGWemMHGnaNp2IuN
u8Widddnk0SiE67varXxDdHsK8hg7yEtr882WKydQbKuffqi+Pgt+RUz5mLX
gnoormtI8V+UTfYYvdur17WEqA6adIv93uCEbpBOM4QRZa2Fn7cWvCVjV3vP
Ye85O4iJ3WPvRV+I/J7w83p3PUPZBDIU4lZ9m1ZO4nKmDwqNqwPxVY+Hr3ZP
Ik2XbLrfl6skSdX6t9n7ZIqznL1/VhT5PV7z0U4HS+blE//XDqWhpWVE8q72
HpNLNE+8688euVJMtJ6uPhsanUecfeWV2O9JJJw32F4tKyEbxTQD2O/T7has
nMd+f3IGes9n77G3zJvajY27U7HsFhu3x6f6GOPzuWTTGrdy9ju3oInjz7Hf
sYQ2Dlk//HcG1M8ZfmbNlmoyXSCxNsm+CsYKz590E54/2SI8f3Kc0H5V5FzK
afOiHFZIlJPeBsqJPbNySIDK3UTHxbUwaMqidR3fVZAJibJ5WevfkcP9JyR9
7VcOejqjMlddLSb7pm0bU/G6jqybeOGX8bF8UJiXUGd+oJbcSHoVyX5vlrvK
wp/97oj2q1bs/MBA4XmNtsJzGk+cUHhLcSC9+MgohhO0a9YPhvPkSpUE+z7l
4PITp3NT4snjATeV2PcpFcJzJrWE50xaCc+ZrBTaJ4jYC8eo9aU4ZFanH0cY
jrLPlqEMZ21MRcLbHTXkrUBqNPt+ylxlLbDvpwoWKpwfM62BRAxqaWhyyiIz
JetCXdQLwHrPwXjm7xHf7RH1h6GGY7SZf+z39b0Z/qSZxs/Z9z4OXUNlGf7f
vj/y9+ocyr4Xa1g2OJLhfPZYq89wriSWL9gjVUXCjOf2Yb/LGtqx6Tb7Xdab
qxq1TE/1U/MT2O+4wvdv9GN6/g1f9tKPI5Q/XBzqovLRKQv2za3NZfw9hecb
jhKed/hDeM4hnns4QeQcSBN76fcsvnu73JWlcYHXh/P6rKNxoXF0+9dzIAcI
z4F8lND9C4tjgk/YQOY/Ity5F/MfuVPBkOYPfFLuw/IHTCZUpbP8CRE513Ga
8BxFPFexVuS8x599FcRO38ghv/vdn243vRZa8t+tZd8L0/W4+19/99VT+D3X
lOWHx7L1G9R07Tf7Pqhb4m5vto6oSJv+6RxIgcIKc1oHoNMtVz1aByDB2E+O
1YHhnw/a0XUNyr9P59F1DTVdr+xn63r7+5WraF0C79GrKmhdAk1BxRVWl1bf
Ugma2S+RlI3Uy34mW0H6SxavZr+PEhM7tuyfzoGcsErV5aRWDdnSMHlqZU0M
UW0WE3t8ugpm73aqMZWqJUWO6S3b+y/XnuKpepT9jjFnppId9QfBlv2nqD8c
NZHvzvwxvuNE4ptb8mU/XdeQejsqg65riHVxesnWdbBQ5xoRnXVsV82i9YQU
BBYdo/UExp0fu53Vk5wcjUnMHqwz6ByrM0WrGoyZvXzubn2Wt36pE8TZ70hD
m8/dYXnb16fjCZaHUj6vOtE8JEblfQpZHjZOknVh66vnGd9+LD9374wMZPaV
z/rlOipXkqhqqYU9omogTinrFvv96sGCla9Y3RtzWjKP/X7vWMNld1b3Zrhq
WbC6JxNefoTxPKk424zxofnwb3Vm/3/zebB/s+sIzz3MFJ6DqCc8/1BbaM8T
2hcK7SPX7jKG+rfww/PO61lhdaC3dkNWeWUBeAvPScSrmfC8RC8RO56jKCk8
PxGvi4TnKEoJ7yVEzlfcXF5qoeCSTx7kqVvLW9cR84Qup9j3v8My8zUpH/Lg
fM8KyocYZu8IZ3zMlNWOsu+L+5u7WTL/GzZNx5m/eo2TLuNv/Ki1jPlnFeuH
Mn914fmKc4XnKy4Rnq+oKbTPENr1/4eeu/g3O54nqChyHmOm8HzFGuH5ioXC
8xVfCe0lQnve/9BzF/9mp+uI1/kEYZ3vI6zzUjsUHFn+CKbKbGW/H1h/aMpd
lg9dZj1fzvJnnlNELsvn/MWHX7F8KLi1O0xCP4eUddK5HrWtlsis9rrn1KUc
NG71uxTXnEUkruzdUzSjhvS2jVmxQr/y/9p81dJIIeUJH1R9nShPeJHX14/x
7DOtSyDlCcubU00oT7hTk7n+D89j89i+oyH8/dIh4e+XOojpWP/r+duHhfVn
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
Ix9nvHfLOGb8Mu4XB4z/TbhwpmHppqkiPGmdc9SQRNGr6Xe9y+168N7p4fbw
elNcxbf1K1wUk87e995TIkRMbVwod5JHtig/wnlbyMw4Ybn/ysVjsw+Iwhb+
ey1a54jv3zZMHWyVIIcVC9mwqO85MS/uUpVl67PeO2pcNZ4ah4xLxiNHF1l1
1itPHT/xLc60b3BW2NYv2KjW2izR/3yDoOdfnBe+DvmK3zAPFxuHj9rso8YR
fBpeDae2pMm9EuZTzsqnzVIO+41PEDXzX7uSsTtLFDx7Md3ueqy8XufJ1o5R
V0TO2HY7XjlnioEXbasFbIsV7Y7m7miQGyEGRM1saq7GnewdpXKGTJMy/UC5
SR5xCWL7+uIvan6XLfBO+CfcU+WxB3XXVGNHJ/36vLNhpoV2fXZp26t9xtID
IrdhF93Bd2rjpvss8tHISyMnDW+GP8Od2RhOyc1wSwmGVyJXjpw58uXwePg8
6jBxcVVMluOLcEt4EJzSfJPlJ+uk6XWu/SauO6A5JKd/HdXrXfFI+CRcEt4P
/4f7WxT4w8QtjtHiK58fL9cb7y/rd3A6qrkhnBJuCa8UbTil4SZODQeIC8QD
4pQamXi0FiW/0//u+B92/a3+rvA59JP+d3FKuCW8Ev2GL6TfqHOtbLIcx4Xr
ot/o5wUmy/GE+EJcId4Mf4Y7wwHi3vBuODfcG94NH4gXxAniAHGBeEAnw/vh
/3B/qxbd0I//0t419OXH7O/ry3F9OD98H34Pz4fjI9+NvDdy3sg7I/+M3DNy
ssjNIi+LfCjyosiJwlviL3GX5PuQ90POD24KR4WfwoV+ZXK+kINDLg55OHiq
hSbnC54N34Zrw03hqPBTODfcG94NT4WvwlXh3/BwODicFe4Kb4WLw8nh4/BX
eCwcFv4ND4eDwz3iIPGP+Cs8Fg4Lx4XrwnPhuHBdeC68Fn4Lt4VTwi3hlRob
Tgm3hFfCd+G9eD+IF8IP8X4Q94UDw3/hvnBg+C8cEa4IT4QjwhXhiXBiuDG8
GE4MN4YXw4Phw3BhuC98GP6L5U9NluOs8Fh4K5afNlmOH8OT4cjwY3gyHBke
DB+GC8OD4cNwYfgovBROCh+Fl8JJkQP477mAOQKXhdPCZ80p/M4p5XMfrrul
EoZXwlmZGe4Kx+T+YXn1j5fjpnBUOCncFw4M/yVv1dpwaFGkfFjv+7tLbHbJ
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
akh+i1LOjvPlaodJp1K8L8iGy2dblz+VLcrm/cusvs0ukW55qWmrh/Hyhs3C
0IqXskWEc2bghuPrZNDgn992GZos616xSD+xNkukt+jwrHOLP0TWq/DCd5wv
yxDP4qlOR7PE2IwtBYdOk6Jreupcj7gEGXXf9ZlW5xC9NrVWwLZYebdn1S0N
ciOkV6Meel1EcN2ItW61QsTayCNuOXNT5cBV83z7tcoQj7pWu2d3PVbcKDYg
sGPUFXnHw3+LVl9h+9uRkuZTzorYPvlP+o1PkA3q/5yi1WPcWNIs7vkX52XA
4jJf3jAPlxUOtvbV6jrcO3tf9spLkBZ97kS3b3BWnl01roFWBzKyw+jkwVYJ
4tDzxxsX9T0nf7lSoJpWZ0K+s4NJDv+iH/K+q1/hogy5cnjSnhIh8nlApxyt
juWlZbXMxZWuCqvAR752IefkxRMDi2h1NRVmnv3WvlqiWHrxS8+DY8Nl5LbW
y7U6HK8/5L1J9gky4Ptjbft38Jc1+5RK0Op5/MsVWRFU87bYVf37m32ST8nx
RTcGaHVHzmVvPb5VMkW08P8tv9X+IzKt2qDmep3SpVPdBs++IAZ3ML+3vbW/
bGU/4FBLdZ/6hZE/72SSP/+54ydxZ9q0LY7R8pj1FL1uYf/BL/W6hb5GvV0n
o/4u3qi7u7Z1mf4eJ/xqRmPtfYHVT7mPtfcF5OmTr9/RyNWvl1fnK20eqfvJ
wse0eYAhS5xLa/MAm3cciNLmMxc+KNhbm5erUjdCn5e76XLJbOKbaPnQ13GF
X5kIcdVsb22tLm6V2aHh6jiRQ8odmKyOE7E57uF27Tjp7pp7/HraX+KL0wt6
Vp6RJNYOuVlMq6+z2/7UrEpmhDxhN/PuVd9oYe3Q7JJWp3eva85VddxKO//r
z26r+4+3f4+5ox23Nmd7TNl4fJ3odfmPLHWci5RIrwztOH/Sa/bVLktDRP6R
3vstil4ScxyXbNfqACO39Ahz8I4QZb2rd3m484LIXW3totUNfh+6+496WZHC
dvOM3eet48TD+fP1OkM7s58LbduzWzaOdpwyKzNeLLSzvnEmMVskh3Yu7OI4
X4zL7haqzkdRvN3dCtr52G3ixayho/eLuxELynWfFC/6OzasWfhmtvh17cRp
gwf9KSfU3zfMcnCkbDM3cfWw5TlioJH7HG5S9zjGpcm/Struk20DHfS6zWIN
G+l1m6+NvGPT+sxH7+vr3IM/rq+bZ9QJ1TPqhqgXIlfatD5kpJGbHGpST3K+
uZO+PXbF1wxV2yMsu4zWt2eMUX8Ta5Ib3M6os2likg/codsxvR71h4Zz9XZq
le6ut5Np5HuS90nOJ/XtU03q26nrHmJS100eKPmg5IJ6fCa/sX3t6g4P40Lk
+MH13LVcwKPb2llr9ah+xvu25cb7N9679ThfoJ9Wv9orsoa+ftMuzfX1qzfx
7KW1c+h6C72uNbael17Xmmi81xlpku+X3qCuXt/oVcGzkOXCvbJhZ+uGWn1j
IZeG7dRy4fhzsq1W9xjheaaRtry+kQvnYOTCXTVy4cjVImfroTF//uZOlVal
m6bKa1N/cYwakihvbRrfXav3m5t/pV4H+PuRoJHa8iGuQQ7a8l6Bg/X183wG
DtXqAxMd0/T1yc8iT4scrco7bg7U6iFTLGs+tPWNka+nLn+i1UOSk0VuFnlZ
x9/Xu77LzcL1jK4VOUq1I98usE/V2jEvP/qh1g55WOq5o+fH83Vu0fNHautP
PRpRRKvDdDv/Kl1bn5wdcnfI2yFPh3wdcnXISfnGyE0hL4UcE0cj14Q8k396
H0JuBTkWyUZ+Bbkn5KCQf/K5dj7MV7/LDyA3oNmHeXI9N4K8CJ7vqprkA+Cf
8dA46AjDh+PFceL4XrwvzreX7BrvO/uQbL+4j/hrUJTMuJ7m0EOdFy/d/0x/
5R8gh/f/tefkJjFyicW6KU/G5YjYSZHjI1uFylE2vT0OrIiS7bMch68ZkSNG
mV/K2Nk4REbNyBfn0Oq0fO1a9+Dqpjmi1cHyP7s6+ck7rhtsfTLi5fYDPexd
1PWW75f0NaknLxLk9Vi1I/7qnHlaa8d8S2m9ndPv/q4Ya/J32yaeaRdWIFR4
paTVK9MwTD4euNLXyjtHRPVu2vPmyUhZ29vjS4dnsfLXIM/AvW+yRX7H7raP
SkfKlBbdT9cV8XJR+/Xt86/LFoHLMzrfGyVl5bCBRddXSpSuGetexlbJFo+/
uFF12cg/5SK74V/d7nBZ3p5T16pZcJbImFXurGfFSNHUtXy4+8kYufhFmWLO
Vjmiz5OE1pvi/5K3izx9/LB9onxmmXi90bgs8evGXIuVJ2PE2uTe49wrRspx
haKinaw+fO9SHRxTPv7epYvhb9V9r5PmS2qZfO9SrV/k4+9d4jPV8fPo4zwo
3I5av/invmuplo/41Hct2R58B15C3c/nfZxLbJ89MfZy1cuyQZGqx+8nBQqX
C6GnnoSq+yKvF7m7SqbKlb5dri0bHy6eDpw5cKpDhvh7v9OEmvvvyRIefSat
WHtWpIe9XPfYNU24DOrxlW/1VJG/fudjvQ+FiYIFKoQH9MgQdt80jBnX8bIo
Mq7CiZ9HanUmXdwrqf7Pzcm2/vpKvChSMXRt6zJ7hHvIGI/26j55xOP1P9eZ
kSCnFgrqdHxImDhypN3QH22zxaiit0ZOn5MiLS4UySt/MU6M8ZlvFu6TKU7H
NR7WzC1Vvrh+/vzXlpdEr36R2c0rPhDDnH99VdT8iriyp8nsjv3iRLEJzi/2
zM4UvgM890z7KlGsqzLjeHX13LnFbufOHeo48aoxYHuHTudEsR4b7StcDhTT
7Gs1LqOON9/JAT1mnLgok+ut+uH3oLPi7LCh7R1PqvuZG9vuuHZMFLXy2j58
fOEvYd3gzx+ujM0Sd7f1dT8u4sXzrbbbu1lFihG+g+dkrM0W4QmXbr4JOivr
h4Q1cjtxUdx9u7zrINXOtD7LOz9LiJO//mTVzNwtReQbbh2xUP2ukoM2LO0z
KVz+YjY447dSqaJh0uJuUb0yhG31hOf+z2JFm2ked0rKSJGWfWDEDrWddfbv
rfN8SJj80mt94a4z1P34y6jU71W/pcwOmrfzUqBcbuniZFftstg77dTOm2r/
FgpfLd5e3CNTqmVt/vFqvFgf/jZzRVK2iK2wc8qnPPv1ntLpU658adFkX9W+
6Dqt2xTVvrSxdNmmtf/jyte2antExrfdrdT2yCKizw1te6a4Tc0XoM7nfrP8
b6jtl7dazdW3f/74CpvV7xWrVhf4W/1e2aTrLx2039ujfrn2qn/ED61if1L9
I1/6Pjuh9c+ab2+mqv4UASvc7VR/ylpr2nXR+tM3PMtT9b+Mmbhwk+p/aTHR
+Ret/wPsF2Wr/SW35a+UrvaXnJT4pKW2vxiv75iM11+mPeik9ruwnbGoldrv
cn+JvR20/b76M98Xo17ExeS+IvnVkkB1vMnpC0f+po432cus0g7teBOxgcXN
za/IqMpLp6jjU46evutv7fgssC/BQR3PombpFinqeJYxBes80Y7nzdE2Dur4
F967Jz9Vx78MerbzC+34T9lws406X0S+5kNbqfNFdh8bOFw7X4LydpWbHhMv
x+fs9FqX7CdtLGxbvknOFrY/J19W56OM7pK9SZ2P8lnkUDftfMxyLltbnb/y
alyVrer8lYc9m4dq529Gpb+d1PkuqlZs1Fud7zLxcrud2vl+YGrvNHV9EPdu
xsaq64Pc1Wu+o3Z9qN3ZM1hdT4T9vtfb1PVENnpd8bR2PfEe2ce8iTrO2t50
K3tJHXfJ11zur1LHW0xkt3Lquir3HfQfra6rYsO2ofp19UW3y8U/5RbX7TZr
q67Pwvlg+Qfq+iyehK26qV2f+b6Ljcl99fxtkefUdV5GjA09oq7zovKQ2fp1
PrvTBBfteI43cX8vXxZup8YLYbc31EKNF8L+Qtly2njhZvN6hBpfxNwhjm/W
VUoUg3pUeq2NLzHV3rZU45FIDAyRajxSx+mqDtp4FP+nVV81folyv6flU+OX
sJxyTB+/nGyS2qrxTo64UryOGu9EtzEh+nh362vzCdq4POHiUXc1PoozgYf0
8dH69shMbVzuHpYVqsZT4X30pj6e2j8JmfIpx7fU+Y8VarwWc8t3qqvGa/F2
0Iqe2ni9t8rXYSXUda3ycU+73I7nRAPPnLUV1PYEL6v0RBuv+65J1tvfmhaj
t3/73faISSbb0ybYv9bC+QFy6eH5Fkm1Y4RjessXPq45wtF47jht8txh+5nn
ji6H0ruodoRT93F6O/fqVNXb8R7UP1cbnwYadaRvjTpS0+/4sH/PTluR+1fj
MHnI+atizc1C5T2L9f2Kqv78rfi9Xtp9RuYN35b7Vb+OyFzxh7b9OYc7dtV+
z53Y2/ryr/+8pi8f4BI2TduOayvjZs9Rv+/X2wVfatvD91ccTVwD36cbYTI/
8NgjLHiKut9qMrlgzTf+6vcdejtcu+9KLfi73v6jbV9uVe2LqBoP9N/7uRz7
Hcb2Z73bfsH25/379gu2f6nt8AeqH8TX07pp/SAG9IzX+2Fd9p/68VY1L12/
v5pusUY/3vz3vls/J6673m/lfnq3/r787/rzfvFKeju1y7zrT0vLbP0+7UKE
hX7cngkJ0tsZbOwn9Ryh7zf214miyfq/X5o4zbXFelv3VveFif2L7lipjuva
5x7kaMfbGKN+tbtJ/eqL10Jff3kN6a/WF/1eXtDX32M8D3qZPA96DvzRXK0v
LuZt1ttvU35rrrY+6/mZ1G0+6mKjr+95vEeA1v6k9kv09fd+pj6T/bTUpA7z
+Pzm1nVaxMhuczYPWL0wQG5bP2XZqXH///zP+++x+kU7+SX7iSp1Kvj+oq7T
t85kTXitrs/ehhs9bfrdWOP8aWriZRhvLpjUK/J82svk+dTP2kcfF+q6Hg1W
44JY2L+MPi6IS3nmr9Xx+jxyif684FJ9pv68MGfPol8XJSXJjn1DB45enioz
w1a5zar8QHQ4bDOzWqlLIu3ZkfAYdf+1Z5DVHks1Tt0xyZdmPJ3mtmG+Wl/m
a9D/iFpftHoxa5+2/sUq9r+p9oVDoU32qn0R1Hj7Qq1915C2/wrtEydLLttQ
JkmNk11yn+7wVuNjyNPiRT6V95JVuFVPhwNh8t5wf/lMjWNbbSqe81bj1wIb
/wa5atzy/2Xx3SX77snn26dfXTI+TaR1Hx+eqX7PzpcvWz5Qv2/SkC0WxdTf
7Wo1a6BaX5hVibutrd+i+bEUbf1Tu6evDN7yQCbaifuNTqXI8r75zEqPviZS
tzqmeEWmiNrVb42ct/WBtDhxYlD0yGvv3wOaGe8BqSNaVv7KXNWOOBI0xLzx
qRRh0WdZOa2dI81X3VXtyB5lSw1W7Yifum2ZpbWzOrDOGG17JszZkaS2R7xY
0u6etj03/+hyVG2/qPjNGaG2X/gdO2Cpbf+9tCpmWl2Qg0ldUPukceNV/4hq
te8Gqv4RBbu+StD6x3n60zeqn0WzMnMLqH4WqV2P+Gn9XCK7zaNP5cbQbj4z
d/3v7DPaP3RmgND62Tpl8GVtO4/nmt3XtjPRrsok7XkhL3huB+3+YaR38Abt
/mG58Rw733iu9TKeZy287Ry1+w2Hh1+6a88XvYp4bNfW/9zzeI/FRfO0/reY
GzBA67dKTk+ma/3Wref9s1p/jgrtOEbbL432jBiqLf+n8wa2xcR8bX8975z2
RtvvXmObV9D2V+VDpZZrx8NSv6OP1XKxbZHDa8vR/7z9KiZ5gANM8gDNjPe8
5M+8eTvvwKdyaVab5BDSzhcmOYEnjeNwgdHv7Af6//8BICbdZw==
    "]],
  AutomaticImageSize->True,
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{395.77351003033357`, 166.5865521494138},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-0.9999998571428571, 0.9999998571428571}, {-0.9999998571428571,
     0.9999998571428571}, {0, 1}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], Automatic},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{1.2023858770586933`, -3.1335691441805795`, 0.4301309350525889},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{
  3.690744419581819*^9, 3.690744470352895*^9, {3.6907446117638483`*^9, 
   3.6907446288363028`*^9}, 3.690745220259884*^9, {3.690805036733721*^9, 
   3.690805058058674*^9}},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJyUfQV4FVfX9f0SIO7unhDcSgV3AoEQEhIcEghR3N2tWHGHFqpUqVGjLXWl
LS11d/e3Tte/1p570/R96fd/b57n3Jk7d+ScM3vttfY+ZyaDymZVVUwum1U9
oSy134yyaVXVE2am9p06g5u8/8fl+p+NLpfrmlSX1sFV94f9bdKH+8v/Zb2Z
rXvjt99+g/vPNb7B7+m2HoDXX38dd999t2179913ceTIEVv/448/cOutt2Lv
3r04evQofvzxx/Me/+yzz+Lyyy+3bf/617/wzjvv2PpTTz2FAwcO4Ntvv8Wd
d96JG2+88TzHe+P06dN2fuebPpvgiiuuwNNPP237ffHFF1i/fr3qM+7/ePi+
ffvw4osv2n7ffPMNLr30UlWt4eGptt7Ieue7777DmTNndJpG7jOo0c8//3z9
GVSBX375xX2G991X+/XXX+u7tvF5trVzX+SHH36wOu3atQtXXXVVI/cBN9xw
A+655x7b96233sLWrVs9PfSuLYLw559/Wuft2bMHBw8exNdff227f/rppzh0
6JCd+Zprrqn//cMPP3S1d9dE+27atAmHDx92eS6pzty2bZtdlpfDc8899/dL
BlvH7d6923rloYcewpVXXmnVYPPx3nvvWXX2799vv/NwbNmyRY32XPX777/H
m2++6W65s021PXXqFN5++21XWcOrNcH111+PBx54oN561qxZg59++snL/bP6
3tOjqoTuA8926O8nkck+8cQTttfPP/9s95ut95xEVi1r4nnx0ksvYdWqVVp3
n+QadyVlCbrEv99Mz7ZWDS726KOP1l9s7dq1snEv94GPP/44lixZYndHPf3y
yy+7DjtXutoWgTh58qTdMJnExx9/XG9kMjpdUb/rDuj3Tz75xHPhu+66Czff
fLPtzs12b3///Xcvd1d/8MEHdoTqxDpf7lzzKvddZdfjsssuMzQKMrrWuXPn
rNXvv/++eQHP70K0zsTfW7pbpbu6Y8cOnDhxAtu3b1cr69Gmbl25cqWBVp1z
7733qgIdG/SroMSr8hvvg5caOL5h9ZrYMbfccou1jW3CunXr1CWeOyhzPX78
uP2s86nP+XOrBpb+yCOPyO7qLV23Ta5Il1YhwFzN3fvrCuoEVsapEj9lnzIM
tsTlZZ+NsGLFCrvU1KlTsXDhQm9s3ryZm7WpoqICGzZs0KXHOk2Z0cBm5Dud
mjvbhB31tr7luH9Rezzo1/48Nz766CNPk9Ub6hVPj+hnGsuIBk145pln5GXr
myC0eprgrU8vLF682Km1t5mL7vobb7zBb05XcV0uw7azA70beIkFCxbYBWQU
X375pWuM08rpbsek7pKNqghf+pMzkl1rqfrJWOXydPazZ8/Wt1yscscdd9S3
XHAlqL0adIycjKfl+vnzzz8f7G65fJDA7rTc+aSLw9KlS3XDePP06W2eRL6J
hdv06fSBaqg+aGR94Oyn1ujs/u5rqFUPPvigffNUi/fGrqE/OTidm4Y12umX
abYIsd7UrZJJEvrYuXNnvUUIoVrK9FQTeVC1xm3srmz3leRC1CKPX5DTa+AT
H3vssXrC9fxM0Pds0D86g3rGy90/Tz75pB3C+rv7p5FBdtmyZda9rLG3u4tk
1HJAwouXfZp5YebMmX/rIpmuSLPhNt1stzN3d5uPdZv8oduNGiYFIHoz1yin
72ps4Ws+SopBbVcRoamn1Zprr73Wy30VVVj+r+HNoTgxP+T5k4965ZVXst0G
LZ8oj+bRM/fdd5/L+zy/yTbYeNeF7kvJM+rq7D+nF1lLuTk1SM5BRYiTXdT3
IxHDnTdu3Pgf/ahtug0kOpef+xKqOTWBDMMV494m/AlEf7XQu2E/uqvujauv
vhrHjh2TsblG/L0vdbh8uhCuonU5cbcn9ZxVDCXp0bAvP/vsM3MlogJBW40k
/nLch+jMwt9rr71Wz5Papn7iVVwtGvSdTPWf+k72p+V/9J2v9RNvkRmEimTG
5MmTdUfVd56uu//++/HCCy/Yt6b/2E2NzPSuu+46Oy27drjTU33dRwidbo1c
76Gkh6XOPH9CNHHlMRl1qPyjDFSWJpAV/Vuz2UX85nyKFVWp5cuX17snT7Md
1J2/3Tq3jhUIaCe+7kvIYmUy+nbBedrtuSu6sfJSEnmlTqO72iLA7q2sR6cS
OQkUsjr9SdzIAcp16SZ7OkUsqv30J6mm2tOFeXpZ1qUKa0mu6++uhGhP/sNR
DP97f8iTOf0hKexrTlIcKJ+hIsUqXaWGNegPyX8JE33rcZ7+8LCwjFm+Vq6n
pGF/BOKrr76yrhIaVWMdLqOQclUtyIB2VeGFfsbjV7SLPNVNN91kmpi05fKE
ELI6nVI+RXYvNuT+l5y3X5zPhx9+GKtXr5Zbru8XuWjBxPEqTr/IHBv2i2ol
x/lv/aLTiWv0zYMZ1eT222//x77yHCv7cnO0q9jpq47uhonG1FhZv4rWCUOP
S1FXqkKKFz0SUbGgJ6704Il3I8dtOvLc2uXVV19VJRq7e1dOXnpdRZBjl7k8
kk+9q+4j1Nzd52vtFZury2ha1m2edXZfI+s9H2MpuUOZg3pNRqteJHLrmy81
KfWjb1HubaJ0Gff/3nV/uRtVhZ1R9PfeE3KEZ90rFa3XK93z954oVW7e8ydw
UluUNugK1dXpCn02qu8KoYpd4G1QCzQxJxDpCipab9gdugFytFRr6g5Pb+js
7pDHVXGelnv4Xx5CJk+2cA11mt3F3SncZG1TZ7NtnqZJeLldmf2pUvQ5A/+t
aby4u2neDZtGkLBxXtY486GehvEHff79XqvIVSiOaXivJcnkCwlOt7z9e+sC
3NtkIzIlwsJV+PfWSayrZXIVvMGe1omvdDX9iWakrehJutvPvuZc1BrRhYq6
WN8lj9g6w77Lbp3npjmM3aBdEnsqgoduHKFSD3VpaAXv+rboPO0KbGByugd0
C64hf2+X5Le8gKrQoF3qMR0ho5Q/lnTiGTu4TygicbeH35xPAWLRokVu1+Y0
TBWRPxYsvdR/bkHiIR7Tsm7/LrNyeu0vy6AmFIHVN1h+zZMKOl+DgxoAVFWX
FfF2OIGFq5v7CIFS7Xa+OUeIIuVJ3Q4q1/2jbqA8hcSNl7uh+u5uLA+UkXpj
2rRpmDFjhjXR01BZ62233WaW6O3+VOXlTRs2VBrbE55EurfJC0n5/1NDQxoc
68HjIKeVk9wt8og8qTaSspfqzSPULbpNDrj02UgxpDGzzj59+nQvmbS7Abrx
qnojdwOUivr3Biif5AkKDp2nsqHubRI8qizx7sp3KjvSfSI5D/WB+tbd3wYW
JY9YWxMPtAJVVNiRDens6nbBT+BRTUlc7q5uZKBR/CW8kQQ8JiTHJ1mpb9ed
p7Jh7m06XPpHhO84q/rkgkdSOVD5z22x9uljWRbdAdVARQ2SRli4cKEjh/jp
aZFjOE6/V1ZWGmqo4p2sD5lSolOSTn86F+OZelRI8ctd6Nvt52lShHub0CQ3
qGA/z2mSk0IOsqoJlOpMT15VzZG0EQY8l9VltI+CfY93UTN17/i747zdEZya
5jRSn03sJulYXUdFv9NfNvrrrnlaWB8SidzcopX96WwTvXqg4bFA6QfPTT1f
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
LCfGNMKsC13IS6Ffi3MhyK8JLiLeo2LikJbu2GA6gdyhvePbdG93sLz08quy
vd//8D2PsaW6tyk6l4KWPOj0n/5MhqVB07gGxqZQ6XzG1uYvYwsyQ9uxR5U5
gEmV1aooUtIy0JSOS5bmoSVZ2e58b1xRJCu7YmgjRji3jmbcXuOPeyaGYO6g
dMwcmCnzwZNVfni00h+PVvlz38eqaGMPT+LHI5X+tKdHKgO4jbZX44cNRQkY
3ysHV4+JxDP8zqP/sj1vs8w0s0yu0ZD86NX8zXhkwB5jk8N6qiYQT3L5iBxX
ZTA203HJUC/jcu+IONT1z0RvOq+6/llmhLoHfS9pxSpnmJHd4XZg99LQXqId
kTKde87yktEntxJEZlMz/LGuKAUzeKy810tTAxvhzNRAGWMg9dxL0wJtnzdY
XpsRgBemBhntLi5IQy2vf2hUHC4roe11bmVGvpr2OqlvDsGQQEMPx92sx9N1
wXbt13kOHXvWbdsPVoVidM9cOt0Iblf30pMTZGfoz+XTtaRLx+vT/ayuz08J
xLOTg3D12GjsGJ6EXSOSMKRbawzv2RIF3dog/6Is7C4MEG2T0hvj8kJv9HYL
uL604zZp4eKyjHRafu3kqWYqe/btZ/z3itdf0228LbL0mKxHfCn4UEyjfNvF
/2myilv1LfEfTFbRlMdkPaOtUtOKF1548SVlgPYcIFtMqqpmBdOQydLKY7GE
X1U7Fy4dEIjebVMxvUc4bh/dRP7QbO/xKn+qI3+cklk+NMmfxnyKXx+c6K9v
NGBfXDo0HmW9snF0VASe4HftZXbMnqAhmxk/6hRvnZPAfrbWjywZh1E9muKK
UVHkbT/u/Fydn2w6kLHQE3Sbj7I8UhWEa8ZGYt3QJLPQ4m7NMYGUqvXCrs3R
n15JLnFZgeMOq+kOJ9JCZDUnJoZTrIWbtT5ZG0wr8zPLGdurKW6jVdDqvHXr
vetNko54WiA7WHb5BmXf+uJks3vZ1cvTZauyb4pCVzjO8rvs9fSUYDxaE2pX
vKwkCVu5HNS5JYZ0bYF1xSkUADkY0ysX91aG4z6WZ7m/zi1pyfN56eRs+9lp
gXZZd/EyhCTRkgNwil52NM9wO+XD2zP9zNKJJPPSp6pDieBE7CY9iApEDauH
OrWeTvq6fYJQEmbIv5W0oNqoP4SQM26t8SrF7Gu8zutcPjjBhy28Y7Q3Hd5d
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
8dKqF64fo1TIDWNCcCO1oAaENg6lUO7aDDeMDeX3UNzCcny8rXvhtjJ+UP25
4qjJQ3EXe/tOLjX2uLQghYGyr2k/BVpyeErRyvm9aiPhzp19dYYz6qgExJGx
cRZHnJ0RbAH8q7SW12YqIRCktJpGJWcrIewJjJow8hFeElBJVy73LgyRVhxI
JdtXD/Oo0N7x6eJgs/jvCIlfV9JTjknGvIIs/h6Cd+aH2vfdhM/WEakWvimb
OntwNmYMysH1ExPw6pxwwioEP68MxA/LyTyLKZr7kPbqYvAjv3+5JLgxL8A6
cM0VgS+WBOMLXlPQ/XF5ILdSAS4IwcAurTCBKlTImjnIYbwlhRTC0yJxdla4
seR3S8VcgW62czOa8KYhDFHaDtLYyqJ0l7xRsCsR15fHGbUJW4WkoPmUpYrG
FG8+PTnU6KpeN850dKIis/WM5pTuOFkVboO0p6pCbShOOCxihLZ8SKqNc51k
1LVs0kAcq2stTai5aP6uWMZcvJnTfCn9wshWTRmsZdqoydrCRPQhg2kksopl
d2kMYRVCWRRM1iIUq1V88HSVL2N8jVQG4PDIWJR1ikFIUACqayfj7CuveR5B
eO211yyy0lT5lv88g8BRiRH2SEF6ajJioyIwgEpoZr8kzO6XgHn94zGLy5n9
EjGjbxJW50fhyhJ/XF3qj0PFQRjXIwM9LmyFVfnRuH6EL24YoRQeUejyI0Z9
cNtoH9w+WgFaE9w00h8jumdjeLds3DTKH3eO9WFtbh3jRyK7bYzSJU6RZDxZ
5ov1Q2IZYmXjtrGUgBN8GYr5KRPiclIhcZZSfGCiUx6scFKIW6gFJvTOJvc7
MxUerdKsBX/KQ3/LJD5R448nlTGsVYrQybI/Uh2McobNB9mbgt9pJzVomUEb
VGJbzjhjSZbQsJQ5AwvlxXaOoIahOpTi8cIbs2Vsb86xtADeNuX3jqP8go3E
SCZfUJl5cGTwI+94CWmMpb+i3X9Pu/9umUNdnxIv99SQAkam4sDYZMwtyDbG
lhLTeOUcfte2ZUWZeHF2JN6YF0GsBePXVUH4F5ffLw/Bd8tDxIghVJ4/rAjB
uwvCUdE/Fw9PicUvq1Tdb5eHuCK1h3bVNzv0J57iq6U0vxqHIWsHNMUgXnJx
YRamkNhEbh8L2isEbTdjEr6fE76fq0UkTbpH8yILg6x8yZZLl35IHXqiMsaS
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
Wf0xPq6ufKr+2+pf/wd7Ktuv\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TransformedDistribution", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"r", " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
     RowBox[{"r", " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"r", "\[Distributed]", 
      RowBox[{"UniformDistribution", "[", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], "]"}]}], ",", 
     RowBox[{"\[Theta]", "\[Distributed]", 
      RowBox[{"UniformDistribution", "[", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"2", "\[Pi]"}]}], "}"}], "]"}]}]}], "}"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.690813360561206*^9, 3.690813420861229*^9}}],

Cell[BoxData[
 RowBox[{"TransformedDistribution", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[FormalX]1", " ", 
      RowBox[{"Cos", "[", "\[FormalX]2", "]"}]}], ",", 
     RowBox[{"\[FormalX]1", " ", 
      RowBox[{"Sin", "[", "\[FormalX]2", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[FormalX]1", "\[Distributed]", 
      RowBox[{"UniformDistribution", "[", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], "]"}]}], ",", 
     RowBox[{"\[FormalX]2", "\[Distributed]", 
      RowBox[{"UniformDistribution", "[", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"2", " ", "\[Pi]"}]}], "}"}], "]"}]}]}], "}"}]}], 
  "]"}]], "Output",
 CellChangeTimes->{3.690813421210472*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"d10e5", "=", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{
     RowBox[{"TransformedDistribution", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"r", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
         RowBox[{"r", " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"r", "\[Distributed]", 
          RowBox[{"UniformDistribution", "[", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}], "]"}]}], ",", 
         RowBox[{"\[Theta]", "\[Distributed]", 
          RowBox[{"UniformDistribution", "[", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"2", "\[Pi]"}]}], "}"}], "]"}]}]}], "}"}]}], "]"}], ",", 
     "1000000"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Histogram3D", "[", 
  RowBox[{"d10e5", ",", 
   RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Speed\>\""}]}], "]"}]}], "Input",\

 CellChangeTimes->{{3.69081348092243*^9, 3.690813501952256*^9}, {
   3.690813627075473*^9, 3.690813641460453*^9}, {3.6908138403956127`*^9, 
   3.690813878760903*^9}, 3.6908139134718*^9, 3.690813944557424*^9}],

Cell[BoxData[
 Graphics3DBox[
  {RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], EdgeForm[
   RGBColor[0.880722, 0.611041, 0.142051]], 
   StyleBox[{{}, 
     {RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], EdgeForm[
      RGBColor[0.880722, 0.611041, 0.142051]], 
      StyleBox[{{{}, CuboidBox[{-1., -0.5, 0.}, {-0.9, -0.4, 46.}]}, {{}, 
         CuboidBox[{-1., -0.4, 0.}, {-0.9, -0.3, 535.}]}, {{}, 
         CuboidBox[{-1., -0.3, 0.}, {-0.9, -0.2, 1083.}]}, {{}, 
         CuboidBox[{-1., -0.2, 0.}, {-0.9, -0.1, 1437.}]}, {{}, 
         CuboidBox[{-1., -0.1, 0.}, {-0.9, 0., 1632.}]}, {{}, 
         CuboidBox[{-1., 0., 0.}, {-0.9, 0.1, 1601.}]}, {{}, 
         CuboidBox[{-1., 0.1, 0.}, {-0.9, 0.2, 1435.}]}, {{}, 
         CuboidBox[{-1., 0.2, 0.}, {-0.9, 0.3, 1121.}]}, {{}, 
         CuboidBox[{-1., 0.3, 0.}, {-0.9, 0.4, 596.}]}, {{}, 
         CuboidBox[{-1., 0.4, 0.}, {-0.9, 0.5, 50.}]}, {{}, 
         CuboidBox[{-0.9, -0.6, 0.}, {-0.8, -0.5, 546.}]}, {{}, 
         CuboidBox[{-0.9, -0.5, 0.}, {-0.8, -0.4, 1578.}]}, {{}, 
         CuboidBox[{-0.9, -0.4, 0.}, {-0.8, -0.3, 1742.}]}, {{}, 
         CuboidBox[{-0.9, -0.3, 0.}, {-0.8, -0.2, 1882.}]}, {{}, 
         CuboidBox[{-0.9, -0.2, 0.}, {-0.8, -0.1, 1830.}]}, {{}, 
         CuboidBox[{-0.9, -0.1, 0.}, {-0.8, 0., 1921.}]}, {{}, 
         CuboidBox[{-0.9, 0., 0.}, {-0.8, 0.1, 1839.}]}, {{}, 
         CuboidBox[{-0.9, 0.1, 0.}, {-0.8, 0.2, 1825.}]}, {{}, 
         CuboidBox[{-0.9, 0.2, 0.}, {-0.8, 0.3, 1821.}]}, {{}, 
         CuboidBox[{-0.9, 0.3, 0.}, {-0.8, 0.4, 1759.}]}, {{}, 
         CuboidBox[{-0.9, 0.4, 0.}, {-0.8, 0.5, 1499.}]}, {{}, 
         CuboidBox[{-0.9, 0.5, 0.}, {-0.8, 0.6, 548.}]}, {{}, 
         CuboidBox[{-0.8, -0.8, 0.}, {-0.7, -0.7, 15.}]}, {{}, 
         CuboidBox[{-0.8, -0.7, 0.}, {-0.7, -0.6, 946.}]}, {{}, 
         CuboidBox[{-0.8, -0.6, 0.}, {-0.7, -0.5, 1709.}]}, {{}, 
         CuboidBox[{-0.8, -0.5, 0.}, {-0.7, -0.4, 1841.}]}, {{}, 
         CuboidBox[{-0.8, -0.4, 0.}, {-0.7, -0.3, 1903.}]}, {{}, 
         CuboidBox[{-0.8, -0.3, 0.}, {-0.7, -0.2, 1975.}]}, {{}, 
         CuboidBox[{-0.8, -0.2, 0.}, {-0.7, -0.1, 2143.}]}, {{}, 
         CuboidBox[{-0.8, -0.1, 0.}, {-0.7, 0., 2180.}]}, {{}, 
         CuboidBox[{-0.8, 0., 0.}, {-0.7, 0.1, 2163.}]}, {{}, 
         CuboidBox[{-0.8, 0.1, 0.}, {-0.7, 0.2, 2121.}]}, {{}, 
         CuboidBox[{-0.8, 0.2, 0.}, {-0.7, 0.3, 2020.}]}, {{}, 
         CuboidBox[{-0.8, 0.3, 0.}, {-0.7, 0.4, 1853.}]}, {{}, 
         CuboidBox[{-0.8, 0.4, 0.}, {-0.7, 0.5, 1839.}]}, {{}, 
         CuboidBox[{-0.8, 0.5, 0.}, {-0.7, 0.6, 1708.}]}, {{}, 
         CuboidBox[{-0.8, 0.6, 0.}, {-0.7, 0.7, 944.}]}, {{}, 
         CuboidBox[{-0.8, 0.7, 0.}, {-0.7, 0.8, 6.}]}, {{}, 
         CuboidBox[{-0.7, -0.8, 0.}, {-0.6, -0.7, 1022.}]}, {{}, 
         CuboidBox[{-0.7, -0.7, 0.}, {-0.6, -0.6, 1743.}]}, {{}, 
         CuboidBox[{-0.7, -0.6, 0.}, {-0.6, -0.5, 1844.}]}, {{}, 
         CuboidBox[{-0.7, -0.5, 0.}, {-0.6, -0.4, 2018.}]}, {{}, 
         CuboidBox[{-0.7, -0.4, 0.}, {-0.6, -0.3, 2121.}]}, {{}, 
         CuboidBox[{-0.7, -0.3, 0.}, {-0.6, -0.2, 2319.}]}, {{}, 
         CuboidBox[{-0.7, -0.2, 0.}, {-0.6, -0.1, 2519.}]}, {{}, 
         CuboidBox[{-0.7, -0.1, 0.}, {-0.6, 0., 2438.}]}, {{}, 
         CuboidBox[{-0.7, 0., 0.}, {-0.6, 0.1, 2397.}]}, {{}, 
         CuboidBox[{-0.7, 0.1, 0.}, {-0.6, 0.2, 2486.}]}, {{}, 
         CuboidBox[{-0.7, 0.2, 0.}, {-0.6, 0.3, 2272.}]}, {{}, 
         CuboidBox[{-0.7, 0.3, 0.}, {-0.6, 0.4, 2099.}]}, {{}, 
         CuboidBox[{-0.7, 0.4, 0.}, {-0.6, 0.5, 1982.}]}, {{}, 
         CuboidBox[{-0.7, 0.5, 0.}, {-0.6, 0.6, 1862.}]}, {{}, 
         CuboidBox[{-0.7, 0.6, 0.}, {-0.6, 0.7, 1743.}]}, {{}, 
         CuboidBox[{-0.7, 0.7, 0.}, {-0.6, 0.8, 962.}]}, {{}, 
         CuboidBox[{-0.6, -0.9, 0.}, {-0.5, -0.8, 560.}]}, {{}, 
         CuboidBox[{-0.6, -0.8, 0.}, {-0.5, -0.7, 1720.}]}, {{}, 
         CuboidBox[{-0.6, -0.7, 0.}, {-0.5, -0.6, 1814.}]}, {{}, 
         CuboidBox[{-0.6, -0.6, 0.}, {-0.5, -0.5, 2017.}]}, {{}, 
         CuboidBox[{-0.6, -0.5, 0.}, {-0.5, -0.4, 2237.}]}, {{}, 
         CuboidBox[{-0.6, -0.4, 0.}, {-0.5, -0.3, 2485.}]}, {{}, 
         CuboidBox[{-0.6, -0.3, 0.}, {-0.5, -0.2, 2583.}]}, {{}, 
         CuboidBox[{-0.6, -0.2, 0.}, {-0.5, -0.1, 2720.}]}, {{}, 
         CuboidBox[{-0.6, -0.1, 0.}, {-0.5, 0., 2915.}]}, {{}, 
         CuboidBox[{-0.6, 0., 0.}, {-0.5, 0.1, 2929.}]}, {{}, 
         CuboidBox[{-0.6, 0.1, 0.}, {-0.5, 0.2, 2821.}]}, {{}, 
         CuboidBox[{-0.6, 0.2, 0.}, {-0.5, 0.3, 2614.}]}, {{}, 
         CuboidBox[{-0.6, 0.3, 0.}, {-0.5, 0.4, 2330.}]}, {{}, 
         CuboidBox[{-0.6, 0.4, 0.}, {-0.5, 0.5, 2245.}]}, {{}, 
         CuboidBox[{-0.6, 0.5, 0.}, {-0.5, 0.6, 2079.}]}, {{}, 
         CuboidBox[{-0.6, 0.6, 0.}, {-0.5, 0.7, 1803.}]}, {{}, 
         CuboidBox[{-0.6, 0.7, 0.}, {-0.5, 0.8, 1738.}]}, {{}, 
         CuboidBox[{-0.6, 0.8, 0.}, {-0.5, 0.9, 569.}]}, {{}, 
         CuboidBox[{-0.5, -1., 0.}, {-0.4, -0.9, 40.}]}, {{}, 
         CuboidBox[{-0.5, -0.9, 0.}, {-0.4, -0.8, 1504.}]}, {{}, 
         CuboidBox[{-0.5, -0.8, 0.}, {-0.4, -0.7, 1956.}]}, {{}, 
         CuboidBox[{-0.5, -0.7, 0.}, {-0.4, -0.6, 2042.}]}, {{}, 
         CuboidBox[{-0.5, -0.6, 0.}, {-0.4, -0.5, 2204.}]}, {{}, 
         CuboidBox[{-0.5, -0.5, 0.}, {-0.4, -0.4, 2469.}]}, {{}, 
         CuboidBox[{-0.5, -0.4, 0.}, {-0.4, -0.3, 2841.}]}, {{}, 
         CuboidBox[{-0.5, -0.3, 0.}, {-0.4, -0.2, 3120.}]}, {{}, 
         CuboidBox[{-0.5, -0.2, 0.}, {-0.4, -0.1, 3398.}]}, {{}, 
         CuboidBox[{-0.5, -0.1, 0.}, {-0.4, 0., 3563.}]}, {{}, 
         CuboidBox[{-0.5, 0., 0.}, {-0.4, 0.1, 3346.}]}, {{}, 
         CuboidBox[{-0.5, 0.1, 0.}, {-0.4, 0.2, 3369.}]}, {{}, 
         CuboidBox[{-0.5, 0.2, 0.}, {-0.4, 0.3, 3039.}]}, {{}, 
         CuboidBox[{-0.5, 0.3, 0.}, {-0.4, 0.4, 2763.}]}, {{}, 
         CuboidBox[{-0.5, 0.4, 0.}, {-0.4, 0.5, 2451.}]}, {{}, 
         CuboidBox[{-0.5, 0.5, 0.}, {-0.4, 0.6, 2248.}]}, {{}, 
         CuboidBox[{-0.5, 0.6, 0.}, {-0.4, 0.7, 2064.}]}, {{}, 
         CuboidBox[{-0.5, 0.7, 0.}, {-0.4, 0.8, 1796.}]}, {{}, 
         CuboidBox[{-0.5, 0.8, 0.}, {-0.4, 0.9, 1531.}]}, {{}, 
         CuboidBox[{-0.5, 0.9, 0.}, {-0.4, 1., 45.}]}, {{}, 
         CuboidBox[{-0.4, -1., 0.}, {-0.3, -0.9, 590.}]}, {{}, 
         CuboidBox[{-0.4, -0.9, 0.}, {-0.3, -0.8, 1707.}]}, {{}, 
         CuboidBox[{-0.4, -0.8, 0.}, {-0.3, -0.7, 1945.}]}, {{}, 
         CuboidBox[{-0.4, -0.7, 0.}, {-0.3, -0.6, 2190.}]}, {{}, 
         CuboidBox[{-0.4, -0.6, 0.}, {-0.3, -0.5, 2398.}]}, {{}, 
         CuboidBox[{-0.4, -0.5, 0.}, {-0.3, -0.4, 2866.}]}, {{}, 
         CuboidBox[{-0.4, -0.4, 0.}, {-0.3, -0.3, 3164.}]}, {{}, 
         CuboidBox[{-0.4, -0.3, 0.}, {-0.3, -0.2, 3687.}]}, {{}, 
         CuboidBox[{-0.4, -0.2, 0.}, {-0.3, -0.1, 4167.}]}, {{}, 
         CuboidBox[{-0.4, -0.1, 0.}, {-0.3, 0., 4514.}]}, {{}, 
         CuboidBox[{-0.4, 0., 0.}, {-0.3, 0.1, 4412.}]}, {{}, 
         CuboidBox[{-0.4, 0.1, 0.}, {-0.3, 0.2, 4239.}]}, {{}, 
         CuboidBox[{-0.4, 0.2, 0.}, {-0.3, 0.3, 3741.}]}, {{}, 
         CuboidBox[{-0.4, 0.3, 0.}, {-0.3, 0.4, 3266.}]}, {{}, 
         CuboidBox[{-0.4, 0.4, 0.}, {-0.3, 0.5, 2755.}]}, {{}, 
         CuboidBox[{-0.4, 0.5, 0.}, {-0.3, 0.6, 2397.}]}, {{}, 
         CuboidBox[{-0.4, 0.6, 0.}, {-0.3, 0.7, 2095.}]}, {{}, 
         CuboidBox[{-0.4, 0.7, 0.}, {-0.3, 0.8, 1960.}]}, {{}, 
         CuboidBox[{-0.4, 0.8, 0.}, {-0.3, 0.9, 1739.}]}, {{}, 
         CuboidBox[{-0.4, 0.9, 0.}, {-0.3, 1., 595.}]}, {{}, 
         CuboidBox[{-0.3, -1., 0.}, {-0.2, -0.9, 1086.}]}, {{}, 
         CuboidBox[{-0.3, -0.9, 0.}, {-0.2, -0.8, 1814.}]}, {{}, 
         CuboidBox[{-0.3, -0.8, 0.}, {-0.2, -0.7, 2035.}]}, {{}, 
         CuboidBox[{-0.3, -0.7, 0.}, {-0.2, -0.6, 2290.}]}, {{}, 
         CuboidBox[{-0.3, -0.6, 0.}, {-0.2, -0.5, 2699.}]}, {{}, 
         CuboidBox[{-0.3, -0.5, 0.}, {-0.2, -0.4, 3144.}]}, {{}, 
         CuboidBox[{-0.3, -0.4, 0.}, {-0.2, -0.3, 3656.}]}, {{}, 
         CuboidBox[{-0.3, -0.3, 0.}, {-0.2, -0.2, 4551.}]}, {{}, 
         CuboidBox[{-0.3, -0.2, 0.}, {-0.2, -0.1, 5367.}]}, {{}, 
         CuboidBox[{-0.3, -0.1, 0.}, {-0.2, 0., 6345.}]}, {{}, 
         CuboidBox[{-0.3, 0., 0.}, {-0.2, 0.1, 6328.}]}, {{}, 
         CuboidBox[{-0.3, 0.1, 0.}, {-0.2, 0.2, 5506.}]}, {{}, 
         CuboidBox[{-0.3, 0.2, 0.}, {-0.2, 0.3, 4522.}]}, {{}, 
         CuboidBox[{-0.3, 0.3, 0.}, {-0.2, 0.4, 3752.}]}, {{}, 
         CuboidBox[{-0.3, 0.4, 0.}, {-0.2, 0.5, 3059.}]}, {{}, 
         CuboidBox[{-0.3, 0.5, 0.}, {-0.2, 0.6, 2787.}]}, {{}, 
         CuboidBox[{-0.3, 0.6, 0.}, {-0.2, 0.7, 2274.}]}, {{}, 
         CuboidBox[{-0.3, 0.7, 0.}, {-0.2, 0.8, 2049.}]}, {{}, 
         CuboidBox[{-0.3, 0.8, 0.}, {-0.2, 0.9, 1719.}]}, {{}, 
         CuboidBox[{-0.3, 0.9, 0.}, {-0.2, 1., 1113.}]}, {{}, 
         CuboidBox[{-0.2, -1., 0.}, {-0.1, -0.9, 1483.}]}, {{}, 
         CuboidBox[{-0.2, -0.9, 0.}, {-0.1, -0.8, 1894.}]}, {{}, 
         CuboidBox[{-0.2, -0.8, 0.}, {-0.1, -0.7, 2009.}]}, {{}, 
         CuboidBox[{-0.2, -0.7, 0.}, {-0.1, -0.6, 2368.}]}, {{}, 
         CuboidBox[{-0.2, -0.6, 0.}, {-0.1, -0.5, 2664.}]}, {{}, 
         CuboidBox[{-0.2, -0.5, 0.}, {-0.1, -0.4, 3376.}]}, {{}, 
         CuboidBox[{-0.2, -0.4, 0.}, {-0.1, -0.3, 4204.}]}, {{}, 
         CuboidBox[{-0.2, -0.3, 0.}, {-0.1, -0.2, 5534.}]}, {{}, 
         CuboidBox[{-0.2, -0.2, 0.}, {-0.1, -0.1, 7653.}]}, {{}, 
         CuboidBox[{-0.2, -0.1, 0.}, {-0.1, 0., 10376.}]}, {{}, 
         CuboidBox[{-0.2, 0., 0.}, {-0.1, 0.1, 10453.}]}, {{}, 
         CuboidBox[{-0.2, 0.1, 0.}, {-0.1, 0.2, 7506.}]}, {{}, 
         CuboidBox[{-0.2, 0.2, 0.}, {-0.1, 0.3, 5446.}]}, {{}, 
         CuboidBox[{-0.2, 0.3, 0.}, {-0.1, 0.4, 4170.}]}, {{}, 
         CuboidBox[{-0.2, 0.4, 0.}, {-0.1, 0.5, 3316.}]}, {{}, 
         CuboidBox[{-0.2, 0.5, 0.}, {-0.1, 0.6, 2692.}]}, {{}, 
         CuboidBox[{-0.2, 0.6, 0.}, {-0.1, 0.7, 2384.}]}, {{}, 
         CuboidBox[{-0.2, 0.7, 0.}, {-0.1, 0.8, 2102.}]}, {{}, 
         CuboidBox[{-0.2, 0.8, 0.}, {-0.1, 0.9, 1873.}]}, {{}, 
         CuboidBox[{-0.2, 0.9, 0.}, {-0.1, 1., 1450.}]}, {{}, 
         CuboidBox[{-0.1, -1., 0.}, {0., -0.9, 1580.}]}, {{}, 
         CuboidBox[{-0.1, -0.9, 0.}, {0., -0.8, 1853.}]}, {{}, 
         CuboidBox[{-0.1, -0.8, 0.}, {0., -0.7, 2212.}]}, {{}, 
         CuboidBox[{-0.1, -0.7, 0.}, {0., -0.6, 2496.}]}, {{}, 
         CuboidBox[{-0.1, -0.6, 0.}, {0., -0.5, 2894.}]}, {{}, 
         CuboidBox[{-0.1, -0.5, 0.}, {0., -0.4, 3440.}]}, {{}, 
         CuboidBox[{-0.1, -0.4, 0.}, {0., -0.3, 4594.}]}, {{}, 
         CuboidBox[{-0.1, -0.3, 0.}, {0., -0.2, 6277.}]}, {{}, 
         CuboidBox[{-0.1, -0.2, 0.}, {0., -0.1, 10428.}]}, {{}, 
         CuboidBox[{-0.1, -0.1, 0.}, {0., 0., 28152.}]}, {{}, 
         CuboidBox[{-0.1, 0., 0.}, {0., 0.1, 27867.}]}, {{}, 
         CuboidBox[{-0.1, 0.1, 0.}, {0., 0.2, 10228.}]}, {{}, 
         CuboidBox[{-0.1, 0.2, 0.}, {0., 0.3, 6325.}]}, {{}, 
         CuboidBox[{-0.1, 0.3, 0.}, {0., 0.4, 4463.}]}, {{}, 
         CuboidBox[{-0.1, 0.4, 0.}, {0., 0.5, 3585.}]}, {{}, 
         CuboidBox[{-0.1, 0.5, 0.}, {0., 0.6, 2891.}]}, {{}, 
         CuboidBox[{-0.1, 0.6, 0.}, {0., 0.7, 2433.}]}, {{}, 
         CuboidBox[{-0.1, 0.7, 0.}, {0., 0.8, 2150.}]}, {{}, 
         CuboidBox[{-0.1, 0.8, 0.}, {0., 0.9, 1879.}]}, {{}, 
         CuboidBox[{-0.1, 0.9, 0.}, {0., 1., 1636.}]}, {{}, 
         CuboidBox[{0., -1., 0.}, {0.1, -0.9, 1642.}]}, {{}, 
         CuboidBox[{0., -0.9, 0.}, {0.1, -0.8, 1874.}]}, {{}, 
         CuboidBox[{0., -0.8, 0.}, {0.1, -0.7, 2077.}]}, {{}, 
         CuboidBox[{0., -0.7, 0.}, {0.1, -0.6, 2482.}]}, {{}, 
         CuboidBox[{0., -0.6, 0.}, {0.1, -0.5, 2849.}]}, {{}, 
         CuboidBox[{0., -0.5, 0.}, {0.1, -0.4, 3586.}]}, {{}, 
         CuboidBox[{0., -0.4, 0.}, {0.1, -0.3, 4495.}]}, {{}, 
         CuboidBox[{0., -0.3, 0.}, {0.1, -0.2, 6199.}]}, {{}, 
         CuboidBox[{0., -0.2, 0.}, {0.1, -0.1, 10032.}]}, {{}, 
         CuboidBox[{0., -0.1, 0.}, {0.1, 0., 28230.}]}, {{}, 
         CuboidBox[{0., 0., 0.}, {0.1, 0.1, 27881.}]}, {{}, 
         CuboidBox[{0., 0.1, 0.}, {0.1, 0.2, 10196.}]}, {{}, 
         CuboidBox[{0., 0.2, 0.}, {0.1, 0.3, 6489.}]}, {{}, 
         CuboidBox[{0., 0.3, 0.}, {0.1, 0.4, 4477.}]}, {{}, 
         CuboidBox[{0., 0.4, 0.}, {0.1, 0.5, 3557.}]}, {{}, 
         CuboidBox[{0., 0.5, 0.}, {0.1, 0.6, 2992.}]}, {{}, 
         CuboidBox[{0., 0.6, 0.}, {0.1, 0.7, 2398.}]}, {{}, 
         CuboidBox[{0., 0.7, 0.}, {0.1, 0.8, 2140.}]}, {{}, 
         CuboidBox[{0., 0.8, 0.}, {0.1, 0.9, 1753.}]}, {{}, 
         CuboidBox[{0., 0.9, 0.}, {0.1, 1., 1635.}]}, {{}, 
         CuboidBox[{0.1, -1., 0.}, {0.2, -0.9, 1521.}]}, {{}, 
         CuboidBox[{0.1, -0.9, 0.}, {0.2, -0.8, 1832.}]}, {{}, 
         CuboidBox[{0.1, -0.8, 0.}, {0.2, -0.7, 2072.}]}, {{}, 
         CuboidBox[{0.1, -0.7, 0.}, {0.2, -0.6, 2423.}]}, {{}, 
         CuboidBox[{0.1, -0.6, 0.}, {0.2, -0.5, 2712.}]}, {{}, 
         CuboidBox[{0.1, -0.5, 0.}, {0.2, -0.4, 3357.}]}, {{}, 
         CuboidBox[{0.1, -0.4, 0.}, {0.2, -0.3, 4163.}]}, {{}, 
         CuboidBox[{0.1, -0.3, 0.}, {0.2, -0.2, 5583.}]}, {{}, 
         CuboidBox[{0.1, -0.2, 0.}, {0.2, -0.1, 7561.}]}, {{}, 
         CuboidBox[{0.1, -0.1, 0.}, {0.2, 0., 10052.}]}, {{}, 
         CuboidBox[{0.1, 0., 0.}, {0.2, 0.1, 10183.}]}, {{}, 
         CuboidBox[{0.1, 0.1, 0.}, {0.2, 0.2, 7634.}]}, {{}, 
         CuboidBox[{0.1, 0.2, 0.}, {0.2, 0.3, 5488.}]}, {{}, 
         CuboidBox[{0.1, 0.3, 0.}, {0.2, 0.4, 4289.}]}, {{}, 
         CuboidBox[{0.1, 0.4, 0.}, {0.2, 0.5, 3354.}]}, {{}, 
         CuboidBox[{0.1, 0.5, 0.}, {0.2, 0.6, 2729.}]}, {{}, 
         CuboidBox[{0.1, 0.6, 0.}, {0.2, 0.7, 2455.}]}, {{}, 
         CuboidBox[{0.1, 0.7, 0.}, {0.2, 0.8, 2132.}]}, {{}, 
         CuboidBox[{0.1, 0.8, 0.}, {0.2, 0.9, 1822.}]}, {{}, 
         CuboidBox[{0.1, 0.9, 0.}, {0.2, 1., 1499.}]}, {{}, 
         CuboidBox[{0.2, -1., 0.}, {0.3, -0.9, 1089.}]}, {{}, 
         CuboidBox[{0.2, -0.9, 0.}, {0.3, -0.8, 1761.}]}, {{}, 
         CuboidBox[{0.2, -0.8, 0.}, {0.3, -0.7, 1954.}]}, {{}, 
         CuboidBox[{0.2, -0.7, 0.}, {0.3, -0.6, 2316.}]}, {{}, 
         CuboidBox[{0.2, -0.6, 0.}, {0.3, -0.5, 2673.}]}, {{}, 
         CuboidBox[{0.2, -0.5, 0.}, {0.3, -0.4, 3100.}]}, {{}, 
         CuboidBox[{0.2, -0.4, 0.}, {0.3, -0.3, 3589.}]}, {{}, 
         CuboidBox[{0.2, -0.3, 0.}, {0.3, -0.2, 4416.}]}, {{}, 
         CuboidBox[{0.2, -0.2, 0.}, {0.3, -0.1, 5665.}]}, {{}, 
         CuboidBox[{0.2, -0.1, 0.}, {0.3, 0., 6294.}]}, {{}, 
         CuboidBox[{0.2, 0., 0.}, {0.3, 0.1, 6351.}]}, {{}, 
         CuboidBox[{0.2, 0.1, 0.}, {0.3, 0.2, 5556.}]}, {{}, 
         CuboidBox[{0.2, 0.2, 0.}, {0.3, 0.3, 4503.}]}, {{}, 
         CuboidBox[{0.2, 0.3, 0.}, {0.3, 0.4, 3717.}]}, {{}, 
         CuboidBox[{0.2, 0.4, 0.}, {0.3, 0.5, 3098.}]}, {{}, 
         CuboidBox[{0.2, 0.5, 0.}, {0.3, 0.6, 2561.}]}, {{}, 
         CuboidBox[{0.2, 0.6, 0.}, {0.3, 0.7, 2342.}]}, {{}, 
         CuboidBox[{0.2, 0.7, 0.}, {0.3, 0.8, 2042.}]}, {{}, 
         CuboidBox[{0.2, 0.8, 0.}, {0.3, 0.9, 1866.}]}, {{}, 
         CuboidBox[{0.2, 0.9, 0.}, {0.3, 1., 1150.}]}, {{}, 
         CuboidBox[{0.3, -1., 0.}, {0.4, -0.9, 570.}]}, {{}, 
         CuboidBox[{0.3, -0.9, 0.}, {0.4, -0.8, 1794.}]}, {{}, 
         CuboidBox[{0.3, -0.8, 0.}, {0.4, -0.7, 1863.}]}, {{}, 
         CuboidBox[{0.3, -0.7, 0.}, {0.4, -0.6, 2204.}]}, {{}, 
         CuboidBox[{0.3, -0.6, 0.}, {0.4, -0.5, 2446.}]}, {{}, 
         CuboidBox[{0.3, -0.5, 0.}, {0.4, -0.4, 2852.}]}, {{}, 
         CuboidBox[{0.3, -0.4, 0.}, {0.4, -0.3, 3253.}]}, {{}, 
         CuboidBox[{0.3, -0.3, 0.}, {0.4, -0.2, 3626.}]}, {{}, 
         CuboidBox[{0.3, -0.2, 0.}, {0.4, -0.1, 4153.}]}, {{}, 
         CuboidBox[{0.3, -0.1, 0.}, {0.4, 0., 4494.}]}, {{}, 
         CuboidBox[{0.3, 0., 0.}, {0.4, 0.1, 4575.}]}, {{}, 
         CuboidBox[{0.3, 0.1, 0.}, {0.4, 0.2, 4148.}]}, {{}, 
         CuboidBox[{0.3, 0.2, 0.}, {0.4, 0.3, 3757.}]}, {{}, 
         CuboidBox[{0.3, 0.3, 0.}, {0.4, 0.4, 3258.}]}, {{}, 
         CuboidBox[{0.3, 0.4, 0.}, {0.4, 0.5, 2776.}]}, {{}, 
         CuboidBox[{0.3, 0.5, 0.}, {0.4, 0.6, 2429.}]}, {{}, 
         CuboidBox[{0.3, 0.6, 0.}, {0.4, 0.7, 2164.}]}, {{}, 
         CuboidBox[{0.3, 0.7, 0.}, {0.4, 0.8, 1914.}]}, {{}, 
         CuboidBox[{0.3, 0.8, 0.}, {0.4, 0.9, 1735.}]}, {{}, 
         CuboidBox[{0.3, 0.9, 0.}, {0.4, 1., 555.}]}, {{}, 
         CuboidBox[{0.4, -1., 0.}, {0.5, -0.9, 46.}]}, {{}, 
         CuboidBox[{0.4, -0.9, 0.}, {0.5, -0.8, 1526.}]}, {{}, 
         CuboidBox[{0.4, -0.8, 0.}, {0.5, -0.7, 1813.}]}, {{}, 
         CuboidBox[{0.4, -0.7, 0.}, {0.5, -0.6, 2022.}]}, {{}, 
         CuboidBox[{0.4, -0.6, 0.}, {0.5, -0.5, 2209.}]}, {{}, 
         CuboidBox[{0.4, -0.5, 0.}, {0.5, -0.4, 2577.}]}, {{}, 
         CuboidBox[{0.4, -0.4, 0.}, {0.5, -0.3, 2862.}]}, {{}, 
         CuboidBox[{0.4, -0.3, 0.}, {0.5, -0.2, 3182.}]}, {{}, 
         CuboidBox[{0.4, -0.2, 0.}, {0.5, -0.1, 3315.}]}, {{}, 
         CuboidBox[{0.4, -0.1, 0.}, {0.5, 0., 3529.}]}, {{}, 
         CuboidBox[{0.4, 0., 0.}, {0.5, 0.1, 3464.}]}, {{}, 
         CuboidBox[{0.4, 0.1, 0.}, {0.5, 0.2, 3390.}]}, {{}, 
         CuboidBox[{0.4, 0.2, 0.}, {0.5, 0.3, 3085.}]}, {{}, 
         CuboidBox[{0.4, 0.3, 0.}, {0.5, 0.4, 2791.}]}, {{}, 
         CuboidBox[{0.4, 0.4, 0.}, {0.5, 0.5, 2440.}]}, {{}, 
         CuboidBox[{0.4, 0.5, 0.}, {0.5, 0.6, 2157.}]}, {{}, 
         CuboidBox[{0.4, 0.6, 0.}, {0.5, 0.7, 1999.}]}, {{}, 
         CuboidBox[{0.4, 0.7, 0.}, {0.5, 0.8, 1853.}]}, {{}, 
         CuboidBox[{0.4, 0.8, 0.}, {0.5, 0.9, 1470.}]}, {{}, 
         CuboidBox[{0.4, 0.9, 0.}, {0.5, 1., 47.}]}, {{}, 
         CuboidBox[{0.5, -0.9, 0.}, {0.6, -0.8, 535.}]}, {{}, 
         CuboidBox[{0.5, -0.8, 0.}, {0.6, -0.7, 1651.}]}, {{}, 
         CuboidBox[{0.5, -0.7, 0.}, {0.6, -0.6, 1894.}]}, {{}, 
         CuboidBox[{0.5, -0.6, 0.}, {0.6, -0.5, 2039.}]}, {{}, 
         CuboidBox[{0.5, -0.5, 0.}, {0.6, -0.4, 2225.}]}, {{}, 
         CuboidBox[{0.5, -0.4, 0.}, {0.6, -0.3, 2450.}]}, {{}, 
         CuboidBox[{0.5, -0.3, 0.}, {0.6, -0.2, 2582.}]}, {{}, 
         CuboidBox[{0.5, -0.2, 0.}, {0.6, -0.1, 2752.}]}, {{}, 
         CuboidBox[{0.5, -0.1, 0.}, {0.6, 0., 2877.}]}, {{}, 
         CuboidBox[{0.5, 0., 0.}, {0.6, 0.1, 2883.}]}, {{}, 
         CuboidBox[{0.5, 0.1, 0.}, {0.6, 0.2, 2750.}]}, {{}, 
         CuboidBox[{0.5, 0.2, 0.}, {0.6, 0.3, 2726.}]}, {{}, 
         CuboidBox[{0.5, 0.3, 0.}, {0.6, 0.4, 2538.}]}, {{}, 
         CuboidBox[{0.5, 0.4, 0.}, {0.6, 0.5, 2240.}]}, {{}, 
         CuboidBox[{0.5, 0.5, 0.}, {0.6, 0.6, 2066.}]}, {{}, 
         CuboidBox[{0.5, 0.6, 0.}, {0.6, 0.7, 1909.}]}, {{}, 
         CuboidBox[{0.5, 0.7, 0.}, {0.6, 0.8, 1763.}]}, {{}, 
         CuboidBox[{0.5, 0.8, 0.}, {0.6, 0.9, 547.}]}, {{}, 
         CuboidBox[{0.6, -0.8, 0.}, {0.7, -0.7, 1008.}]}, {{}, 
         CuboidBox[{0.6, -0.7, 0.}, {0.7, -0.6, 1694.}]}, {{}, 
         CuboidBox[{0.6, -0.6, 0.}, {0.7, -0.5, 1831.}]}, {{}, 
         CuboidBox[{0.6, -0.5, 0.}, {0.7, -0.4, 1986.}]}, {{}, 
         CuboidBox[{0.6, -0.4, 0.}, {0.7, -0.3, 2188.}]}, {{}, 
         CuboidBox[{0.6, -0.3, 0.}, {0.7, -0.2, 2305.}]}, {{}, 
         CuboidBox[{0.6, -0.2, 0.}, {0.7, -0.1, 2453.}]}, {{}, 
         CuboidBox[{0.6, -0.1, 0.}, {0.7, 0., 2453.}]}, {{}, 
         CuboidBox[{0.6, 0., 0.}, {0.7, 0.1, 2471.}]}, {{}, 
         CuboidBox[{0.6, 0.1, 0.}, {0.7, 0.2, 2381.}]}, {{}, 
         CuboidBox[{0.6, 0.2, 0.}, {0.7, 0.3, 2341.}]}, {{}, 
         CuboidBox[{0.6, 0.3, 0.}, {0.7, 0.4, 2185.}]}, {{}, 
         CuboidBox[{0.6, 0.4, 0.}, {0.7, 0.5, 2034.}]}, {{}, 
         CuboidBox[{0.6, 0.5, 0.}, {0.7, 0.6, 1901.}]}, {{}, 
         CuboidBox[{0.6, 0.6, 0.}, {0.7, 0.7, 1772.}]}, {{}, 
         CuboidBox[{0.6, 0.7, 0.}, {0.7, 0.8, 952.}]}, {{}, 
         CuboidBox[{0.7, -0.8, 0.}, {0.8, -0.7, 19.}]}, {{}, 
         CuboidBox[{0.7, -0.7, 0.}, {0.8, -0.6, 913.}]}, {{}, 
         CuboidBox[{0.7, -0.6, 0.}, {0.8, -0.5, 1647.}]}, {{}, 
         CuboidBox[{0.7, -0.5, 0.}, {0.8, -0.4, 1717.}]}, {{}, 
         CuboidBox[{0.7, -0.4, 0.}, {0.8, -0.3, 1880.}]}, {{}, 
         CuboidBox[{0.7, -0.3, 0.}, {0.8, -0.2, 1988.}]}, {{}, 
         CuboidBox[{0.7, -0.2, 0.}, {0.8, -0.1, 2041.}]}, {{}, 
         CuboidBox[{0.7, -0.1, 0.}, {0.8, 0., 2070.}]}, {{}, 
         CuboidBox[{0.7, 0., 0.}, {0.8, 0.1, 2156.}]}, {{}, 
         CuboidBox[{0.7, 0.1, 0.}, {0.8, 0.2, 2007.}]}, {{}, 
         CuboidBox[{0.7, 0.2, 0.}, {0.8, 0.3, 1990.}]}, {{}, 
         CuboidBox[{0.7, 0.3, 0.}, {0.8, 0.4, 1915.}]}, {{}, 
         CuboidBox[{0.7, 0.4, 0.}, {0.8, 0.5, 1804.}]}, {{}, 
         CuboidBox[{0.7, 0.5, 0.}, {0.8, 0.6, 1767.}]}, {{}, 
         CuboidBox[{0.7, 0.6, 0.}, {0.8, 0.7, 943.}]}, {{}, 
         CuboidBox[{0.7, 0.7, 0.}, {0.8, 0.8, 18.}]}, {{}, 
         CuboidBox[{0.8, -0.6, 0.}, {0.9, -0.5, 583.}]}, {{}, 
         CuboidBox[{0.8, -0.5, 0.}, {0.9, -0.4, 1477.}]}, {{}, 
         CuboidBox[{0.8, -0.4, 0.}, {0.9, -0.3, 1688.}]}, {{}, 
         CuboidBox[{0.8, -0.3, 0.}, {0.9, -0.2, 1819.}]}, {{}, 
         CuboidBox[{0.8, -0.2, 0.}, {0.9, -0.1, 1878.}]}, {{}, 
         CuboidBox[{0.8, -0.1, 0.}, {0.9, 0., 1880.}]}, {{}, 
         CuboidBox[{0.8, 0., 0.}, {0.9, 0.1, 1822.}]}, {{}, 
         CuboidBox[{0.8, 0.1, 0.}, {0.9, 0.2, 1852.}]}, {{}, 
         CuboidBox[{0.8, 0.2, 0.}, {0.9, 0.3, 1763.}]}, {{}, 
         CuboidBox[{0.8, 0.3, 0.}, {0.9, 0.4, 1646.}]}, {{}, 
         CuboidBox[{0.8, 0.4, 0.}, {0.9, 0.5, 1487.}]}, {{}, 
         CuboidBox[{0.8, 0.5, 0.}, {0.9, 0.6, 569.}]}, {{}, 
         CuboidBox[{0.9, -0.5, 0.}, {1., -0.4, 40.}]}, {{}, 
         CuboidBox[{0.9, -0.4, 0.}, {1., -0.3, 563.}]}, {{}, 
         CuboidBox[{0.9, -0.3, 0.}, {1., -0.2, 1108.}]}, {{}, 
         CuboidBox[{0.9, -0.2, 0.}, {1., -0.1, 1451.}]}, {{}, 
         CuboidBox[{0.9, -0.1, 0.}, {1., 0., 1706.}]}, {{}, 
         CuboidBox[{0.9, 0., 0.}, {1., 0.1, 1635.}]}, {{}, 
         CuboidBox[{0.9, 0.1, 0.}, {1., 0.2, 1422.}]}, {{}, 
         CuboidBox[{0.9, 0.2, 0.}, {1., 0.3, 1114.}]}, {{}, 
         CuboidBox[{0.9, 0.3, 0.}, {1., 0.4, 603.}]}, {{}, 
         CuboidBox[{0.9, 0.4, 0.}, {1., 0.5, 60.}]}},
       FontColor->GrayLevel[0.4]]}, {}, {}},
    FontColor->GrayLevel[0.4]]},
  AutomaticImageSize->True,
  Axes->{True, True, True},
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  FaceGridsStyle->Automatic,
  ImageSize->{356.27465704230514`, 162.20958509753174`},
  Lighting->"Neutral",
  Method->{"RotationControl" -> "Globe"},
  PlotRange->{{-1., 1.}, {-1., 1.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.1]}},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{1.5737259444695288`, -2.928598761588722, 0.6298380310242628},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{{3.690813486975685*^9, 3.690813502683783*^9}, 
   3.69081364274028*^9, 3.6908138803049803`*^9, {3.6908139402109737`*^9, 
   3.690813951270893*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram3D", "[", 
  RowBox[{"d10e5", ",", "50", ",", 
   RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Speed\>\""}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.690814030446631*^9, 3.6908140308052464`*^9}}],

Cell[BoxData[
 Graphics3DBox[
  {RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], EdgeForm[
   RGBColor[0.880722, 0.611041, 0.142051]], 
   StyleBox[{{}, 
     {RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], EdgeForm[
      RGBColor[0.880722, 0.611041, 0.142051]], 
      StyleBox[{{{}, CuboidBox[{-1., -0.35, 0.}, {-0.95, -0.3, 4.}]}, {{}, 
         CuboidBox[{-1., -0.3, 0.}, {-0.95, -0.25, 99.}]}, {{}, 
         CuboidBox[{-1., -0.25, 0.}, {-0.95, -0.2, 187.}]}, {{}, 
         CuboidBox[{-1., -0.2, 0.}, {-0.95, -0.15, 269.}]}, {{}, 
         CuboidBox[{-1., -0.15, 0.}, {-0.95, -0.1, 342.}]}, {{}, 
         CuboidBox[{-1., -0.1, 0.}, {-0.95, -0.05, 375.}]}, {{}, 
         CuboidBox[{-1., -0.05, 0.}, {-0.95, 0., 397.}]}, {{}, 
         CuboidBox[{-1., 0., 0.}, {-0.95, 0.05, 402.}]}, {{}, 
         CuboidBox[{-1., 0.05, 0.}, {-0.95, 0.1, 369.}]}, {{}, 
         CuboidBox[{-1., 0.1, 0.}, {-0.95, 0.15, 316.}]}, {{}, 
         CuboidBox[{-1., 0.15, 0.}, {-0.95, 0.2, 265.}]}, {{}, 
         CuboidBox[{-1., 0.2, 0.}, {-0.95, 0.25, 208.}]}, {{}, 
         CuboidBox[{-1., 0.25, 0.}, {-0.95, 0.3, 81.}]}, {{}, 
         CuboidBox[{-1., 0.3, 0.}, {-0.95, 0.35, 2.}]}, {{}, 
         CuboidBox[{-0.95, -0.45, 0.}, {-0.9, -0.4, 46.}]}, {{}, 
         CuboidBox[{-0.95, -0.4, 0.}, {-0.9, -0.35, 188.}]}, {{}, 
         CuboidBox[{-0.95, -0.35, 0.}, {-0.9, -0.3, 343.}]}, {{}, 
         CuboidBox[{-0.95, -0.3, 0.}, {-0.9, -0.25, 413.}]}, {{}, 
         CuboidBox[{-0.95, -0.25, 0.}, {-0.9, -0.2, 384.}]}, {{}, 
         CuboidBox[{-0.95, -0.2, 0.}, {-0.9, -0.15, 415.}]}, {{}, 
         CuboidBox[{-0.95, -0.15, 0.}, {-0.9, -0.1, 411.}]}, {{}, 
         CuboidBox[{-0.95, -0.1, 0.}, {-0.9, -0.05, 426.}]}, {{}, 
         CuboidBox[{-0.95, -0.05, 0.}, {-0.9, 0., 434.}]}, {{}, 
         CuboidBox[{-0.95, 0., 0.}, {-0.9, 0.05, 411.}]}, {{}, 
         CuboidBox[{-0.95, 0.05, 0.}, {-0.9, 0.1, 419.}]}, {{}, 
         CuboidBox[{-0.95, 0.1, 0.}, {-0.9, 0.15, 425.}]}, {{}, 
         CuboidBox[{-0.95, 0.15, 0.}, {-0.9, 0.2, 429.}]}, {{}, 
         CuboidBox[{-0.95, 0.2, 0.}, {-0.9, 0.25, 421.}]}, {{}, 
         CuboidBox[{-0.95, 0.25, 0.}, {-0.9, 0.3, 411.}]}, {{}, 
         CuboidBox[{-0.95, 0.3, 0.}, {-0.9, 0.35, 369.}]}, {{}, 
         CuboidBox[{-0.95, 0.35, 0.}, {-0.9, 0.4, 225.}]}, {{}, 
         CuboidBox[{-0.95, 0.4, 0.}, {-0.9, 0.45, 50.}]}, {{}, 
         CuboidBox[{-0.9, -0.55, 0.}, {-0.85, -0.5, 29.}]}, {{}, 
         CuboidBox[{-0.9, -0.5, 0.}, {-0.85, -0.45, 256.}]}, {{}, 
         CuboidBox[{-0.9, -0.45, 0.}, {-0.85, -0.4, 419.}]}, {{}, 
         CuboidBox[{-0.9, -0.4, 0.}, {-0.85, -0.35, 454.}]}, {{}, 
         CuboidBox[{-0.9, -0.35, 0.}, {-0.85, -0.3, 423.}]}, {{}, 
         CuboidBox[{-0.9, -0.3, 0.}, {-0.85, -0.25, 430.}]}, {{}, 
         CuboidBox[{-0.9, -0.25, 0.}, {-0.85, -0.2, 498.}]}, {{}, 
         CuboidBox[{-0.9, -0.2, 0.}, {-0.85, -0.15, 426.}]}, {{}, 
         CuboidBox[{-0.9, -0.15, 0.}, {-0.85, -0.1, 443.}]}, {{}, 
         CuboidBox[{-0.9, -0.1, 0.}, {-0.85, -0.05, 482.}]}, {{}, 
         CuboidBox[{-0.9, -0.05, 0.}, {-0.85, 0., 464.}]}, {{}, 
         CuboidBox[{-0.9, 0., 0.}, {-0.85, 0.05, 443.}]}, {{}, 
         CuboidBox[{-0.9, 0.05, 0.}, {-0.85, 0.1, 453.}]}, {{}, 
         CuboidBox[{-0.9, 0.1, 0.}, {-0.85, 0.15, 453.}]}, {{}, 
         CuboidBox[{-0.9, 0.15, 0.}, {-0.85, 0.2, 428.}]}, {{}, 
         CuboidBox[{-0.9, 0.2, 0.}, {-0.85, 0.25, 454.}]}, {{}, 
         CuboidBox[{-0.9, 0.25, 0.}, {-0.85, 0.3, 415.}]}, {{}, 
         CuboidBox[{-0.9, 0.3, 0.}, {-0.85, 0.35, 416.}]}, {{}, 
         CuboidBox[{-0.9, 0.35, 0.}, {-0.85, 0.4, 413.}]}, {{}, 
         CuboidBox[{-0.9, 0.4, 0.}, {-0.85, 0.45, 390.}]}, {{}, 
         CuboidBox[{-0.9, 0.45, 0.}, {-0.85, 0.5, 272.}]}, {{}, 
         CuboidBox[{-0.9, 0.5, 0.}, {-0.85, 0.55, 30.}]}, {{}, 
         CuboidBox[{-0.85, -0.6, 0.}, {-0.8, -0.55, 125.}]}, {{}, 
         CuboidBox[{-0.85, -0.55, 0.}, {-0.8, -0.5, 392.}]}, {{}, 
         CuboidBox[{-0.85, -0.5, 0.}, {-0.8, -0.45, 435.}]}, {{}, 
         CuboidBox[{-0.85, -0.45, 0.}, {-0.8, -0.4, 468.}]}, {{}, 
         CuboidBox[{-0.85, -0.4, 0.}, {-0.8, -0.35, 420.}]}, {{}, 
         CuboidBox[{-0.85, -0.35, 0.}, {-0.8, -0.3, 445.}]}, {{}, 
         CuboidBox[{-0.85, -0.3, 0.}, {-0.8, -0.25, 443.}]}, {{}, 
         CuboidBox[{-0.85, -0.25, 0.}, {-0.8, -0.2, 511.}]}, {{}, 
         CuboidBox[{-0.85, -0.2, 0.}, {-0.8, -0.15, 483.}]}, {{}, 
         CuboidBox[{-0.85, -0.15, 0.}, {-0.8, -0.1, 478.}]}, {{}, 
         CuboidBox[{-0.85, -0.1, 0.}, {-0.8, -0.05, 482.}]}, {{}, 
         CuboidBox[{-0.85, -0.05, 0.}, {-0.8, 0., 493.}]}, {{}, 
         CuboidBox[{-0.85, 0., 0.}, {-0.8, 0.05, 483.}]}, {{}, 
         CuboidBox[{-0.85, 0.05, 0.}, {-0.8, 0.1, 460.}]}, {{}, 
         CuboidBox[{-0.85, 0.1, 0.}, {-0.8, 0.15, 461.}]}, {{}, 
         CuboidBox[{-0.85, 0.15, 0.}, {-0.8, 0.2, 483.}]}, {{}, 
         CuboidBox[{-0.85, 0.2, 0.}, {-0.8, 0.25, 472.}]}, {{}, 
         CuboidBox[{-0.85, 0.25, 0.}, {-0.8, 0.3, 480.}]}, {{}, 
         CuboidBox[{-0.85, 0.3, 0.}, {-0.8, 0.35, 491.}]}, {{}, 
         CuboidBox[{-0.85, 0.35, 0.}, {-0.8, 0.4, 439.}]}, {{}, 
         CuboidBox[{-0.85, 0.4, 0.}, {-0.8, 0.45, 436.}]}, {{}, 
         CuboidBox[{-0.85, 0.45, 0.}, {-0.8, 0.5, 401.}]}, {{}, 
         CuboidBox[{-0.85, 0.5, 0.}, {-0.8, 0.55, 379.}]}, {{}, 
         CuboidBox[{-0.85, 0.55, 0.}, {-0.8, 0.6, 139.}]}, {{}, 
         CuboidBox[{-0.8, -0.7, 0.}, {-0.75, -0.65, 9.}]}, {{}, 
         CuboidBox[{-0.8, -0.65, 0.}, {-0.75, -0.6, 234.}]}, {{}, 
         CuboidBox[{-0.8, -0.6, 0.}, {-0.75, -0.55, 428.}]}, {{}, 
         CuboidBox[{-0.8, -0.55, 0.}, {-0.75, -0.5, 399.}]}, {{}, 
         CuboidBox[{-0.8, -0.5, 0.}, {-0.75, -0.45, 444.}]}, {{}, 
         CuboidBox[{-0.8, -0.45, 0.}, {-0.75, -0.4, 443.}]}, {{}, 
         CuboidBox[{-0.8, -0.4, 0.}, {-0.75, -0.35, 465.}]}, {{}, 
         CuboidBox[{-0.8, -0.35, 0.}, {-0.75, -0.3, 436.}]}, {{}, 
         CuboidBox[{-0.8, -0.3, 0.}, {-0.75, -0.25, 463.}]}, {{}, 
         CuboidBox[{-0.8, -0.25, 0.}, {-0.75, -0.2, 509.}]}, {{}, 
         CuboidBox[{-0.8, -0.2, 0.}, {-0.75, -0.15, 532.}]}, {{}, 
         CuboidBox[{-0.8, -0.15, 0.}, {-0.75, -0.1, 520.}]}, {{}, 
         CuboidBox[{-0.8, -0.1, 0.}, {-0.75, -0.05, 537.}]}, {{}, 
         CuboidBox[{-0.8, -0.05, 0.}, {-0.75, 0., 507.}]}, {{}, 
         CuboidBox[{-0.8, 0., 0.}, {-0.75, 0.05, 544.}]}, {{}, 
         CuboidBox[{-0.8, 0.05, 0.}, {-0.75, 0.1, 522.}]}, {{}, 
         CuboidBox[{-0.8, 0.1, 0.}, {-0.75, 0.15, 505.}]}, {{}, 
         CuboidBox[{-0.8, 0.15, 0.}, {-0.75, 0.2, 508.}]}, {{}, 
         CuboidBox[{-0.8, 0.2, 0.}, {-0.75, 0.25, 482.}]}, {{}, 
         CuboidBox[{-0.8, 0.25, 0.}, {-0.75, 0.3, 485.}]}, {{}, 
         CuboidBox[{-0.8, 0.3, 0.}, {-0.75, 0.35, 451.}]}, {{}, 
         CuboidBox[{-0.8, 0.35, 0.}, {-0.75, 0.4, 484.}]}, {{}, 
         CuboidBox[{-0.8, 0.4, 0.}, {-0.75, 0.45, 468.}]}, {{}, 
         CuboidBox[{-0.8, 0.45, 0.}, {-0.75, 0.5, 444.}]}, {{}, 
         CuboidBox[{-0.8, 0.5, 0.}, {-0.75, 0.55, 401.}]}, {{}, 
         CuboidBox[{-0.8, 0.55, 0.}, {-0.75, 0.6, 435.}]}, {{}, 
         CuboidBox[{-0.8, 0.6, 0.}, {-0.75, 0.65, 238.}]}, {{}, 
         CuboidBox[{-0.8, 0.65, 0.}, {-0.75, 0.7, 10.}]}, {{}, 
         CuboidBox[{-0.75, -0.75, 0.}, {-0.7, -0.7, 15.}]}, {{}, 
         CuboidBox[{-0.75, -0.7, 0.}, {-0.7, -0.65, 283.}]}, {{}, 
         CuboidBox[{-0.75, -0.65, 0.}, {-0.7, -0.6, 420.}]}, {{}, 
         CuboidBox[{-0.75, -0.6, 0.}, {-0.7, -0.55, 421.}]}, {{}, 
         CuboidBox[{-0.75, -0.55, 0.}, {-0.7, -0.5, 461.}]}, {{}, 
         CuboidBox[{-0.75, -0.5, 0.}, {-0.7, -0.45, 458.}]}, {{}, 
         CuboidBox[{-0.75, -0.45, 0.}, {-0.7, -0.4, 496.}]}, {{}, 
         CuboidBox[{-0.75, -0.4, 0.}, {-0.7, -0.35, 496.}]}, {{}, 
         CuboidBox[{-0.75, -0.35, 0.}, {-0.7, -0.3, 506.}]}, {{}, 
         CuboidBox[{-0.75, -0.3, 0.}, {-0.7, -0.25, 521.}]}, {{}, 
         CuboidBox[{-0.75, -0.25, 0.}, {-0.7, -0.2, 482.}]}, {{}, 
         CuboidBox[{-0.75, -0.2, 0.}, {-0.7, -0.15, 527.}]}, {{}, 
         CuboidBox[{-0.75, -0.15, 0.}, {-0.7, -0.1, 564.}]}, {{}, 
         CuboidBox[{-0.75, -0.1, 0.}, {-0.7, -0.05, 566.}]}, {{}, 
         CuboidBox[{-0.75, -0.05, 0.}, {-0.7, 0., 570.}]}, {{}, 
         CuboidBox[{-0.75, 0., 0.}, {-0.7, 0.05, 500.}]}, {{}, 
         CuboidBox[{-0.75, 0.05, 0.}, {-0.7, 0.1, 597.}]}, {{}, 
         CuboidBox[{-0.75, 0.1, 0.}, {-0.7, 0.15, 566.}]}, {{}, 
         CuboidBox[{-0.75, 0.15, 0.}, {-0.7, 0.2, 542.}]}, {{}, 
         CuboidBox[{-0.75, 0.2, 0.}, {-0.7, 0.25, 514.}]}, {{}, 
         CuboidBox[{-0.75, 0.25, 0.}, {-0.7, 0.3, 539.}]}, {{}, 
         CuboidBox[{-0.75, 0.3, 0.}, {-0.7, 0.35, 465.}]}, {{}, 
         CuboidBox[{-0.75, 0.35, 0.}, {-0.7, 0.4, 453.}]}, {{}, 
         CuboidBox[{-0.75, 0.4, 0.}, {-0.7, 0.45, 489.}]}, {{}, 
         CuboidBox[{-0.75, 0.45, 0.}, {-0.7, 0.5, 438.}]}, {{}, 
         CuboidBox[{-0.75, 0.5, 0.}, {-0.7, 0.55, 439.}]}, {{}, 
         CuboidBox[{-0.75, 0.55, 0.}, {-0.7, 0.6, 433.}]}, {{}, 
         CuboidBox[{-0.75, 0.6, 0.}, {-0.7, 0.65, 408.}]}, {{}, 
         CuboidBox[{-0.75, 0.65, 0.}, {-0.7, 0.7, 288.}]}, {{}, 
         CuboidBox[{-0.75, 0.7, 0.}, {-0.7, 0.75, 6.}]}, {{}, 
         CuboidBox[{-0.7, -0.8, 0.}, {-0.65, -0.75, 9.}]}, {{}, 
         CuboidBox[{-0.7, -0.75, 0.}, {-0.65, -0.7, 321.}]}, {{}, 
         CuboidBox[{-0.7, -0.7, 0.}, {-0.65, -0.65, 421.}]}, {{}, 
         CuboidBox[{-0.7, -0.65, 0.}, {-0.65, -0.6, 477.}]}, {{}, 
         CuboidBox[{-0.7, -0.6, 0.}, {-0.65, -0.55, 415.}]}, {{}, 
         CuboidBox[{-0.7, -0.55, 0.}, {-0.65, -0.5, 461.}]}, {{}, 
         CuboidBox[{-0.7, -0.5, 0.}, {-0.65, -0.45, 487.}]}, {{}, 
         CuboidBox[{-0.7, -0.45, 0.}, {-0.65, -0.4, 514.}]}, {{}, 
         CuboidBox[{-0.7, -0.4, 0.}, {-0.65, -0.35, 514.}]}, {{}, 
         CuboidBox[{-0.7, -0.35, 0.}, {-0.65, -0.3, 557.}]}, {{}, 
         CuboidBox[{-0.7, -0.3, 0.}, {-0.65, -0.25, 558.}]}, {{}, 
         CuboidBox[{-0.7, -0.25, 0.}, {-0.65, -0.2, 562.}]}, {{}, 
         CuboidBox[{-0.7, -0.2, 0.}, {-0.65, -0.15, 604.}]}, {{}, 
         CuboidBox[{-0.7, -0.15, 0.}, {-0.65, -0.1, 638.}]}, {{}, 
         CuboidBox[{-0.7, -0.1, 0.}, {-0.65, -0.05, 558.}]}, {{}, 
         CuboidBox[{-0.7, -0.05, 0.}, {-0.65, 0., 604.}]}, {{}, 
         CuboidBox[{-0.7, 0., 0.}, {-0.65, 0.05, 639.}]}, {{}, 
         CuboidBox[{-0.7, 0.05, 0.}, {-0.65, 0.1, 575.}]}, {{}, 
         CuboidBox[{-0.7, 0.1, 0.}, {-0.65, 0.15, 610.}]}, {{}, 
         CuboidBox[{-0.7, 0.15, 0.}, {-0.65, 0.2, 576.}]}, {{}, 
         CuboidBox[{-0.7, 0.2, 0.}, {-0.65, 0.25, 517.}]}, {{}, 
         CuboidBox[{-0.7, 0.25, 0.}, {-0.65, 0.3, 522.}]}, {{}, 
         CuboidBox[{-0.7, 0.3, 0.}, {-0.65, 0.35, 505.}]}, {{}, 
         CuboidBox[{-0.7, 0.35, 0.}, {-0.65, 0.4, 499.}]}, {{}, 
         CuboidBox[{-0.7, 0.4, 0.}, {-0.65, 0.45, 459.}]}, {{}, 
         CuboidBox[{-0.7, 0.45, 0.}, {-0.65, 0.5, 457.}]}, {{}, 
         CuboidBox[{-0.7, 0.5, 0.}, {-0.65, 0.55, 464.}]}, {{}, 
         CuboidBox[{-0.7, 0.55, 0.}, {-0.65, 0.6, 458.}]}, {{}, 
         CuboidBox[{-0.7, 0.6, 0.}, {-0.65, 0.65, 463.}]}, {{}, 
         CuboidBox[{-0.7, 0.65, 0.}, {-0.65, 0.7, 428.}]}, {{}, 
         CuboidBox[{-0.7, 0.7, 0.}, {-0.65, 0.75, 283.}]}, {{}, 
         CuboidBox[{-0.7, 0.75, 0.}, {-0.65, 0.8, 6.}]}, {{}, 
         CuboidBox[{-0.65, -0.8, 0.}, {-0.6, -0.75, 252.}]}, {{}, 
         CuboidBox[{-0.65, -0.75, 0.}, {-0.6, -0.7, 440.}]}, {{}, 
         CuboidBox[{-0.65, -0.7, 0.}, {-0.6, -0.65, 405.}]}, {{}, 
         CuboidBox[{-0.65, -0.65, 0.}, {-0.6, -0.6, 440.}]}, {{}, 
         CuboidBox[{-0.65, -0.6, 0.}, {-0.6, -0.55, 460.}]}, {{}, 
         CuboidBox[{-0.65, -0.55, 0.}, {-0.6, -0.5, 508.}]}, {{}, 
         CuboidBox[{-0.65, -0.5, 0.}, {-0.6, -0.45, 489.}]}, {{}, 
         CuboidBox[{-0.65, -0.45, 0.}, {-0.6, -0.4, 528.}]}, {{}, 
         CuboidBox[{-0.65, -0.4, 0.}, {-0.6, -0.35, 520.}]}, {{}, 
         CuboidBox[{-0.65, -0.35, 0.}, {-0.6, -0.3, 530.}]}, {{}, 
         CuboidBox[{-0.65, -0.3, 0.}, {-0.6, -0.25, 590.}]}, {{}, 
         CuboidBox[{-0.65, -0.25, 0.}, {-0.6, -0.2, 609.}]}, {{}, 
         CuboidBox[{-0.65, -0.2, 0.}, {-0.6, -0.15, 656.}]}, {{}, 
         CuboidBox[{-0.65, -0.15, 0.}, {-0.6, -0.1, 621.}]}, {{}, 
         CuboidBox[{-0.65, -0.1, 0.}, {-0.6, -0.05, 645.}]}, {{}, 
         CuboidBox[{-0.65, -0.05, 0.}, {-0.6, 0., 631.}]}, {{}, 
         CuboidBox[{-0.65, 0., 0.}, {-0.6, 0.05, 569.}]}, {{}, 
         CuboidBox[{-0.65, 0.05, 0.}, {-0.6, 0.1, 614.}]}, {{}, 
         CuboidBox[{-0.65, 0.1, 0.}, {-0.6, 0.15, 650.}]}, {{}, 
         CuboidBox[{-0.65, 0.15, 0.}, {-0.6, 0.2, 650.}]}, {{}, 
         CuboidBox[{-0.65, 0.2, 0.}, {-0.6, 0.25, 633.}]}, {{}, 
         CuboidBox[{-0.65, 0.25, 0.}, {-0.6, 0.3, 600.}]}, {{}, 
         CuboidBox[{-0.65, 0.3, 0.}, {-0.6, 0.35, 579.}]}, {{}, 
         CuboidBox[{-0.65, 0.35, 0.}, {-0.6, 0.4, 516.}]}, {{}, 
         CuboidBox[{-0.65, 0.4, 0.}, {-0.6, 0.45, 535.}]}, {{}, 
         CuboidBox[{-0.65, 0.45, 0.}, {-0.6, 0.5, 531.}]}, {{}, 
         CuboidBox[{-0.65, 0.5, 0.}, {-0.6, 0.55, 468.}]}, {{}, 
         CuboidBox[{-0.65, 0.55, 0.}, {-0.6, 0.6, 472.}]}, {{}, 
         CuboidBox[{-0.65, 0.6, 0.}, {-0.6, 0.65, 443.}]}, {{}, 
         CuboidBox[{-0.65, 0.65, 0.}, {-0.6, 0.7, 409.}]}, {{}, 
         CuboidBox[{-0.65, 0.7, 0.}, {-0.6, 0.75, 434.}]}, {{}, 
         CuboidBox[{-0.65, 0.75, 0.}, {-0.6, 0.8, 239.}]}, {{}, 
         CuboidBox[{-0.6, -0.85, 0.}, {-0.55, -0.8, 146.}]}, {{}, 
         CuboidBox[{-0.6, -0.8, 0.}, {-0.55, -0.75, 442.}]}, {{}, 
         CuboidBox[{-0.6, -0.75, 0.}, {-0.55, -0.7, 442.}]}, {{}, 
         CuboidBox[{-0.6, -0.7, 0.}, {-0.55, -0.65, 434.}]}, {{}, 
         CuboidBox[{-0.6, -0.65, 0.}, {-0.55, -0.6, 460.}]}, {{}, 
         CuboidBox[{-0.6, -0.6, 0.}, {-0.55, -0.55, 513.}]}, {{}, 
         CuboidBox[{-0.6, -0.55, 0.}, {-0.55, -0.5, 478.}]}, {{}, 
         CuboidBox[{-0.6, -0.5, 0.}, {-0.55, -0.45, 519.}]}, {{}, 
         CuboidBox[{-0.6, -0.45, 0.}, {-0.55, -0.4, 561.}]}, {{}, 
         CuboidBox[{-0.6, -0.4, 0.}, {-0.55, -0.35, 621.}]}, {{}, 
         CuboidBox[{-0.6, -0.35, 0.}, {-0.55, -0.3, 604.}]}, {{}, 
         CuboidBox[{-0.6, -0.3, 0.}, {-0.55, -0.25, 609.}]}, {{}, 
         CuboidBox[{-0.6, -0.25, 0.}, {-0.55, -0.2, 629.}]}, {{}, 
         CuboidBox[{-0.6, -0.2, 0.}, {-0.55, -0.15, 663.}]}, {{}, 
         CuboidBox[{-0.6, -0.15, 0.}, {-0.55, -0.1, 684.}]}, {{}, 
         CuboidBox[{-0.6, -0.1, 0.}, {-0.55, -0.05, 704.}]}, {{}, 
         CuboidBox[{-0.6, -0.05, 0.}, {-0.55, 0., 663.}]}, {{}, 
         CuboidBox[{-0.6, 0., 0.}, {-0.55, 0.05, 707.}]}, {{}, 
         CuboidBox[{-0.6, 0.05, 0.}, {-0.55, 0.1, 711.}]}, {{}, 
         CuboidBox[{-0.6, 0.1, 0.}, {-0.55, 0.15, 676.}]}, {{}, 
         CuboidBox[{-0.6, 0.15, 0.}, {-0.55, 0.2, 657.}]}, {{}, 
         CuboidBox[{-0.6, 0.2, 0.}, {-0.55, 0.25, 652.}]}, {{}, 
         CuboidBox[{-0.6, 0.25, 0.}, {-0.55, 0.3, 641.}]}, {{}, 
         CuboidBox[{-0.6, 0.3, 0.}, {-0.55, 0.35, 575.}]}, {{}, 
         CuboidBox[{-0.6, 0.35, 0.}, {-0.55, 0.4, 553.}]}, {{}, 
         CuboidBox[{-0.6, 0.4, 0.}, {-0.55, 0.45, 563.}]}, {{}, 
         CuboidBox[{-0.6, 0.45, 0.}, {-0.55, 0.5, 519.}]}, {{}, 
         CuboidBox[{-0.6, 0.5, 0.}, {-0.55, 0.55, 549.}]}, {{}, 
         CuboidBox[{-0.6, 0.55, 0.}, {-0.55, 0.6, 515.}]}, {{}, 
         CuboidBox[{-0.6, 0.6, 0.}, {-0.55, 0.65, 477.}]}, {{}, 
         CuboidBox[{-0.6, 0.65, 0.}, {-0.55, 0.7, 453.}]}, {{}, 
         CuboidBox[{-0.6, 0.7, 0.}, {-0.55, 0.75, 427.}]}, {{}, 
         CuboidBox[{-0.6, 0.75, 0.}, {-0.55, 0.8, 471.}]}, {{}, 
         CuboidBox[{-0.6, 0.8, 0.}, {-0.55, 0.85, 167.}]}, {{}, 
         CuboidBox[{-0.55, -0.9, 0.}, {-0.5, -0.85, 34.}]}, {{}, 
         CuboidBox[{-0.55, -0.85, 0.}, {-0.5, -0.8, 380.}]}, {{}, 
         CuboidBox[{-0.55, -0.8, 0.}, {-0.5, -0.75, 422.}]}, {{}, 
         CuboidBox[{-0.55, -0.75, 0.}, {-0.5, -0.7, 414.}]}, {{}, 
         CuboidBox[{-0.55, -0.7, 0.}, {-0.5, -0.65, 443.}]}, {{}, 
         CuboidBox[{-0.55, -0.65, 0.}, {-0.5, -0.6, 477.}]}, {{}, 
         CuboidBox[{-0.55, -0.6, 0.}, {-0.5, -0.55, 498.}]}, {{}, 
         CuboidBox[{-0.55, -0.55, 0.}, {-0.5, -0.5, 528.}]}, {{}, 
         CuboidBox[{-0.55, -0.5, 0.}, {-0.5, -0.45, 556.}]}, {{}, 
         CuboidBox[{-0.55, -0.45, 0.}, {-0.5, -0.4, 601.}]}, {{}, 
         CuboidBox[{-0.55, -0.4, 0.}, {-0.5, -0.35, 623.}]}, {{}, 
         CuboidBox[{-0.55, -0.35, 0.}, {-0.5, -0.3, 637.}]}, {{}, 
         CuboidBox[{-0.55, -0.3, 0.}, {-0.5, -0.25, 640.}]}, {{}, 
         CuboidBox[{-0.55, -0.25, 0.}, {-0.5, -0.2, 705.}]}, {{}, 
         CuboidBox[{-0.55, -0.2, 0.}, {-0.5, -0.15, 719.}]}, {{}, 
         CuboidBox[{-0.55, -0.15, 0.}, {-0.5, -0.1, 654.}]}, {{}, 
         CuboidBox[{-0.55, -0.1, 0.}, {-0.5, -0.05, 783.}]}, {{}, 
         CuboidBox[{-0.55, -0.05, 0.}, {-0.5, 0., 765.}]}, {{}, 
         CuboidBox[{-0.55, 0., 0.}, {-0.5, 0.05, 765.}]}, {{}, 
         CuboidBox[{-0.55, 0.05, 0.}, {-0.5, 0.1, 746.}]}, {{}, 
         CuboidBox[{-0.55, 0.1, 0.}, {-0.5, 0.15, 774.}]}, {{}, 
         CuboidBox[{-0.55, 0.15, 0.}, {-0.5, 0.2, 714.}]}, {{}, 
         CuboidBox[{-0.55, 0.2, 0.}, {-0.5, 0.25, 674.}]}, {{}, 
         CuboidBox[{-0.55, 0.25, 0.}, {-0.5, 0.3, 647.}]}, {{}, 
         CuboidBox[{-0.55, 0.3, 0.}, {-0.5, 0.35, 632.}]}, {{}, 
         CuboidBox[{-0.55, 0.35, 0.}, {-0.5, 0.4, 570.}]}, {{}, 
         CuboidBox[{-0.55, 0.4, 0.}, {-0.5, 0.45, 578.}]}, {{}, 
         CuboidBox[{-0.55, 0.45, 0.}, {-0.5, 0.5, 585.}]}, {{}, 
         CuboidBox[{-0.55, 0.5, 0.}, {-0.5, 0.55, 505.}]}, {{}, 
         CuboidBox[{-0.55, 0.55, 0.}, {-0.5, 0.6, 510.}]}, {{}, 
         CuboidBox[{-0.55, 0.6, 0.}, {-0.5, 0.65, 453.}]}, {{}, 
         CuboidBox[{-0.55, 0.65, 0.}, {-0.5, 0.7, 420.}]}, {{}, 
         CuboidBox[{-0.55, 0.7, 0.}, {-0.5, 0.75, 411.}]}, {{}, 
         CuboidBox[{-0.55, 0.75, 0.}, {-0.5, 0.8, 429.}]}, {{}, 
         CuboidBox[{-0.55, 0.8, 0.}, {-0.5, 0.85, 364.}]}, {{}, 
         CuboidBox[{-0.55, 0.85, 0.}, {-0.5, 0.9, 38.}]}, {{}, 
         CuboidBox[{-0.5, -0.9, 0.}, {-0.45, -0.85, 249.}]}, {{}, 
         CuboidBox[{-0.5, -0.85, 0.}, {-0.45, -0.8, 426.}]}, {{}, 
         CuboidBox[{-0.5, -0.8, 0.}, {-0.45, -0.75, 477.}]}, {{}, 
         CuboidBox[{-0.5, -0.75, 0.}, {-0.45, -0.7, 480.}]}, {{}, 
         CuboidBox[{-0.5, -0.7, 0.}, {-0.45, -0.65, 503.}]}, {{}, 
         CuboidBox[{-0.5, -0.65, 0.}, {-0.45, -0.6, 507.}]}, {{}, 
         CuboidBox[{-0.5, -0.6, 0.}, {-0.45, -0.55, 525.}]}, {{}, 
         CuboidBox[{-0.5, -0.55, 0.}, {-0.45, -0.5, 545.}]}, {{}, 
         CuboidBox[{-0.5, -0.5, 0.}, {-0.45, -0.45, 594.}]}, {{}, 
         CuboidBox[{-0.5, -0.45, 0.}, {-0.45, -0.4, 627.}]}, {{}, 
         CuboidBox[{-0.5, -0.4, 0.}, {-0.45, -0.35, 675.}]}, {{}, 
         CuboidBox[{-0.5, -0.35, 0.}, {-0.45, -0.3, 724.}]}, {{}, 
         CuboidBox[{-0.5, -0.3, 0.}, {-0.45, -0.25, 781.}]}, {{}, 
         CuboidBox[{-0.5, -0.25, 0.}, {-0.45, -0.2, 726.}]}, {{}, 
         CuboidBox[{-0.5, -0.2, 0.}, {-0.45, -0.15, 748.}]}, {{}, 
         CuboidBox[{-0.5, -0.15, 0.}, {-0.45, -0.1, 841.}]}, {{}, 
         CuboidBox[{-0.5, -0.1, 0.}, {-0.45, -0.05, 801.}]}, {{}, 
         CuboidBox[{-0.5, -0.05, 0.}, {-0.45, 0., 850.}]}, {{}, 
         CuboidBox[{-0.5, 0., 0.}, {-0.45, 0.05, 753.}]}, {{}, 
         CuboidBox[{-0.5, 0.05, 0.}, {-0.45, 0.1, 792.}]}, {{}, 
         CuboidBox[{-0.5, 0.1, 0.}, {-0.45, 0.15, 804.}]}, {{}, 
         CuboidBox[{-0.5, 0.15, 0.}, {-0.45, 0.2, 835.}]}, {{}, 
         CuboidBox[{-0.5, 0.2, 0.}, {-0.45, 0.25, 808.}]}, {{}, 
         CuboidBox[{-0.5, 0.25, 0.}, {-0.45, 0.3, 700.}]}, {{}, 
         CuboidBox[{-0.5, 0.3, 0.}, {-0.45, 0.35, 707.}]}, {{}, 
         CuboidBox[{-0.5, 0.35, 0.}, {-0.45, 0.4, 633.}]}, {{}, 
         CuboidBox[{-0.5, 0.4, 0.}, {-0.45, 0.45, 612.}]}, {{}, 
         CuboidBox[{-0.5, 0.45, 0.}, {-0.45, 0.5, 566.}]}, {{}, 
         CuboidBox[{-0.5, 0.5, 0.}, {-0.45, 0.55, 561.}]}, {{}, 
         CuboidBox[{-0.5, 0.55, 0.}, {-0.45, 0.6, 502.}]}, {{}, 
         CuboidBox[{-0.5, 0.6, 0.}, {-0.45, 0.65, 528.}]}, {{}, 
         CuboidBox[{-0.5, 0.65, 0.}, {-0.45, 0.7, 496.}]}, {{}, 
         CuboidBox[{-0.5, 0.7, 0.}, {-0.45, 0.75, 453.}]}, {{}, 
         CuboidBox[{-0.5, 0.75, 0.}, {-0.45, 0.8, 442.}]}, {{}, 
         CuboidBox[{-0.5, 0.8, 0.}, {-0.45, 0.85, 448.}]}, {{}, 
         CuboidBox[{-0.5, 0.85, 0.}, {-0.45, 0.9, 241.}]}, {{}, 
         CuboidBox[{-0.45, -0.95, 0.}, {-0.4, -0.9, 40.}]}, {{}, 
         CuboidBox[{-0.45, -0.9, 0.}, {-0.4, -0.85, 368.}]}, {{}, 
         CuboidBox[{-0.45, -0.85, 0.}, {-0.4, -0.8, 461.}]}, {{}, 
         CuboidBox[{-0.45, -0.8, 0.}, {-0.4, -0.75, 473.}]}, {{}, 
         CuboidBox[{-0.45, -0.75, 0.}, {-0.4, -0.7, 526.}]}, {{}, 
         CuboidBox[{-0.45, -0.7, 0.}, {-0.4, -0.65, 509.}]}, {{}, 
         CuboidBox[{-0.45, -0.65, 0.}, {-0.4, -0.6, 523.}]}, {{}, 
         CuboidBox[{-0.45, -0.6, 0.}, {-0.4, -0.55, 531.}]}, {{}, 
         CuboidBox[{-0.45, -0.55, 0.}, {-0.4, -0.5, 603.}]}, {{}, 
         CuboidBox[{-0.45, -0.5, 0.}, {-0.4, -0.45, 607.}]}, {{}, 
         CuboidBox[{-0.45, -0.45, 0.}, {-0.4, -0.4, 641.}]}, {{}, 
         CuboidBox[{-0.45, -0.4, 0.}, {-0.4, -0.35, 695.}]}, {{}, 
         CuboidBox[{-0.45, -0.35, 0.}, {-0.4, -0.3, 747.}]}, {{}, 
         CuboidBox[{-0.45, -0.3, 0.}, {-0.4, -0.25, 786.}]}, {{}, 
         CuboidBox[{-0.45, -0.25, 0.}, {-0.4, -0.2, 827.}]}, {{}, 
         CuboidBox[{-0.45, -0.2, 0.}, {-0.4, -0.15, 899.}]}, {{}, 
         CuboidBox[{-0.45, -0.15, 0.}, {-0.4, -0.1, 910.}]}, {{}, 
         CuboidBox[{-0.45, -0.1, 0.}, {-0.4, -0.05, 958.}]}, {{}, 
         CuboidBox[{-0.45, -0.05, 0.}, {-0.4, 0., 954.}]}, {{}, 
         CuboidBox[{-0.45, 0., 0.}, {-0.4, 0.05, 908.}]}, {{}, 
         CuboidBox[{-0.45, 0.05, 0.}, {-0.4, 0.1, 893.}]}, {{}, 
         CuboidBox[{-0.45, 0.1, 0.}, {-0.4, 0.15, 870.}]}, {{}, 
         CuboidBox[{-0.45, 0.15, 0.}, {-0.4, 0.2, 860.}]}, {{}, 
         CuboidBox[{-0.45, 0.2, 0.}, {-0.4, 0.25, 796.}]}, {{}, 
         CuboidBox[{-0.45, 0.25, 0.}, {-0.4, 0.3, 735.}]}, {{}, 
         CuboidBox[{-0.45, 0.3, 0.}, {-0.4, 0.35, 685.}]}, {{}, 
         CuboidBox[{-0.45, 0.35, 0.}, {-0.4, 0.4, 738.}]}, {{}, 
         CuboidBox[{-0.45, 0.4, 0.}, {-0.4, 0.45, 679.}]}, {{}, 
         CuboidBox[{-0.45, 0.45, 0.}, {-0.4, 0.5, 594.}]}, {{}, 
         CuboidBox[{-0.45, 0.5, 0.}, {-0.4, 0.55, 593.}]}, {{}, 
         CuboidBox[{-0.45, 0.55, 0.}, {-0.4, 0.6, 592.}]}, {{}, 
         CuboidBox[{-0.45, 0.6, 0.}, {-0.4, 0.65, 522.}]}, {{}, 
         CuboidBox[{-0.45, 0.65, 0.}, {-0.4, 0.7, 518.}]}, {{}, 
         CuboidBox[{-0.45, 0.7, 0.}, {-0.4, 0.75, 470.}]}, {{}, 
         CuboidBox[{-0.45, 0.75, 0.}, {-0.4, 0.8, 431.}]}, {{}, 
         CuboidBox[{-0.45, 0.8, 0.}, {-0.4, 0.85, 437.}]}, {{}, 
         CuboidBox[{-0.45, 0.85, 0.}, {-0.4, 0.9, 405.}]}, {{}, 
         CuboidBox[{-0.45, 0.9, 0.}, {-0.4, 0.95, 45.}]}, {{}, 
         CuboidBox[{-0.4, -0.95, 0.}, {-0.35, -0.9, 220.}]}, {{}, 
         CuboidBox[{-0.4, -0.9, 0.}, {-0.35, -0.85, 415.}]}, {{}, 
         CuboidBox[{-0.4, -0.85, 0.}, {-0.35, -0.8, 425.}]}, {{}, 
         CuboidBox[{-0.4, -0.8, 0.}, {-0.35, -0.75, 484.}]}, {{}, 
         CuboidBox[{-0.4, -0.75, 0.}, {-0.35, -0.7, 477.}]}, {{}, 
         CuboidBox[{-0.4, -0.7, 0.}, {-0.35, -0.65, 540.}]}, {{}, 
         CuboidBox[{-0.4, -0.65, 0.}, {-0.35, -0.6, 510.}]}, {{}, 
         CuboidBox[{-0.4, -0.6, 0.}, {-0.35, -0.55, 573.}]}, {{}, 
         CuboidBox[{-0.4, -0.55, 0.}, {-0.35, -0.5, 605.}]}, {{}, 
         CuboidBox[{-0.4, -0.5, 0.}, {-0.35, -0.45, 670.}]}, {{}, 
         CuboidBox[{-0.4, -0.45, 0.}, {-0.35, -0.4, 739.}]}, {{}, 
         CuboidBox[{-0.4, -0.4, 0.}, {-0.35, -0.35, 735.}]}, {{}, 
         CuboidBox[{-0.4, -0.35, 0.}, {-0.35, -0.3, 801.}]}, {{}, 
         CuboidBox[{-0.4, -0.3, 0.}, {-0.35, -0.25, 870.}]}, {{}, 
         CuboidBox[{-0.4, -0.25, 0.}, {-0.35, -0.2, 898.}]}, {{}, 
         CuboidBox[{-0.4, -0.2, 0.}, {-0.35, -0.15, 981.}]}, {{}, 
         CuboidBox[{-0.4, -0.15, 0.}, {-0.35, -0.1, 999.}]}, {{}, 
         CuboidBox[{-0.4, -0.1, 0.}, {-0.35, -0.05, 1072.}]}, {{}, 
         CuboidBox[{-0.4, -0.05, 0.}, {-0.35, 0., 1016.}]}, {{}, 
         CuboidBox[{-0.4, 0., 0.}, {-0.35, 0.05, 1079.}]}, {{}, 
         CuboidBox[{-0.4, 0.05, 0.}, {-0.35, 0.1, 968.}]}, {{}, 
         CuboidBox[{-0.4, 0.1, 0.}, {-0.35, 0.15, 993.}]}, {{}, 
         CuboidBox[{-0.4, 0.15, 0.}, {-0.35, 0.2, 983.}]}, {{}, 
         CuboidBox[{-0.4, 0.2, 0.}, {-0.35, 0.25, 896.}]}, {{}, 
         CuboidBox[{-0.4, 0.25, 0.}, {-0.35, 0.3, 885.}]}, {{}, 
         CuboidBox[{-0.4, 0.3, 0.}, {-0.35, 0.35, 801.}]}, {{}, 
         CuboidBox[{-0.4, 0.35, 0.}, {-0.35, 0.4, 815.}]}, {{}, 
         CuboidBox[{-0.4, 0.4, 0.}, {-0.35, 0.45, 706.}]}, {{}, 
         CuboidBox[{-0.4, 0.45, 0.}, {-0.35, 0.5, 663.}]}, {{}, 
         CuboidBox[{-0.4, 0.5, 0.}, {-0.35, 0.55, 587.}]}, {{}, 
         CuboidBox[{-0.4, 0.55, 0.}, {-0.35, 0.6, 589.}]}, {{}, 
         CuboidBox[{-0.4, 0.6, 0.}, {-0.35, 0.65, 503.}]}, {{}, 
         CuboidBox[{-0.4, 0.65, 0.}, {-0.35, 0.7, 504.}]}, {{}, 
         CuboidBox[{-0.4, 0.7, 0.}, {-0.35, 0.75, 506.}]}, {{}, 
         CuboidBox[{-0.4, 0.75, 0.}, {-0.35, 0.8, 472.}]}, {{}, 
         CuboidBox[{-0.4, 0.8, 0.}, {-0.35, 0.85, 430.}]}, {{}, 
         CuboidBox[{-0.4, 0.85, 0.}, {-0.35, 0.9, 418.}]}, {{}, 
         CuboidBox[{-0.4, 0.9, 0.}, {-0.35, 0.95, 217.}]}, {{}, 
         CuboidBox[{-0.35, -1., 0.}, {-0.3, -0.95, 5.}]}, {{}, 
         CuboidBox[{-0.35, -0.95, 0.}, {-0.3, -0.9, 365.}]}, {{}, 
         CuboidBox[{-0.35, -0.9, 0.}, {-0.3, -0.85, 429.}]}, {{}, 
         CuboidBox[{-0.35, -0.85, 0.}, {-0.3, -0.8, 438.}]}, {{}, 
         CuboidBox[{-0.35, -0.8, 0.}, {-0.3, -0.75, 500.}]}, {{}, 
         CuboidBox[{-0.35, -0.75, 0.}, {-0.3, -0.7, 484.}]}, {{}, 
         CuboidBox[{-0.35, -0.7, 0.}, {-0.3, -0.65, 526.}]}, {{}, 
         CuboidBox[{-0.35, -0.65, 0.}, {-0.3, -0.6, 614.}]}, {{}, 
         CuboidBox[{-0.35, -0.6, 0.}, {-0.3, -0.55, 572.}]}, {{}, 
         CuboidBox[{-0.35, -0.55, 0.}, {-0.3, -0.5, 648.}]}, {{}, 
         CuboidBox[{-0.35, -0.5, 0.}, {-0.3, -0.45, 736.}]}, {{}, 
         CuboidBox[{-0.35, -0.45, 0.}, {-0.3, -0.4, 721.}]}, {{}, 
         CuboidBox[{-0.35, -0.4, 0.}, {-0.3, -0.35, 773.}]}, {{}, 
         CuboidBox[{-0.35, -0.35, 0.}, {-0.3, -0.3, 855.}]}, {{}, 
         CuboidBox[{-0.35, -0.3, 0.}, {-0.3, -0.25, 954.}]}, {{}, 
         CuboidBox[{-0.35, -0.25, 0.}, {-0.3, -0.2, 965.}]}, {{}, 
         CuboidBox[{-0.35, -0.2, 0.}, {-0.3, -0.15, 1069.}]}, {{}, 
         CuboidBox[{-0.35, -0.15, 0.}, {-0.3, -0.1, 1118.}]}, {{}, 
         CuboidBox[{-0.35, -0.1, 0.}, {-0.3, -0.05, 1230.}]}, {{}, 
         CuboidBox[{-0.35, -0.05, 0.}, {-0.3, 0., 1196.}]}, {{}, 
         CuboidBox[{-0.35, 0., 0.}, {-0.3, 0.05, 1191.}]}, {{}, 
         CuboidBox[{-0.35, 0.05, 0.}, {-0.3, 0.1, 1174.}]}, {{}, 
         CuboidBox[{-0.35, 0.1, 0.}, {-0.3, 0.15, 1168.}]}, {{}, 
         CuboidBox[{-0.35, 0.15, 0.}, {-0.3, 0.2, 1095.}]}, {{}, 
         CuboidBox[{-0.35, 0.2, 0.}, {-0.3, 0.25, 1025.}]}, {{}, 
         CuboidBox[{-0.35, 0.25, 0.}, {-0.3, 0.3, 935.}]}, {{}, 
         CuboidBox[{-0.35, 0.3, 0.}, {-0.3, 0.35, 870.}]}, {{}, 
         CuboidBox[{-0.35, 0.35, 0.}, {-0.3, 0.4, 780.}]}, {{}, 
         CuboidBox[{-0.35, 0.4, 0.}, {-0.3, 0.45, 702.}]}, {{}, 
         CuboidBox[{-0.35, 0.45, 0.}, {-0.3, 0.5, 684.}]}, {{}, 
         CuboidBox[{-0.35, 0.5, 0.}, {-0.3, 0.55, 637.}]}, {{}, 
         CuboidBox[{-0.35, 0.55, 0.}, {-0.3, 0.6, 584.}]}, {{}, 
         CuboidBox[{-0.35, 0.6, 0.}, {-0.3, 0.65, 536.}]}, {{}, 
         CuboidBox[{-0.35, 0.65, 0.}, {-0.3, 0.7, 552.}]}, {{}, 
         CuboidBox[{-0.35, 0.7, 0.}, {-0.3, 0.75, 508.}]}, {{}, 
         CuboidBox[{-0.35, 0.75, 0.}, {-0.3, 0.8, 474.}]}, {{}, 
         CuboidBox[{-0.35, 0.8, 0.}, {-0.3, 0.85, 464.}]}, {{}, 
         CuboidBox[{-0.35, 0.85, 0.}, {-0.3, 0.9, 427.}]}, {{}, 
         CuboidBox[{-0.35, 0.9, 0.}, {-0.3, 0.95, 374.}]}, {{}, 
         CuboidBox[{-0.35, 0.95, 0.}, {-0.3, 1., 4.}]}, {{}, 
         CuboidBox[{-0.3, -1., 0.}, {-0.25, -0.95, 94.}]}, {{}, 
         CuboidBox[{-0.3, -0.95, 0.}, {-0.25, -0.9, 388.}]}, {{}, 
         CuboidBox[{-0.3, -0.9, 0.}, {-0.25, -0.85, 461.}]}, {{}, 
         CuboidBox[{-0.3, -0.85, 0.}, {-0.25, -0.8, 492.}]}, {{}, 
         CuboidBox[{-0.3, -0.8, 0.}, {-0.25, -0.75, 514.}]}, {{}, 
         CuboidBox[{-0.3, -0.75, 0.}, {-0.25, -0.7, 511.}]}, {{}, 
         CuboidBox[{-0.3, -0.7, 0.}, {-0.25, -0.65, 487.}]}, {{}, 
         CuboidBox[{-0.3, -0.65, 0.}, {-0.25, -0.6, 593.}]}, {{}, 
         CuboidBox[{-0.3, -0.6, 0.}, {-0.25, -0.55, 668.}]}, {{}, 
         CuboidBox[{-0.3, -0.55, 0.}, {-0.25, -0.5, 649.}]}, {{}, 
         CuboidBox[{-0.3, -0.5, 0.}, {-0.25, -0.45, 693.}]}, {{}, 
         CuboidBox[{-0.3, -0.45, 0.}, {-0.25, -0.4, 786.}]}, {{}, 
         CuboidBox[{-0.3, -0.4, 0.}, {-0.25, -0.35, 842.}]}, {{}, 
         CuboidBox[{-0.3, -0.35, 0.}, {-0.25, -0.3, 852.}]}, {{}, 
         CuboidBox[{-0.3, -0.3, 0.}, {-0.25, -0.25, 1024.}]}, {{}, 
         CuboidBox[{-0.3, -0.25, 0.}, {-0.25, -0.2, 1180.}]}, {{}, 
         CuboidBox[{-0.3, -0.2, 0.}, {-0.25, -0.15, 1173.}]}, {{}, 
         CuboidBox[{-0.3, -0.15, 0.}, {-0.25, -0.1, 1320.}]}, {{}, 
         CuboidBox[{-0.3, -0.1, 0.}, {-0.25, -0.05, 1408.}]}, {{}, 
         CuboidBox[{-0.3, -0.05, 0.}, {-0.25, 0., 1439.}]}, {{}, 
         CuboidBox[{-0.3, 0., 0.}, {-0.25, 0.05, 1439.}]}, {{}, 
         CuboidBox[{-0.3, 0.05, 0.}, {-0.25, 0.1, 1437.}]}, {{}, 
         CuboidBox[{-0.3, 0.1, 0.}, {-0.25, 0.15, 1333.}]}, {{}, 
         CuboidBox[{-0.3, 0.15, 0.}, {-0.25, 0.2, 1227.}]}, {{}, 
         CuboidBox[{-0.3, 0.2, 0.}, {-0.25, 0.25, 1068.}]}, {{}, 
         CuboidBox[{-0.3, 0.25, 0.}, {-0.25, 0.3, 1041.}]}, {{}, 
         CuboidBox[{-0.3, 0.3, 0.}, {-0.25, 0.35, 910.}]}, {{}, 
         CuboidBox[{-0.3, 0.35, 0.}, {-0.25, 0.4, 890.}]}, {{}, 
         CuboidBox[{-0.3, 0.4, 0.}, {-0.25, 0.45, 774.}]}, {{}, 
         CuboidBox[{-0.3, 0.45, 0.}, {-0.25, 0.5, 696.}]}, {{}, 
         CuboidBox[{-0.3, 0.5, 0.}, {-0.25, 0.55, 742.}]}, {{}, 
         CuboidBox[{-0.3, 0.55, 0.}, {-0.25, 0.6, 672.}]}, {{}, 
         CuboidBox[{-0.3, 0.6, 0.}, {-0.25, 0.65, 534.}]}, {{}, 
         CuboidBox[{-0.3, 0.65, 0.}, {-0.25, 0.7, 553.}]}, {{}, 
         CuboidBox[{-0.3, 0.7, 0.}, {-0.25, 0.75, 524.}]}, {{}, 
         CuboidBox[{-0.3, 0.75, 0.}, {-0.25, 0.8, 518.}]}, {{}, 
         CuboidBox[{-0.3, 0.8, 0.}, {-0.25, 0.85, 448.}]}, {{}, 
         CuboidBox[{-0.3, 0.85, 0.}, {-0.25, 0.9, 393.}]}, {{}, 
         CuboidBox[{-0.3, 0.9, 0.}, {-0.25, 0.95, 389.}]}, {{}, 
         CuboidBox[{-0.3, 0.95, 0.}, {-0.25, 1., 93.}]}, {{}, 
         CuboidBox[{-0.25, -1., 0.}, {-0.2, -0.95, 204.}]}, {{}, 
         CuboidBox[{-0.25, -0.95, 0.}, {-0.2, -0.9, 400.}]}, {{}, 
         CuboidBox[{-0.25, -0.9, 0.}, {-0.2, -0.85, 409.}]}, {{}, 
         CuboidBox[{-0.25, -0.85, 0.}, {-0.2, -0.8, 452.}]}, {{}, 
         CuboidBox[{-0.25, -0.8, 0.}, {-0.2, -0.75, 475.}]}, {{}, 
         CuboidBox[{-0.25, -0.75, 0.}, {-0.2, -0.7, 535.}]}, {{}, 
         CuboidBox[{-0.25, -0.7, 0.}, {-0.2, -0.65, 562.}]}, {{}, 
         CuboidBox[{-0.25, -0.65, 0.}, {-0.2, -0.6, 648.}]}, {{}, 
         CuboidBox[{-0.25, -0.6, 0.}, {-0.2, -0.55, 681.}]}, {{}, 
         CuboidBox[{-0.25, -0.55, 0.}, {-0.2, -0.5, 701.}]}, {{}, 
         CuboidBox[{-0.25, -0.5, 0.}, {-0.2, -0.45, 796.}]}, {{}, 
         CuboidBox[{-0.25, -0.45, 0.}, {-0.2, -0.4, 869.}]}, {{}, 
         CuboidBox[{-0.25, -0.4, 0.}, {-0.2, -0.35, 974.}]}, {{}, 
         CuboidBox[{-0.25, -0.35, 0.}, {-0.2, -0.3, 988.}]}, {{}, 
         CuboidBox[{-0.25, -0.3, 0.}, {-0.2, -0.25, 1114.}]}, {{}, 
         CuboidBox[{-0.25, -0.25, 0.}, {-0.2, -0.2, 1233.}]}, {{}, 
         CuboidBox[{-0.25, -0.2, 0.}, {-0.2, -0.15, 1359.}]}, {{}, 
         CuboidBox[{-0.25, -0.15, 0.}, {-0.2, -0.1, 1515.}]}, {{}, 
         CuboidBox[{-0.25, -0.1, 0.}, {-0.2, -0.05, 1652.}]}, {{}, 
         CuboidBox[{-0.25, -0.05, 0.}, {-0.2, 0., 1846.}]}, {{}, 
         CuboidBox[{-0.25, 0., 0.}, {-0.2, 0.05, 1738.}]}, {{}, 
         CuboidBox[{-0.25, 0.05, 0.}, {-0.2, 0.1, 1714.}]}, {{}, 
         CuboidBox[{-0.25, 0.1, 0.}, {-0.2, 0.15, 1559.}]}, {{}, 
         CuboidBox[{-0.25, 0.15, 0.}, {-0.2, 0.2, 1387.}]}, {{}, 
         CuboidBox[{-0.25, 0.2, 0.}, {-0.2, 0.25, 1305.}]}, {{}, 
         CuboidBox[{-0.25, 0.25, 0.}, {-0.2, 0.3, 1108.}]}, {{}, 
         CuboidBox[{-0.25, 0.3, 0.}, {-0.2, 0.35, 1029.}]}, {{}, 
         CuboidBox[{-0.25, 0.35, 0.}, {-0.2, 0.4, 923.}]}, {{}, 
         CuboidBox[{-0.25, 0.4, 0.}, {-0.2, 0.45, 834.}]}, {{}, 
         CuboidBox[{-0.25, 0.45, 0.}, {-0.2, 0.5, 755.}]}, {{}, 
         CuboidBox[{-0.25, 0.5, 0.}, {-0.2, 0.55, 662.}]}, {{}, 
         CuboidBox[{-0.25, 0.55, 0.}, {-0.2, 0.6, 711.}]}, {{}, 
         CuboidBox[{-0.25, 0.6, 0.}, {-0.2, 0.65, 624.}]}, {{}, 
         CuboidBox[{-0.25, 0.65, 0.}, {-0.2, 0.7, 563.}]}, {{}, 
         CuboidBox[{-0.25, 0.7, 0.}, {-0.2, 0.75, 524.}]}, {{}, 
         CuboidBox[{-0.25, 0.75, 0.}, {-0.2, 0.8, 483.}]}, {{}, 
         CuboidBox[{-0.25, 0.8, 0.}, {-0.2, 0.85, 455.}]}, {{}, 
         CuboidBox[{-0.25, 0.85, 0.}, {-0.2, 0.9, 423.}]}, {{}, 
         CuboidBox[{-0.25, 0.9, 0.}, {-0.2, 0.95, 443.}]}, {{}, 
         CuboidBox[{-0.25, 0.95, 0.}, {-0.2, 1., 188.}]}, {{}, 
         CuboidBox[{-0.2, -1., 0.}, {-0.15, -0.95, 288.}]}, {{}, 
         CuboidBox[{-0.2, -0.95, 0.}, {-0.15, -0.9, 422.}]}, {{}, 
         CuboidBox[{-0.2, -0.9, 0.}, {-0.15, -0.85, 476.}]}, {{}, 
         CuboidBox[{-0.2, -0.85, 0.}, {-0.15, -0.8, 514.}]}, {{}, 
         CuboidBox[{-0.2, -0.8, 0.}, {-0.15, -0.75, 494.}]}, {{}, 
         CuboidBox[{-0.2, -0.75, 0.}, {-0.15, -0.7, 543.}]}, {{}, 
         CuboidBox[{-0.2, -0.7, 0.}, {-0.15, -0.65, 594.}]}, {{}, 
         CuboidBox[{-0.2, -0.65, 0.}, {-0.15, -0.6, 606.}]}, {{}, 
         CuboidBox[{-0.2, -0.6, 0.}, {-0.15, -0.55, 625.}]}, {{}, 
         CuboidBox[{-0.2, -0.55, 0.}, {-0.15, -0.5, 686.}]}, {{}, 
         CuboidBox[{-0.2, -0.5, 0.}, {-0.15, -0.45, 828.}]}, {{}, 
         CuboidBox[{-0.2, -0.45, 0.}, {-0.15, -0.4, 883.}]}, {{}, 
         CuboidBox[{-0.2, -0.4, 0.}, {-0.15, -0.35, 999.}]}, {{}, 
         CuboidBox[{-0.2, -0.35, 0.}, {-0.15, -0.3, 1064.}]}, {{}, 
         CuboidBox[{-0.2, -0.3, 0.}, {-0.15, -0.25, 1215.}]}, {{}, 
         CuboidBox[{-0.2, -0.25, 0.}, {-0.15, -0.2, 1439.}]}, {{}, 
         CuboidBox[{-0.2, -0.2, 0.}, {-0.15, -0.15, 1627.}]}, {{}, 
         CuboidBox[{-0.2, -0.15, 0.}, {-0.15, -0.1, 1910.}]}, {{}, 
         CuboidBox[{-0.2, -0.1, 0.}, {-0.15, -0.05, 2108.}]}, {{}, 
         CuboidBox[{-0.2, -0.05, 0.}, {-0.15, 0., 2278.}]}, {{}, 
         CuboidBox[{-0.2, 0., 0.}, {-0.15, 0.05, 2378.}]}, {{}, 
         CuboidBox[{-0.2, 0.05, 0.}, {-0.15, 0.1, 2086.}]}, {{}, 
         CuboidBox[{-0.2, 0.1, 0.}, {-0.15, 0.15, 1880.}]}, {{}, 
         CuboidBox[{-0.2, 0.15, 0.}, {-0.15, 0.2, 1470.}]}, {{}, 
         CuboidBox[{-0.2, 0.2, 0.}, {-0.15, 0.25, 1411.}]}, {{}, 
         CuboidBox[{-0.2, 0.25, 0.}, {-0.15, 0.3, 1186.}]}, {{}, 
         CuboidBox[{-0.2, 0.3, 0.}, {-0.15, 0.35, 1079.}]}, {{}, 
         CuboidBox[{-0.2, 0.35, 0.}, {-0.15, 0.4, 958.}]}, {{}, 
         CuboidBox[{-0.2, 0.4, 0.}, {-0.15, 0.45, 872.}]}, {{}, 
         CuboidBox[{-0.2, 0.45, 0.}, {-0.15, 0.5, 751.}]}, {{}, 
         CuboidBox[{-0.2, 0.5, 0.}, {-0.15, 0.55, 691.}]}, {{}, 
         CuboidBox[{-0.2, 0.55, 0.}, {-0.15, 0.6, 639.}]}, {{}, 
         CuboidBox[{-0.2, 0.6, 0.}, {-0.15, 0.65, 597.}]}, {{}, 
         CuboidBox[{-0.2, 0.65, 0.}, {-0.15, 0.7, 565.}]}, {{}, 
         CuboidBox[{-0.2, 0.7, 0.}, {-0.15, 0.75, 544.}]}, {{}, 
         CuboidBox[{-0.2, 0.75, 0.}, {-0.15, 0.8, 531.}]}, {{}, 
         CuboidBox[{-0.2, 0.8, 0.}, {-0.15, 0.85, 496.}]}, {{}, 
         CuboidBox[{-0.2, 0.85, 0.}, {-0.15, 0.9, 437.}]}, {{}, 
         CuboidBox[{-0.2, 0.9, 0.}, {-0.15, 0.95, 435.}]}, {{}, 
         CuboidBox[{-0.2, 0.95, 0.}, {-0.15, 1., 275.}]}, {{}, 
         CuboidBox[{-0.15, -1., 0.}, {-0.1, -0.95, 337.}]}, {{}, 
         CuboidBox[{-0.15, -0.95, 0.}, {-0.1, -0.9, 436.}]}, {{}, 
         CuboidBox[{-0.15, -0.9, 0.}, {-0.1, -0.85, 464.}]}, {{}, 
         CuboidBox[{-0.15, -0.85, 0.}, {-0.1, -0.8, 440.}]}, {{}, 
         CuboidBox[{-0.15, -0.8, 0.}, {-0.1, -0.75, 479.}]}, {{}, 
         CuboidBox[{-0.15, -0.75, 0.}, {-0.1, -0.7, 493.}]}, {{}, 
         CuboidBox[{-0.15, -0.7, 0.}, {-0.1, -0.65, 561.}]}, {{}, 
         CuboidBox[{-0.15, -0.65, 0.}, {-0.1, -0.6, 607.}]}, {{}, 
         CuboidBox[{-0.15, -0.6, 0.}, {-0.1, -0.55, 669.}]}, {{}, 
         CuboidBox[{-0.15, -0.55, 0.}, {-0.1, -0.5, 684.}]}, {{}, 
         CuboidBox[{-0.15, -0.5, 0.}, {-0.1, -0.45, 785.}]}, {{}, 
         CuboidBox[{-0.15, -0.45, 0.}, {-0.1, -0.4, 880.}]}, {{}, 
         CuboidBox[{-0.15, -0.4, 0.}, {-0.1, -0.35, 1005.}]}, {{}, 
         CuboidBox[{-0.15, -0.35, 0.}, {-0.1, -0.3, 1136.}]}, {{}, 
         CuboidBox[{-0.15, -0.3, 0.}, {-0.1, -0.25, 1306.}]}, {{}, 
         CuboidBox[{-0.15, -0.25, 0.}, {-0.1, -0.2, 1574.}]}, {{}, 
         CuboidBox[{-0.15, -0.2, 0.}, {-0.1, -0.15, 1858.}]}, {{}, 
         CuboidBox[{-0.15, -0.15, 0.}, {-0.1, -0.1, 2258.}]}, {{}, 
         CuboidBox[{-0.15, -0.1, 0.}, {-0.1, -0.05, 2804.}]}, {{}, 
         CuboidBox[{-0.15, -0.05, 0.}, {-0.1, 0., 3186.}]}, {{}, 
         CuboidBox[{-0.15, 0., 0.}, {-0.1, 0.05, 3145.}]}, {{}, 
         CuboidBox[{-0.15, 0.05, 0.}, {-0.1, 0.1, 2844.}]}, {{}, 
         CuboidBox[{-0.15, 0.1, 0.}, {-0.1, 0.15, 2280.}]}, {{}, 
         CuboidBox[{-0.15, 0.15, 0.}, {-0.1, 0.2, 1876.}]}, {{}, 
         CuboidBox[{-0.15, 0.2, 0.}, {-0.1, 0.25, 1553.}]}, {{}, 
         CuboidBox[{-0.15, 0.25, 0.}, {-0.1, 0.3, 1296.}]}, {{}, 
         CuboidBox[{-0.15, 0.3, 0.}, {-0.1, 0.35, 1156.}]}, {{}, 
         CuboidBox[{-0.15, 0.35, 0.}, {-0.1, 0.4, 977.}]}, {{}, 
         CuboidBox[{-0.15, 0.4, 0.}, {-0.1, 0.45, 935.}]}, {{}, 
         CuboidBox[{-0.15, 0.45, 0.}, {-0.1, 0.5, 758.}]}, {{}, 
         CuboidBox[{-0.15, 0.5, 0.}, {-0.1, 0.55, 723.}]}, {{}, 
         CuboidBox[{-0.15, 0.55, 0.}, {-0.1, 0.6, 639.}]}, {{}, 
         CuboidBox[{-0.15, 0.6, 0.}, {-0.1, 0.65, 613.}]}, {{}, 
         CuboidBox[{-0.15, 0.65, 0.}, {-0.1, 0.7, 609.}]}, {{}, 
         CuboidBox[{-0.15, 0.7, 0.}, {-0.1, 0.75, 537.}]}, {{}, 
         CuboidBox[{-0.15, 0.75, 0.}, {-0.1, 0.8, 490.}]}, {{}, 
         CuboidBox[{-0.15, 0.8, 0.}, {-0.1, 0.85, 459.}]}, {{}, 
         CuboidBox[{-0.15, 0.85, 0.}, {-0.1, 0.9, 481.}]}, {{}, 
         CuboidBox[{-0.15, 0.9, 0.}, {-0.1, 0.95, 416.}]}, {{}, 
         CuboidBox[{-0.15, 0.95, 0.}, {-0.1, 1., 324.}]}, {{}, 
         CuboidBox[{-0.1, -1., 0.}, {-0.05, -0.95, 376.}]}, {{}, 
         CuboidBox[{-0.1, -0.95, 0.}, {-0.05, -0.9, 405.}]}, {{}, 
         CuboidBox[{-0.1, -0.9, 0.}, {-0.05, -0.85, 440.}]}, {{}, 
         CuboidBox[{-0.1, -0.85, 0.}, {-0.05, -0.8, 502.}]}, {{}, 
         CuboidBox[{-0.1, -0.8, 0.}, {-0.05, -0.75, 548.}]}, {{}, 
         CuboidBox[{-0.1, -0.75, 0.}, {-0.05, -0.7, 604.}]}, {{}, 
         CuboidBox[{-0.1, -0.7, 0.}, {-0.05, -0.65, 624.}]}, {{}, 
         CuboidBox[{-0.1, -0.65, 0.}, {-0.05, -0.6, 642.}]}, {{}, 
         CuboidBox[{-0.1, -0.6, 0.}, {-0.05, -0.55, 679.}]}, {{}, 
         CuboidBox[{-0.1, -0.55, 0.}, {-0.05, -0.5, 736.}]}, {{}, 
         CuboidBox[{-0.1, -0.5, 0.}, {-0.05, -0.45, 814.}]}, {{}, 
         CuboidBox[{-0.1, -0.45, 0.}, {-0.05, -0.4, 908.}]}, {{}, 
         CuboidBox[{-0.1, -0.4, 0.}, {-0.05, -0.35, 1065.}]}, {{}, 
         CuboidBox[{-0.1, -0.35, 0.}, {-0.05, -0.3, 1192.}]}, {{}, 
         CuboidBox[{-0.1, -0.3, 0.}, {-0.05, -0.25, 1391.}]}, {{}, 
         CuboidBox[{-0.1, -0.25, 0.}, {-0.05, -0.2, 1629.}]}, {{}, 
         CuboidBox[{-0.1, -0.2, 0.}, {-0.05, -0.15, 2107.}]}, {{}, 
         CuboidBox[{-0.1, -0.15, 0.}, {-0.05, -0.1, 2773.}]}, {{}, 
         CuboidBox[{-0.1, -0.1, 0.}, {-0.05, -0.05, 3768.}]}, {{}, 
         CuboidBox[{-0.1, -0.05, 0.}, {-0.05, 0., 5151.}]}, {{}, 
         CuboidBox[{-0.1, 0., 0.}, {-0.05, 0.05, 5110.}]}, {{}, 
         CuboidBox[{-0.1, 0.05, 0.}, {-0.05, 0.1, 3720.}]}, {{}, 
         CuboidBox[{-0.1, 0.1, 0.}, {-0.05, 0.15, 2778.}]}, {{}, 
         CuboidBox[{-0.1, 0.15, 0.}, {-0.05, 0.2, 2101.}]}, {{}, 
         CuboidBox[{-0.1, 0.2, 0.}, {-0.05, 0.25, 1749.}]}, {{}, 
         CuboidBox[{-0.1, 0.25, 0.}, {-0.05, 0.3, 1348.}]}, {{}, 
         CuboidBox[{-0.1, 0.3, 0.}, {-0.05, 0.35, 1160.}]}, {{}, 
         CuboidBox[{-0.1, 0.35, 0.}, {-0.05, 0.4, 1043.}]}, {{}, 
         CuboidBox[{-0.1, 0.4, 0.}, {-0.05, 0.45, 920.}]}, {{}, 
         CuboidBox[{-0.1, 0.45, 0.}, {-0.05, 0.5, 860.}]}, {{}, 
         CuboidBox[{-0.1, 0.5, 0.}, {-0.05, 0.55, 751.}]}, {{}, 
         CuboidBox[{-0.1, 0.55, 0.}, {-0.05, 0.6, 707.}]}, {{}, 
         CuboidBox[{-0.1, 0.6, 0.}, {-0.05, 0.65, 633.}]}, {{}, 
         CuboidBox[{-0.1, 0.65, 0.}, {-0.05, 0.7, 585.}]}, {{}, 
         CuboidBox[{-0.1, 0.7, 0.}, {-0.05, 0.75, 537.}]}, {{}, 
         CuboidBox[{-0.1, 0.75, 0.}, {-0.05, 0.8, 525.}]}, {{}, 
         CuboidBox[{-0.1, 0.8, 0.}, {-0.05, 0.85, 483.}]}, {{}, 
         CuboidBox[{-0.1, 0.85, 0.}, {-0.05, 0.9, 469.}]}, {{}, 
         CuboidBox[{-0.1, 0.9, 0.}, {-0.05, 0.95, 424.}]}, {{}, 
         CuboidBox[{-0.1, 0.95, 0.}, {-0.05, 1., 368.}]}, {{}, 
         CuboidBox[{-0.05, -1., 0.}, {0., -0.95, 418.}]}, {{}, 
         CuboidBox[{-0.05, -0.95, 0.}, {0., -0.9, 381.}]}, {{}, 
         CuboidBox[{-0.05, -0.9, 0.}, {0., -0.85, 448.}]}, {{}, 
         CuboidBox[{-0.05, -0.85, 0.}, {0., -0.8, 463.}]}, {{}, 
         CuboidBox[{-0.05, -0.8, 0.}, {0., -0.75, 507.}]}, {{}, 
         CuboidBox[{-0.05, -0.75, 0.}, {0., -0.7, 553.}]}, {{}, 
         CuboidBox[{-0.05, -0.7, 0.}, {0., -0.65, 598.}]}, {{}, 
         CuboidBox[{-0.05, -0.65, 0.}, {0., -0.6, 632.}]}, {{}, 
         CuboidBox[{-0.05, -0.6, 0.}, {0., -0.55, 691.}]}, {{}, 
         CuboidBox[{-0.05, -0.55, 0.}, {0., -0.5, 788.}]}, {{}, 
         CuboidBox[{-0.05, -0.5, 0.}, {0., -0.45, 790.}]}, {{}, 
         CuboidBox[{-0.05, -0.45, 0.}, {0., -0.4, 928.}]}, {{}, 
         CuboidBox[{-0.05, -0.4, 0.}, {0., -0.35, 1078.}]}, {{}, 
         CuboidBox[{-0.05, -0.35, 0.}, {0., -0.3, 1259.}]}, {{}, 
         CuboidBox[{-0.05, -0.3, 0.}, {0., -0.25, 1446.}]}, {{}, 
         CuboidBox[{-0.05, -0.25, 0.}, {0., -0.2, 1811.}]}, {{}, 
         CuboidBox[{-0.05, -0.2, 0.}, {0., -0.15, 2357.}]}, {{}, 
         CuboidBox[{-0.05, -0.15, 0.}, {0., -0.1, 3191.}]}, {{}, 
         CuboidBox[{-0.05, -0.1, 0.}, {0., -0.05, 5137.}]}, {{}, 
         CuboidBox[{-0.05, -0.05, 0.}, {0., 0., 14096.}]}, {{}, 
         CuboidBox[{-0.05, 0., 0.}, {0., 0.05, 13948.}]}, {{}, 
         CuboidBox[{-0.05, 0.05, 0.}, {0., 0.1, 5089.}]}, {{}, 
         CuboidBox[{-0.05, 0.1, 0.}, {0., 0.15, 3124.}]}, {{}, 
         CuboidBox[{-0.05, 0.15, 0.}, {0., 0.2, 2225.}]}, {{}, 
         CuboidBox[{-0.05, 0.2, 0.}, {0., 0.25, 1754.}]}, {{}, 
         CuboidBox[{-0.05, 0.25, 0.}, {0., 0.3, 1474.}]}, {{}, 
         CuboidBox[{-0.05, 0.3, 0.}, {0., 0.35, 1230.}]}, {{}, 
         CuboidBox[{-0.05, 0.35, 0.}, {0., 0.4, 1030.}]}, {{}, 
         CuboidBox[{-0.05, 0.4, 0.}, {0., 0.45, 930.}]}, {{}, 
         CuboidBox[{-0.05, 0.45, 0.}, {0., 0.5, 875.}]}, {{}, 
         CuboidBox[{-0.05, 0.5, 0.}, {0., 0.55, 731.}]}, {{}, 
         CuboidBox[{-0.05, 0.55, 0.}, {0., 0.6, 702.}]}, {{}, 
         CuboidBox[{-0.05, 0.6, 0.}, {0., 0.65, 636.}]}, {{}, 
         CuboidBox[{-0.05, 0.65, 0.}, {0., 0.7, 579.}]}, {{}, 
         CuboidBox[{-0.05, 0.7, 0.}, {0., 0.75, 555.}]}, {{}, 
         CuboidBox[{-0.05, 0.75, 0.}, {0., 0.8, 533.}]}, {{}, 
         CuboidBox[{-0.05, 0.8, 0.}, {0., 0.85, 466.}]}, {{}, 
         CuboidBox[{-0.05, 0.85, 0.}, {0., 0.9, 461.}]}, {{}, 
         CuboidBox[{-0.05, 0.9, 0.}, {0., 0.95, 416.}]}, {{}, 
         CuboidBox[{-0.05, 0.95, 0.}, {0., 1., 428.}]}, {{}, 
         CuboidBox[{0., -1., 0.}, {0.05, -0.95, 431.}]}, {{}, 
         CuboidBox[{0., -0.95, 0.}, {0.05, -0.9, 385.}]}, {{}, 
         CuboidBox[{0., -0.9, 0.}, {0.05, -0.85, 438.}]}, {{}, 
         CuboidBox[{0., -0.85, 0.}, {0.05, -0.8, 480.}]}, {{}, 
         CuboidBox[{0., -0.8, 0.}, {0.05, -0.75, 531.}]}, {{}, 
         CuboidBox[{0., -0.75, 0.}, {0.05, -0.7, 519.}]}, {{}, 
         CuboidBox[{0., -0.7, 0.}, {0.05, -0.65, 611.}]}, {{}, 
         CuboidBox[{0., -0.65, 0.}, {0.05, -0.6, 663.}]}, {{}, 
         CuboidBox[{0., -0.6, 0.}, {0.05, -0.55, 673.}]}, {{}, 
         CuboidBox[{0., -0.55, 0.}, {0.05, -0.5, 753.}]}, {{}, 
         CuboidBox[{0., -0.5, 0.}, {0.05, -0.45, 808.}]}, {{}, 
         CuboidBox[{0., -0.45, 0.}, {0.05, -0.4, 962.}]}, {{}, 
         CuboidBox[{0., -0.4, 0.}, {0.05, -0.35, 1062.}]}, {{}, 
         CuboidBox[{0., -0.35, 0.}, {0.05, -0.3, 1156.}]}, {{}, 
         CuboidBox[{0., -0.3, 0.}, {0.05, -0.25, 1384.}]}, {{}, 
         CuboidBox[{0., -0.25, 0.}, {0.05, -0.2, 1754.}]}, {{}, 
         CuboidBox[{0., -0.2, 0.}, {0.05, -0.15, 2215.}]}, {{}, 
         CuboidBox[{0., -0.15, 0.}, {0.05, -0.1, 3096.}]}, {{}, 
         CuboidBox[{0., -0.1, 0.}, {0.05, -0.05, 5097.}]}, {{}, 
         CuboidBox[{0., -0.05, 0.}, {0.05, 0., 14347.}]}, {{}, 
         CuboidBox[{0., 0., 0.}, {0.05, 0.05, 13853.}]}, {{}, 
         CuboidBox[{0., 0.05, 0.}, {0.05, 0.1, 5136.}]}, {{}, 
         CuboidBox[{0., 0.1, 0.}, {0.05, 0.15, 3222.}]}, {{}, 
         CuboidBox[{0., 0.15, 0.}, {0.05, 0.2, 2141.}]}, {{}, 
         CuboidBox[{0., 0.2, 0.}, {0.05, 0.25, 1759.}]}, {{}, 
         CuboidBox[{0., 0.25, 0.}, {0.05, 0.3, 1497.}]}, {{}, 
         CuboidBox[{0., 0.3, 0.}, {0.05, 0.35, 1243.}]}, {{}, 
         CuboidBox[{0., 0.35, 0.}, {0.05, 0.4, 1022.}]}, {{}, 
         CuboidBox[{0., 0.4, 0.}, {0.05, 0.45, 931.}]}, {{}, 
         CuboidBox[{0., 0.45, 0.}, {0.05, 0.5, 820.}]}, {{}, 
         CuboidBox[{0., 0.5, 0.}, {0.05, 0.55, 748.}]}, {{}, 
         CuboidBox[{0., 0.55, 0.}, {0.05, 0.6, 721.}]}, {{}, 
         CuboidBox[{0., 0.6, 0.}, {0.05, 0.65, 614.}]}, {{}, 
         CuboidBox[{0., 0.65, 0.}, {0.05, 0.7, 577.}]}, {{}, 
         CuboidBox[{0., 0.7, 0.}, {0.05, 0.75, 583.}]}, {{}, 
         CuboidBox[{0., 0.75, 0.}, {0.05, 0.8, 475.}]}, {{}, 
         CuboidBox[{0., 0.8, 0.}, {0.05, 0.85, 459.}]}, {{}, 
         CuboidBox[{0., 0.85, 0.}, {0.05, 0.9, 413.}]}, {{}, 
         CuboidBox[{0., 0.9, 0.}, {0.05, 0.95, 419.}]}, {{}, 
         CuboidBox[{0., 0.95, 0.}, {0.05, 1., 397.}]}, {{}, 
         CuboidBox[{0.05, -1., 0.}, {0.1, -0.95, 396.}]}, {{}, 
         CuboidBox[{0.05, -0.95, 0.}, {0.1, -0.9, 430.}]}, {{}, 
         CuboidBox[{0.05, -0.9, 0.}, {0.1, -0.85, 450.}]}, {{}, 
         CuboidBox[{0.05, -0.85, 0.}, {0.1, -0.8, 506.}]}, {{}, 
         CuboidBox[{0.05, -0.8, 0.}, {0.1, -0.75, 481.}]}, {{}, 
         CuboidBox[{0.05, -0.75, 0.}, {0.1, -0.7, 546.}]}, {{}, 
         CuboidBox[{0.05, -0.7, 0.}, {0.1, -0.65, 586.}]}, {{}, 
         CuboidBox[{0.05, -0.65, 0.}, {0.1, -0.6, 622.}]}, {{}, 
         CuboidBox[{0.05, -0.6, 0.}, {0.1, -0.55, 680.}]}, {{}, 
         CuboidBox[{0.05, -0.55, 0.}, {0.1, -0.5, 743.}]}, {{}, 
         CuboidBox[{0.05, -0.5, 0.}, {0.1, -0.45, 861.}]}, {{}, 
         CuboidBox[{0.05, -0.45, 0.}, {0.1, -0.4, 955.}]}, {{}, 
         CuboidBox[{0.05, -0.4, 0.}, {0.1, -0.35, 1072.}]}, {{}, 
         CuboidBox[{0.05, -0.35, 0.}, {0.1, -0.3, 1205.}]}, {{}, 
         CuboidBox[{0.05, -0.3, 0.}, {0.1, -0.25, 1317.}]}, {{}, 
         CuboidBox[{0.05, -0.25, 0.}, {0.1, -0.2, 1744.}]}, {{}, 
         CuboidBox[{0.05, -0.2, 0.}, {0.1, -0.15, 1984.}]}, {{}, 
         CuboidBox[{0.05, -0.15, 0.}, {0.1, -0.1, 2737.}]}, {{}, 
         CuboidBox[{0.05, -0.1, 0.}, {0.1, -0.05, 3699.}]}, {{}, 
         CuboidBox[{0.05, -0.05, 0.}, {0.1, 0., 5087.}]}, {{}, 
         CuboidBox[{0.05, 0., 0.}, {0.1, 0.05, 5083.}]}, {{}, 
         CuboidBox[{0.05, 0.05, 0.}, {0.1, 0.1, 3809.}]}, {{}, 
         CuboidBox[{0.05, 0.1, 0.}, {0.1, 0.15, 2747.}]}, {{}, 
         CuboidBox[{0.05, 0.15, 0.}, {0.1, 0.2, 2086.}]}, {{}, 
         CuboidBox[{0.05, 0.2, 0.}, {0.1, 0.25, 1805.}]}, {{}, 
         CuboidBox[{0.05, 0.25, 0.}, {0.1, 0.3, 1428.}]}, {{}, 
         CuboidBox[{0.05, 0.3, 0.}, {0.1, 0.35, 1159.}]}, {{}, 
         CuboidBox[{0.05, 0.35, 0.}, {0.1, 0.4, 1053.}]}, {{}, 
         CuboidBox[{0.05, 0.4, 0.}, {0.1, 0.45, 960.}]}, {{}, 
         CuboidBox[{0.05, 0.45, 0.}, {0.1, 0.5, 846.}]}, {{}, 
         CuboidBox[{0.05, 0.5, 0.}, {0.1, 0.55, 776.}]}, {{}, 
         CuboidBox[{0.05, 0.55, 0.}, {0.1, 0.6, 747.}]}, {{}, 
         CuboidBox[{0.05, 0.6, 0.}, {0.1, 0.65, 630.}]}, {{}, 
         CuboidBox[{0.05, 0.65, 0.}, {0.1, 0.7, 577.}]}, {{}, 
         CuboidBox[{0.05, 0.7, 0.}, {0.1, 0.75, 553.}]}, {{}, 
         CuboidBox[{0.05, 0.75, 0.}, {0.1, 0.8, 529.}]}, {{}, 
         CuboidBox[{0.05, 0.8, 0.}, {0.1, 0.85, 444.}]}, {{}, 
         CuboidBox[{0.05, 0.85, 0.}, {0.1, 0.9, 437.}]}, {{}, 
         CuboidBox[{0.05, 0.9, 0.}, {0.1, 0.95, 442.}]}, {{}, 
         CuboidBox[{0.05, 0.95, 0.}, {0.1, 1., 377.}]}, {{}, 
         CuboidBox[{0.1, -1., 0.}, {0.15, -0.95, 348.}]}, {{}, 
         CuboidBox[{0.1, -0.95, 0.}, {0.15, -0.9, 448.}]}, {{}, 
         CuboidBox[{0.1, -0.9, 0.}, {0.15, -0.85, 460.}]}, {{}, 
         CuboidBox[{0.1, -0.85, 0.}, {0.15, -0.8, 464.}]}, {{}, 
         CuboidBox[{0.1, -0.8, 0.}, {0.15, -0.75, 507.}]}, {{}, 
         CuboidBox[{0.1, -0.75, 0.}, {0.15, -0.7, 520.}]}, {{}, 
         CuboidBox[{0.1, -0.7, 0.}, {0.15, -0.65, 587.}]}, {{}, 
         CuboidBox[{0.1, -0.65, 0.}, {0.15, -0.6, 610.}]}, {{}, 
         CuboidBox[{0.1, -0.6, 0.}, {0.15, -0.55, 646.}]}, {{}, 
         CuboidBox[{0.1, -0.55, 0.}, {0.15, -0.5, 687.}]}, {{}, 
         CuboidBox[{0.1, -0.5, 0.}, {0.15, -0.45, 807.}]}, {{}, 
         CuboidBox[{0.1, -0.45, 0.}, {0.15, -0.4, 910.}]}, {{}, 
         CuboidBox[{0.1, -0.4, 0.}, {0.15, -0.35, 983.}]}, {{}, 
         CuboidBox[{0.1, -0.35, 0.}, {0.15, -0.3, 1131.}]}, {{}, 
         CuboidBox[{0.1, -0.3, 0.}, {0.15, -0.25, 1326.}]}, {{}, 
         CuboidBox[{0.1, -0.25, 0.}, {0.15, -0.2, 1545.}]}, {{}, 
         CuboidBox[{0.1, -0.2, 0.}, {0.15, -0.15, 1848.}]}, {{}, 
         CuboidBox[{0.1, -0.15, 0.}, {0.15, -0.1, 2251.}]}, {{}, 
         CuboidBox[{0.1, -0.1, 0.}, {0.15, -0.05, 2690.}]}, {{}, 
         CuboidBox[{0.1, -0.05, 0.}, {0.15, 0., 3158.}]}, {{}, 
         CuboidBox[{0.1, 0., 0.}, {0.15, 0.05, 3098.}]}, {{}, 
         CuboidBox[{0.1, 0.05, 0.}, {0.15, 0.1, 2753.}]}, {{}, 
         CuboidBox[{0.1, 0.1, 0.}, {0.15, 0.15, 2310.}]}, {{}, 
         CuboidBox[{0.1, 0.15, 0.}, {0.15, 0.2, 1878.}]}, {{}, 
         CuboidBox[{0.1, 0.2, 0.}, {0.15, 0.25, 1567.}]}, {{}, 
         CuboidBox[{0.1, 0.25, 0.}, {0.15, 0.3, 1328.}]}, {{}, 
         CuboidBox[{0.1, 0.3, 0.}, {0.15, 0.35, 1191.}]}, {{}, 
         CuboidBox[{0.1, 0.35, 0.}, {0.15, 0.4, 1037.}]}, {{}, 
         CuboidBox[{0.1, 0.4, 0.}, {0.15, 0.45, 945.}]}, {{}, 
         CuboidBox[{0.1, 0.45, 0.}, {0.15, 0.5, 799.}]}, {{}, 
         CuboidBox[{0.1, 0.5, 0.}, {0.15, 0.55, 708.}]}, {{}, 
         CuboidBox[{0.1, 0.55, 0.}, {0.15, 0.6, 647.}]}, {{}, 
         CuboidBox[{0.1, 0.6, 0.}, {0.15, 0.65, 655.}]}, {{}, 
         CuboidBox[{0.1, 0.65, 0.}, {0.15, 0.7, 596.}]}, {{}, 
         CuboidBox[{0.1, 0.7, 0.}, {0.15, 0.75, 567.}]}, {{}, 
         CuboidBox[{0.1, 0.75, 0.}, {0.15, 0.8, 563.}]}, {{}, 
         CuboidBox[{0.1, 0.8, 0.}, {0.15, 0.85, 473.}]}, {{}, 
         CuboidBox[{0.1, 0.85, 0.}, {0.15, 0.9, 452.}]}, {{}, 
         CuboidBox[{0.1, 0.9, 0.}, {0.15, 0.95, 429.}]}, {{}, 
         CuboidBox[{0.1, 0.95, 0.}, {0.15, 1., 339.}]}, {{}, 
         CuboidBox[{0.15, -1., 0.}, {0.2, -0.95, 279.}]}, {{}, 
         CuboidBox[{0.15, -0.95, 0.}, {0.2, -0.9, 446.}]}, {{}, 
         CuboidBox[{0.15, -0.9, 0.}, {0.2, -0.85, 441.}]}, {{}, 
         CuboidBox[{0.15, -0.85, 0.}, {0.2, -0.8, 467.}]}, {{}, 
         CuboidBox[{0.15, -0.8, 0.}, {0.2, -0.75, 499.}]}, {{}, 
         CuboidBox[{0.15, -0.75, 0.}, {0.2, -0.7, 546.}]}, {{}, 
         CuboidBox[{0.15, -0.7, 0.}, {0.2, -0.65, 609.}]}, {{}, 
         CuboidBox[{0.15, -0.65, 0.}, {0.2, -0.6, 617.}]}, {{}, 
         CuboidBox[{0.15, -0.6, 0.}, {0.2, -0.55, 672.}]}, {{}, 
         CuboidBox[{0.15, -0.55, 0.}, {0.2, -0.5, 707.}]}, {{}, 
         CuboidBox[{0.15, -0.5, 0.}, {0.2, -0.45, 778.}]}, {{}, 
         CuboidBox[{0.15, -0.45, 0.}, {0.2, -0.4, 862.}]}, {{}, 
         CuboidBox[{0.15, -0.4, 0.}, {0.2, -0.35, 956.}]}, {{}, 
         CuboidBox[{0.15, -0.35, 0.}, {0.2, -0.3, 1093.}]}, {{}, 
         CuboidBox[{0.15, -0.3, 0.}, {0.2, -0.25, 1353.}]}, {{}, 
         CuboidBox[{0.15, -0.25, 0.}, {0.2, -0.2, 1359.}]}, {{}, 
         CuboidBox[{0.15, -0.2, 0.}, {0.2, -0.15, 1579.}]}, {{}, 
         CuboidBox[{0.15, -0.15, 0.}, {0.2, -0.1, 1883.}]}, {{}, 
         CuboidBox[{0.15, -0.1, 0.}, {0.2, -0.05, 2078.}]}, {{}, 
         CuboidBox[{0.15, -0.05, 0.}, {0.2, 0., 2126.}]}, {{}, 
         CuboidBox[{0.15, 0., 0.}, {0.2, 0.05, 2245.}]}, {{}, 
         CuboidBox[{0.15, 0.05, 0.}, {0.2, 0.1, 2087.}]}, {{}, 
         CuboidBox[{0.15, 0.1, 0.}, {0.2, 0.15, 1801.}]}, {{}, 
         CuboidBox[{0.15, 0.15, 0.}, {0.2, 0.2, 1645.}]}, {{}, 
         CuboidBox[{0.15, 0.2, 0.}, {0.2, 0.25, 1374.}]}, {{}, 
         CuboidBox[{0.15, 0.25, 0.}, {0.2, 0.3, 1219.}]}, {{}, 
         CuboidBox[{0.15, 0.3, 0.}, {0.2, 0.35, 1113.}]}, {{}, 
         CuboidBox[{0.15, 0.35, 0.}, {0.2, 0.4, 948.}]}, {{}, 
         CuboidBox[{0.15, 0.4, 0.}, {0.2, 0.45, 869.}]}, {{}, 
         CuboidBox[{0.15, 0.45, 0.}, {0.2, 0.5, 741.}]}, {{}, 
         CuboidBox[{0.15, 0.5, 0.}, {0.2, 0.55, 718.}]}, {{}, 
         CuboidBox[{0.15, 0.55, 0.}, {0.2, 0.6, 656.}]}, {{}, 
         CuboidBox[{0.15, 0.6, 0.}, {0.2, 0.65, 646.}]}, {{}, 
         CuboidBox[{0.15, 0.65, 0.}, {0.2, 0.7, 558.}]}, {{}, 
         CuboidBox[{0.15, 0.7, 0.}, {0.2, 0.75, 520.}]}, {{}, 
         CuboidBox[{0.15, 0.75, 0.}, {0.2, 0.8, 482.}]}, {{}, 
         CuboidBox[{0.15, 0.8, 0.}, {0.2, 0.85, 461.}]}, {{}, 
         CuboidBox[{0.15, 0.85, 0.}, {0.2, 0.9, 436.}]}, {{}, 
         CuboidBox[{0.15, 0.9, 0.}, {0.2, 0.95, 417.}]}, {{}, 
         CuboidBox[{0.15, 0.95, 0.}, {0.2, 1., 314.}]}, {{}, 
         CuboidBox[{0.2, -1., 0.}, {0.25, -0.95, 223.}]}, {{}, 
         CuboidBox[{0.2, -0.95, 0.}, {0.25, -0.9, 393.}]}, {{}, 
         CuboidBox[{0.2, -0.9, 0.}, {0.25, -0.85, 426.}]}, {{}, 
         CuboidBox[{0.2, -0.85, 0.}, {0.25, -0.8, 474.}]}, {{}, 
         CuboidBox[{0.2, -0.8, 0.}, {0.25, -0.75, 470.}]}, {{}, 
         CuboidBox[{0.2, -0.75, 0.}, {0.25, -0.7, 532.}]}, {{}, 
         CuboidBox[{0.2, -0.7, 0.}, {0.25, -0.65, 578.}]}, {{}, 
         CuboidBox[{0.2, -0.65, 0.}, {0.25, -0.6, 581.}]}, {{}, 
         CuboidBox[{0.2, -0.6, 0.}, {0.25, -0.55, 672.}]}, {{}, 
         CuboidBox[{0.2, -0.55, 0.}, {0.25, -0.5, 733.}]}, {{}, 
         CuboidBox[{0.2, -0.5, 0.}, {0.25, -0.45, 772.}]}, {{}, 
         CuboidBox[{0.2, -0.45, 0.}, {0.25, -0.4, 851.}]}, {{}, 
         CuboidBox[{0.2, -0.4, 0.}, {0.25, -0.35, 901.}]}, {{}, 
         CuboidBox[{0.2, -0.35, 0.}, {0.25, -0.3, 950.}]}, {{}, 
         CuboidBox[{0.2, -0.3, 0.}, {0.25, -0.25, 1112.}]}, {{}, 
         CuboidBox[{0.2, -0.25, 0.}, {0.25, -0.2, 1206.}]}, {{}, 
         CuboidBox[{0.2, -0.2, 0.}, {0.25, -0.15, 1463.}]}, {{}, 
         CuboidBox[{0.2, -0.15, 0.}, {0.25, -0.1, 1614.}]}, {{}, 
         CuboidBox[{0.2, -0.1, 0.}, {0.25, -0.05, 1652.}]}, {{}, 
         CuboidBox[{0.2, -0.05, 0.}, {0.25, 0., 1787.}]}, {{}, 
         CuboidBox[{0.2, 0., 0.}, {0.25, 0.05, 1830.}]}, {{}, 
         CuboidBox[{0.2, 0.05, 0.}, {0.25, 0.1, 1647.}]}, {{}, 
         CuboidBox[{0.2, 0.1, 0.}, {0.25, 0.15, 1557.}]}, {{}, 
         CuboidBox[{0.2, 0.15, 0.}, {0.25, 0.2, 1432.}]}, {{}, 
         CuboidBox[{0.2, 0.2, 0.}, {0.25, 0.25, 1266.}]}, {{}, 
         CuboidBox[{0.2, 0.25, 0.}, {0.25, 0.3, 1127.}]}, {{}, 
         CuboidBox[{0.2, 0.3, 0.}, {0.25, 0.35, 1008.}]}, {{}, 
         CuboidBox[{0.2, 0.35, 0.}, {0.25, 0.4, 930.}]}, {{}, 
         CuboidBox[{0.2, 0.4, 0.}, {0.25, 0.45, 832.}]}, {{}, 
         CuboidBox[{0.2, 0.45, 0.}, {0.25, 0.5, 753.}]}, {{}, 
         CuboidBox[{0.2, 0.5, 0.}, {0.25, 0.55, 627.}]}, {{}, 
         CuboidBox[{0.2, 0.55, 0.}, {0.25, 0.6, 669.}]}, {{}, 
         CuboidBox[{0.2, 0.6, 0.}, {0.25, 0.65, 579.}]}, {{}, 
         CuboidBox[{0.2, 0.65, 0.}, {0.25, 0.7, 583.}]}, {{}, 
         CuboidBox[{0.2, 0.7, 0.}, {0.25, 0.75, 512.}]}, {{}, 
         CuboidBox[{0.2, 0.75, 0.}, {0.25, 0.8, 500.}]}, {{}, 
         CuboidBox[{0.2, 0.8, 0.}, {0.25, 0.85, 464.}]}, {{}, 
         CuboidBox[{0.2, 0.85, 0.}, {0.25, 0.9, 478.}]}, {{}, 
         CuboidBox[{0.2, 0.9, 0.}, {0.25, 0.95, 434.}]}, {{}, 
         CuboidBox[{0.2, 0.95, 0.}, {0.25, 1., 215.}]}, {{}, 
         CuboidBox[{0.25, -1., 0.}, {0.3, -0.95, 83.}]}, {{}, 
         CuboidBox[{0.25, -0.95, 0.}, {0.3, -0.9, 390.}]}, {{}, 
         CuboidBox[{0.25, -0.9, 0.}, {0.3, -0.85, 425.}]}, {{}, 
         CuboidBox[{0.25, -0.85, 0.}, {0.3, -0.8, 436.}]}, {{}, 
         CuboidBox[{0.25, -0.8, 0.}, {0.3, -0.75, 490.}]}, {{}, 
         CuboidBox[{0.25, -0.75, 0.}, {0.3, -0.7, 462.}]}, {{}, 
         CuboidBox[{0.25, -0.7, 0.}, {0.3, -0.65, 576.}]}, {{}, 
         CuboidBox[{0.25, -0.65, 0.}, {0.3, -0.6, 581.}]}, {{}, 
         CuboidBox[{0.25, -0.6, 0.}, {0.3, -0.55, 573.}]}, {{}, 
         CuboidBox[{0.25, -0.55, 0.}, {0.3, -0.5, 695.}]}, {{}, 
         CuboidBox[{0.25, -0.5, 0.}, {0.3, -0.45, 723.}]}, {{}, 
         CuboidBox[{0.25, -0.45, 0.}, {0.3, -0.4, 754.}]}, {{}, 
         CuboidBox[{0.25, -0.4, 0.}, {0.3, -0.35, 808.}]}, {{}, 
         CuboidBox[{0.25, -0.35, 0.}, {0.3, -0.3, 930.}]}, {{}, 
         CuboidBox[{0.25, -0.3, 0.}, {0.3, -0.25, 1002.}]}, {{}, 
         CuboidBox[{0.25, -0.25, 0.}, {0.3, -0.2, 1096.}]}, {{}, 
         CuboidBox[{0.25, -0.2, 0.}, {0.3, -0.15, 1259.}]}, {{}, 
         CuboidBox[{0.25, -0.15, 0.}, {0.3, -0.1, 1329.}]}, {{}, 
         CuboidBox[{0.25, -0.1, 0.}, {0.3, -0.05, 1409.}]}, {{}, 
         CuboidBox[{0.25, -0.05, 0.}, {0.3, 0., 1446.}]}, {{}, 
         CuboidBox[{0.25, 0., 0.}, {0.3, 0.05, 1382.}]}, {{}, 
         CuboidBox[{0.25, 0.05, 0.}, {0.3, 0.1, 1492.}]}, {{}, 
         CuboidBox[{0.25, 0.1, 0.}, {0.3, 0.15, 1347.}]}, {{}, 
         CuboidBox[{0.25, 0.15, 0.}, {0.3, 0.2, 1220.}]}, {{}, 
         CuboidBox[{0.25, 0.2, 0.}, {0.3, 0.25, 1096.}]}, {{}, 
         CuboidBox[{0.25, 0.25, 0.}, {0.3, 0.3, 1014.}]}, {{}, 
         CuboidBox[{0.25, 0.3, 0.}, {0.3, 0.35, 925.}]}, {{}, 
         CuboidBox[{0.25, 0.35, 0.}, {0.3, 0.4, 854.}]}, {{}, 
         CuboidBox[{0.25, 0.4, 0.}, {0.3, 0.45, 766.}]}, {{}, 
         CuboidBox[{0.25, 0.45, 0.}, {0.3, 0.5, 747.}]}, {{}, 
         CuboidBox[{0.25, 0.5, 0.}, {0.3, 0.55, 659.}]}, {{}, 
         CuboidBox[{0.25, 0.55, 0.}, {0.3, 0.6, 606.}]}, {{}, 
         CuboidBox[{0.25, 0.6, 0.}, {0.3, 0.65, 630.}]}, {{}, 
         CuboidBox[{0.25, 0.65, 0.}, {0.3, 0.7, 550.}]}, {{}, 
         CuboidBox[{0.25, 0.7, 0.}, {0.3, 0.75, 533.}]}, {{}, 
         CuboidBox[{0.25, 0.75, 0.}, {0.3, 0.8, 497.}]}, {{}, 
         CuboidBox[{0.25, 0.8, 0.}, {0.3, 0.85, 474.}]}, {{}, 
         CuboidBox[{0.25, 0.85, 0.}, {0.3, 0.9, 450.}]}, {{}, 
         CuboidBox[{0.25, 0.9, 0.}, {0.3, 0.95, 407.}]}, {{}, 
         CuboidBox[{0.25, 0.95, 0.}, {0.3, 1., 94.}]}, {{}, 
         CuboidBox[{0.3, -1., 0.}, {0.35, -0.95, 7.}]}, {{}, 
         CuboidBox[{0.3, -0.95, 0.}, {0.35, -0.9, 368.}]}, {{}, 
         CuboidBox[{0.3, -0.9, 0.}, {0.35, -0.85, 436.}]}, {{}, 
         CuboidBox[{0.3, -0.85, 0.}, {0.35, -0.8, 457.}]}, {{}, 
         CuboidBox[{0.3, -0.8, 0.}, {0.35, -0.75, 439.}]}, {{}, 
         CuboidBox[{0.3, -0.75, 0.}, {0.35, -0.7, 477.}]}, {{}, 
         CuboidBox[{0.3, -0.7, 0.}, {0.35, -0.65, 505.}]}, {{}, 
         CuboidBox[{0.3, -0.65, 0.}, {0.35, -0.6, 595.}]}, {{}, 
         CuboidBox[{0.3, -0.6, 0.}, {0.35, -0.55, 627.}]}, {{}, 
         CuboidBox[{0.3, -0.55, 0.}, {0.35, -0.5, 631.}]}, {{}, 
         CuboidBox[{0.3, -0.5, 0.}, {0.35, -0.45, 675.}]}, {{}, 
         CuboidBox[{0.3, -0.45, 0.}, {0.35, -0.4, 794.}]}, {{}, 
         CuboidBox[{0.3, -0.4, 0.}, {0.35, -0.35, 857.}]}, {{}, 
         CuboidBox[{0.3, -0.35, 0.}, {0.35, -0.3, 832.}]}, {{}, 
         CuboidBox[{0.3, -0.3, 0.}, {0.35, -0.25, 959.}]}, {{}, 
         CuboidBox[{0.3, -0.25, 0.}, {0.35, -0.2, 988.}]}, {{}, 
         CuboidBox[{0.3, -0.2, 0.}, {0.35, -0.15, 1041.}]}, {{}, 
         CuboidBox[{0.3, -0.15, 0.}, {0.35, -0.1, 1150.}]}, {{}, 
         CuboidBox[{0.3, -0.1, 0.}, {0.35, -0.05, 1173.}]}, {{}, 
         CuboidBox[{0.3, -0.05, 0.}, {0.35, 0., 1219.}]}, {{}, 
         CuboidBox[{0.3, 0., 0.}, {0.35, 0.05, 1179.}]}, {{}, 
         CuboidBox[{0.3, 0.05, 0.}, {0.35, 0.1, 1217.}]}, {{}, 
         CuboidBox[{0.3, 0.1, 0.}, {0.35, 0.15, 1146.}]}, {{}, 
         CuboidBox[{0.3, 0.15, 0.}, {0.35, 0.2, 1088.}]}, {{}, 
         CuboidBox[{0.3, 0.2, 0.}, {0.35, 0.25, 1011.}]}, {{}, 
         CuboidBox[{0.3, 0.25, 0.}, {0.35, 0.3, 940.}]}, {{}, 
         CuboidBox[{0.3, 0.3, 0.}, {0.35, 0.35, 869.}]}, {{}, 
         CuboidBox[{0.3, 0.35, 0.}, {0.35, 0.4, 813.}]}, {{}, 
         CuboidBox[{0.3, 0.4, 0.}, {0.35, 0.45, 790.}]}, {{}, 
         CuboidBox[{0.3, 0.45, 0.}, {0.35, 0.5, 660.}]}, {{}, 
         CuboidBox[{0.3, 0.5, 0.}, {0.35, 0.55, 668.}]}, {{}, 
         CuboidBox[{0.3, 0.55, 0.}, {0.35, 0.6, 591.}]}, {{}, 
         CuboidBox[{0.3, 0.6, 0.}, {0.35, 0.65, 537.}]}, {{}, 
         CuboidBox[{0.3, 0.65, 0.}, {0.35, 0.7, 528.}]}, {{}, 
         CuboidBox[{0.3, 0.7, 0.}, {0.35, 0.75, 490.}]}, {{}, 
         CuboidBox[{0.3, 0.75, 0.}, {0.35, 0.8, 486.}]}, {{}, 
         CuboidBox[{0.3, 0.8, 0.}, {0.35, 0.85, 444.}]}, {{}, 
         CuboidBox[{0.3, 0.85, 0.}, {0.35, 0.9, 401.}]}, {{}, 
         CuboidBox[{0.3, 0.9, 0.}, {0.35, 0.95, 334.}]}, {{}, 
         CuboidBox[{0.3, 0.95, 0.}, {0.35, 1., 3.}]}, {{}, 
         CuboidBox[{0.35, -0.95, 0.}, {0.4, -0.9, 195.}]}, {{}, 
         CuboidBox[{0.35, -0.9, 0.}, {0.4, -0.85, 441.}]}, {{}, 
         CuboidBox[{0.35, -0.85, 0.}, {0.4, -0.8, 460.}]}, {{}, 
         CuboidBox[{0.35, -0.8, 0.}, {0.4, -0.75, 455.}]}, {{}, 
         CuboidBox[{0.35, -0.75, 0.}, {0.4, -0.7, 492.}]}, {{}, 
         CuboidBox[{0.35, -0.7, 0.}, {0.4, -0.65, 515.}]}, {{}, 
         CuboidBox[{0.35, -0.65, 0.}, {0.4, -0.6, 589.}]}, {{}, 
         CuboidBox[{0.35, -0.6, 0.}, {0.4, -0.55, 593.}]}, {{}, 
         CuboidBox[{0.35, -0.55, 0.}, {0.4, -0.5, 595.}]}, {{}, 
         CuboidBox[{0.35, -0.5, 0.}, {0.4, -0.45, 664.}]}, {{}, 
         CuboidBox[{0.35, -0.45, 0.}, {0.4, -0.4, 719.}]}, {{}, 
         CuboidBox[{0.35, -0.4, 0.}, {0.4, -0.35, 733.}]}, {{}, 
         CuboidBox[{0.35, -0.35, 0.}, {0.4, -0.3, 831.}]}, {{}, 
         CuboidBox[{0.35, -0.3, 0.}, {0.4, -0.25, 775.}]}, {{}, 
         CuboidBox[{0.35, -0.25, 0.}, {0.4, -0.2, 904.}]}, {{}, 
         CuboidBox[{0.35, -0.2, 0.}, {0.4, -0.15, 944.}]}, {{}, 
         CuboidBox[{0.35, -0.15, 0.}, {0.4, -0.1, 1018.}]}, {{}, 
         CuboidBox[{0.35, -0.1, 0.}, {0.4, -0.05, 1014.}]}, {{}, 
         CuboidBox[{0.35, -0.05, 0.}, {0.4, 0., 1088.}]}, {{}, 
         CuboidBox[{0.35, 0., 0.}, {0.4, 0.05, 1062.}]}, {{}, 
         CuboidBox[{0.35, 0.05, 0.}, {0.4, 0.1, 1117.}]}, {{}, 
         CuboidBox[{0.35, 0.1, 0.}, {0.4, 0.15, 971.}]}, {{}, 
         CuboidBox[{0.35, 0.15, 0.}, {0.4, 0.2, 943.}]}, {{}, 
         CuboidBox[{0.35, 0.2, 0.}, {0.4, 0.25, 955.}]}, {{}, 
         CuboidBox[{0.35, 0.25, 0.}, {0.4, 0.3, 851.}]}, {{}, 
         CuboidBox[{0.35, 0.3, 0.}, {0.4, 0.35, 807.}]}, {{}, 
         CuboidBox[{0.35, 0.35, 0.}, {0.4, 0.4, 769.}]}, {{}, 
         CuboidBox[{0.35, 0.4, 0.}, {0.4, 0.45, 683.}]}, {{}, 
         CuboidBox[{0.35, 0.45, 0.}, {0.4, 0.5, 643.}]}, {{}, 
         CuboidBox[{0.35, 0.5, 0.}, {0.4, 0.55, 607.}]}, {{}, 
         CuboidBox[{0.35, 0.55, 0.}, {0.4, 0.6, 563.}]}, {{}, 
         CuboidBox[{0.35, 0.6, 0.}, {0.4, 0.65, 580.}]}, {{}, 
         CuboidBox[{0.35, 0.65, 0.}, {0.4, 0.7, 519.}]}, {{}, 
         CuboidBox[{0.35, 0.7, 0.}, {0.4, 0.75, 483.}]}, {{}, 
         CuboidBox[{0.35, 0.75, 0.}, {0.4, 0.8, 455.}]}, {{}, 
         CuboidBox[{0.35, 0.8, 0.}, {0.4, 0.85, 451.}]}, {{}, 
         CuboidBox[{0.35, 0.85, 0.}, {0.4, 0.9, 439.}]}, {{}, 
         CuboidBox[{0.35, 0.9, 0.}, {0.4, 0.95, 218.}]}, {{}, 
         CuboidBox[{0.4, -0.95, 0.}, {0.45, -0.9, 46.}]}, {{}, 
         CuboidBox[{0.4, -0.9, 0.}, {0.45, -0.85, 432.}]}, {{}, 
         CuboidBox[{0.4, -0.85, 0.}, {0.45, -0.8, 420.}]}, {{}, 
         CuboidBox[{0.4, -0.8, 0.}, {0.45, -0.75, 440.}]}, {{}, 
         CuboidBox[{0.4, -0.75, 0.}, {0.45, -0.7, 484.}]}, {{}, 
         CuboidBox[{0.4, -0.7, 0.}, {0.45, -0.65, 520.}]}, {{}, 
         CuboidBox[{0.4, -0.65, 0.}, {0.45, -0.6, 550.}]}, {{}, 
         CuboidBox[{0.4, -0.6, 0.}, {0.45, -0.55, 521.}]}, {{}, 
         CuboidBox[{0.4, -0.55, 0.}, {0.45, -0.5, 572.}]}, {{}, 
         CuboidBox[{0.4, -0.5, 0.}, {0.45, -0.45, 608.}]}, {{}, 
         CuboidBox[{0.4, -0.45, 0.}, {0.45, -0.4, 651.}]}, {{}, 
         CuboidBox[{0.4, -0.4, 0.}, {0.45, -0.35, 724.}]}, {{}, 
         CuboidBox[{0.4, -0.35, 0.}, {0.45, -0.3, 776.}]}, {{}, 
         CuboidBox[{0.4, -0.3, 0.}, {0.45, -0.25, 840.}]}, {{}, 
         CuboidBox[{0.4, -0.25, 0.}, {0.45, -0.2, 895.}]}, {{}, 
         CuboidBox[{0.4, -0.2, 0.}, {0.45, -0.15, 888.}]}, {{}, 
         CuboidBox[{0.4, -0.15, 0.}, {0.45, -0.1, 892.}]}, {{}, 
         CuboidBox[{0.4, -0.1, 0.}, {0.45, -0.05, 925.}]}, {{}, 
         CuboidBox[{0.4, -0.05, 0.}, {0.45, 0., 958.}]}, {{}, 
         CuboidBox[{0.4, 0., 0.}, {0.45, 0.05, 886.}]}, {{}, 
         CuboidBox[{0.4, 0.05, 0.}, {0.45, 0.1, 913.}]}, {{}, 
         CuboidBox[{0.4, 0.1, 0.}, {0.45, 0.15, 883.}]}, {{}, 
         CuboidBox[{0.4, 0.15, 0.}, {0.45, 0.2, 883.}]}, {{}, 
         CuboidBox[{0.4, 0.2, 0.}, {0.45, 0.25, 825.}]}, {{}, 
         CuboidBox[{0.4, 0.25, 0.}, {0.45, 0.3, 793.}]}, {{}, 
         CuboidBox[{0.4, 0.3, 0.}, {0.45, 0.35, 759.}]}, {{}, 
         CuboidBox[{0.4, 0.35, 0.}, {0.45, 0.4, 701.}]}, {{}, 
         CuboidBox[{0.4, 0.4, 0.}, {0.45, 0.45, 666.}]}, {{}, 
         CuboidBox[{0.4, 0.45, 0.}, {0.45, 0.5, 595.}]}, {{}, 
         CuboidBox[{0.4, 0.5, 0.}, {0.45, 0.55, 596.}]}, {{}, 
         CuboidBox[{0.4, 0.55, 0.}, {0.45, 0.6, 540.}]}, {{}, 
         CuboidBox[{0.4, 0.6, 0.}, {0.45, 0.65, 487.}]}, {{}, 
         CuboidBox[{0.4, 0.65, 0.}, {0.45, 0.7, 504.}]}, {{}, 
         CuboidBox[{0.4, 0.7, 0.}, {0.45, 0.75, 465.}]}, {{}, 
         CuboidBox[{0.4, 0.75, 0.}, {0.45, 0.8, 482.}]}, {{}, 
         CuboidBox[{0.4, 0.8, 0.}, {0.45, 0.85, 417.}]}, {{}, 
         CuboidBox[{0.4, 0.85, 0.}, {0.45, 0.9, 391.}]}, {{}, 
         CuboidBox[{0.4, 0.9, 0.}, {0.45, 0.95, 47.}]}, {{}, 
         CuboidBox[{0.45, -0.9, 0.}, {0.5, -0.85, 265.}]}, {{}, 
         CuboidBox[{0.45, -0.85, 0.}, {0.5, -0.8, 409.}]}, {{}, 
         CuboidBox[{0.45, -0.8, 0.}, {0.5, -0.75, 437.}]}, {{}, 
         CuboidBox[{0.45, -0.75, 0.}, {0.5, -0.7, 452.}]}, {{}, 
         CuboidBox[{0.45, -0.7, 0.}, {0.5, -0.65, 456.}]}, {{}, 
         CuboidBox[{0.45, -0.65, 0.}, {0.5, -0.6, 496.}]}, {{}, 
         CuboidBox[{0.45, -0.6, 0.}, {0.5, -0.55, 566.}]}, {{}, 
         CuboidBox[{0.45, -0.55, 0.}, {0.5, -0.5, 550.}]}, {{}, 
         CuboidBox[{0.45, -0.5, 0.}, {0.5, -0.45, 673.}]}, {{}, 
         CuboidBox[{0.45, -0.45, 0.}, {0.5, -0.4, 645.}]}, {{}, 
         CuboidBox[{0.45, -0.4, 0.}, {0.5, -0.35, 699.}]}, {{}, 
         CuboidBox[{0.45, -0.35, 0.}, {0.5, -0.3, 663.}]}, {{}, 
         CuboidBox[{0.45, -0.3, 0.}, {0.5, -0.25, 701.}]}, {{}, 
         CuboidBox[{0.45, -0.25, 0.}, {0.5, -0.2, 746.}]}, {{}, 
         CuboidBox[{0.45, -0.2, 0.}, {0.5, -0.15, 730.}]}, {{}, 
         CuboidBox[{0.45, -0.15, 0.}, {0.5, -0.1, 805.}]}, {{}, 
         CuboidBox[{0.45, -0.1, 0.}, {0.5, -0.05, 803.}]}, {{}, 
         CuboidBox[{0.45, -0.05, 0.}, {0.5, 0., 843.}]}, {{}, 
         CuboidBox[{0.45, 0., 0.}, {0.5, 0.05, 829.}]}, {{}, 
         CuboidBox[{0.45, 0.05, 0.}, {0.5, 0.1, 836.}]}, {{}, 
         CuboidBox[{0.45, 0.1, 0.}, {0.5, 0.15, 821.}]}, {{}, 
         CuboidBox[{0.45, 0.15, 0.}, {0.5, 0.2, 803.}]}, {{}, 
         CuboidBox[{0.45, 0.2, 0.}, {0.5, 0.25, 763.}]}, {{}, 
         CuboidBox[{0.45, 0.25, 0.}, {0.5, 0.3, 704.}]}, {{}, 
         CuboidBox[{0.45, 0.3, 0.}, {0.5, 0.35, 685.}]}, {{}, 
         CuboidBox[{0.45, 0.35, 0.}, {0.5, 0.4, 646.}]}, {{}, 
         CuboidBox[{0.45, 0.4, 0.}, {0.5, 0.45, 614.}]}, {{}, 
         CuboidBox[{0.45, 0.45, 0.}, {0.5, 0.5, 565.}]}, {{}, 
         CuboidBox[{0.45, 0.5, 0.}, {0.5, 0.55, 507.}]}, {{}, 
         CuboidBox[{0.45, 0.55, 0.}, {0.5, 0.6, 514.}]}, {{}, 
         CuboidBox[{0.45, 0.6, 0.}, {0.5, 0.65, 518.}]}, {{}, 
         CuboidBox[{0.45, 0.65, 0.}, {0.5, 0.7, 490.}]}, {{}, 
         CuboidBox[{0.45, 0.7, 0.}, {0.5, 0.75, 464.}]}, {{}, 
         CuboidBox[{0.45, 0.75, 0.}, {0.5, 0.8, 442.}]}, {{}, 
         CuboidBox[{0.45, 0.8, 0.}, {0.5, 0.85, 411.}]}, {{}, 
         CuboidBox[{0.45, 0.85, 0.}, {0.5, 0.9, 251.}]}, {{}, 
         CuboidBox[{0.5, -0.9, 0.}, {0.55, -0.85, 31.}]}, {{}, 
         CuboidBox[{0.5, -0.85, 0.}, {0.55, -0.8, 356.}]}, {{}, 
         CuboidBox[{0.5, -0.8, 0.}, {0.55, -0.75, 401.}]}, {{}, 
         CuboidBox[{0.5, -0.75, 0.}, {0.55, -0.7, 434.}]}, {{}, 
         CuboidBox[{0.5, -0.7, 0.}, {0.55, -0.65, 484.}]}, {{}, 
         CuboidBox[{0.5, -0.65, 0.}, {0.55, -0.6, 491.}]}, {{}, 
         CuboidBox[{0.5, -0.6, 0.}, {0.55, -0.55, 493.}]}, {{}, 
         CuboidBox[{0.5, -0.55, 0.}, {0.55, -0.5, 558.}]}, {{}, 
         CuboidBox[{0.5, -0.5, 0.}, {0.55, -0.45, 547.}]}, {{}, 
         CuboidBox[{0.5, -0.45, 0.}, {0.55, -0.4, 595.}]}, {{}, 
         CuboidBox[{0.5, -0.4, 0.}, {0.55, -0.35, 590.}]}, {{}, 
         CuboidBox[{0.5, -0.35, 0.}, {0.55, -0.3, 642.}]}, {{}, 
         CuboidBox[{0.5, -0.3, 0.}, {0.55, -0.25, 695.}]}, {{}, 
         CuboidBox[{0.5, -0.25, 0.}, {0.55, -0.2, 664.}]}, {{}, 
         CuboidBox[{0.5, -0.2, 0.}, {0.55, -0.15, 733.}]}, {{}, 
         CuboidBox[{0.5, -0.15, 0.}, {0.55, -0.1, 755.}]}, {{}, 
         CuboidBox[{0.5, -0.1, 0.}, {0.55, -0.05, 764.}]}, {{}, 
         CuboidBox[{0.5, -0.05, 0.}, {0.55, 0., 717.}]}, {{}, 
         CuboidBox[{0.5, 0., 0.}, {0.55, 0.05, 756.}]}, {{}, 
         CuboidBox[{0.5, 0.05, 0.}, {0.55, 0.1, 734.}]}, {{}, 
         CuboidBox[{0.5, 0.1, 0.}, {0.55, 0.15, 724.}]}, {{}, 
         CuboidBox[{0.5, 0.15, 0.}, {0.55, 0.2, 689.}]}, {{}, 
         CuboidBox[{0.5, 0.2, 0.}, {0.55, 0.25, 711.}]}, {{}, 
         CuboidBox[{0.5, 0.25, 0.}, {0.55, 0.3, 707.}]}, {{}, 
         CuboidBox[{0.5, 0.3, 0.}, {0.55, 0.35, 674.}]}, {{}, 
         CuboidBox[{0.5, 0.35, 0.}, {0.55, 0.4, 609.}]}, {{}, 
         CuboidBox[{0.5, 0.4, 0.}, {0.55, 0.45, 621.}]}, {{}, 
         CuboidBox[{0.5, 0.45, 0.}, {0.55, 0.5, 539.}]}, {{}, 
         CuboidBox[{0.5, 0.5, 0.}, {0.55, 0.55, 584.}]}, {{}, 
         CuboidBox[{0.5, 0.55, 0.}, {0.55, 0.6, 522.}]}, {{}, 
         CuboidBox[{0.5, 0.6, 0.}, {0.55, 0.65, 500.}]}, {{}, 
         CuboidBox[{0.5, 0.65, 0.}, {0.55, 0.7, 495.}]}, {{}, 
         CuboidBox[{0.5, 0.7, 0.}, {0.55, 0.75, 446.}]}, {{}, 
         CuboidBox[{0.5, 0.75, 0.}, {0.55, 0.8, 436.}]}, {{}, 
         CuboidBox[{0.5, 0.8, 0.}, {0.55, 0.85, 388.}]}, {{}, 
         CuboidBox[{0.5, 0.85, 0.}, {0.55, 0.9, 32.}]}, {{}, 
         CuboidBox[{0.55, -0.85, 0.}, {0.6, -0.8, 148.}]}, {{}, 
         CuboidBox[{0.55, -0.8, 0.}, {0.6, -0.75, 384.}]}, {{}, 
         CuboidBox[{0.55, -0.75, 0.}, {0.6, -0.7, 432.}]}, {{}, 
         CuboidBox[{0.55, -0.7, 0.}, {0.6, -0.65, 441.}]}, {{}, 
         CuboidBox[{0.55, -0.65, 0.}, {0.6, -0.6, 478.}]}, {{}, 
         CuboidBox[{0.55, -0.6, 0.}, {0.6, -0.55, 513.}]}, {{}, 
         CuboidBox[{0.55, -0.55, 0.}, {0.6, -0.5, 475.}]}, {{}, 
         CuboidBox[{0.55, -0.5, 0.}, {0.6, -0.45, 549.}]}, {{}, 
         CuboidBox[{0.55, -0.45, 0.}, {0.6, -0.4, 534.}]}, {{}, 
         CuboidBox[{0.55, -0.4, 0.}, {0.6, -0.35, 596.}]}, {{}, 
         CuboidBox[{0.55, -0.35, 0.}, {0.6, -0.3, 622.}]}, {{}, 
         CuboidBox[{0.55, -0.3, 0.}, {0.6, -0.25, 597.}]}, {{}, 
         CuboidBox[{0.55, -0.25, 0.}, {0.6, -0.2, 626.}]}, {{}, 
         CuboidBox[{0.55, -0.2, 0.}, {0.6, -0.15, 643.}]}, {{}, 
         CuboidBox[{0.55, -0.15, 0.}, {0.6, -0.1, 621.}]}, {{}, 
         CuboidBox[{0.55, -0.1, 0.}, {0.6, -0.05, 706.}]}, {{}, 
         CuboidBox[{0.55, -0.05, 0.}, {0.6, 0., 690.}]}, {{}, 
         CuboidBox[{0.55, 0., 0.}, {0.6, 0.05, 693.}]}, {{}, 
         CuboidBox[{0.55, 0.05, 0.}, {0.6, 0.1, 700.}]}, {{}, 
         CuboidBox[{0.55, 0.1, 0.}, {0.6, 0.15, 695.}]}, {{}, 
         CuboidBox[{0.55, 0.15, 0.}, {0.6, 0.2, 642.}]}, {{}, 
         CuboidBox[{0.55, 0.2, 0.}, {0.6, 0.25, 661.}]}, {{}, 
         CuboidBox[{0.55, 0.25, 0.}, {0.6, 0.3, 647.}]}, {{}, 
         CuboidBox[{0.55, 0.3, 0.}, {0.6, 0.35, 659.}]}, {{}, 
         CuboidBox[{0.55, 0.35, 0.}, {0.6, 0.4, 596.}]}, {{}, 
         CuboidBox[{0.55, 0.4, 0.}, {0.6, 0.45, 573.}]}, {{}, 
         CuboidBox[{0.55, 0.45, 0.}, {0.6, 0.5, 507.}]}, {{}, 
         CuboidBox[{0.55, 0.5, 0.}, {0.6, 0.55, 467.}]}, {{}, 
         CuboidBox[{0.55, 0.55, 0.}, {0.6, 0.6, 493.}]}, {{}, 
         CuboidBox[{0.55, 0.6, 0.}, {0.6, 0.65, 478.}]}, {{}, 
         CuboidBox[{0.55, 0.65, 0.}, {0.6, 0.7, 436.}]}, {{}, 
         CuboidBox[{0.55, 0.7, 0.}, {0.6, 0.75, 447.}]}, {{}, 
         CuboidBox[{0.55, 0.75, 0.}, {0.6, 0.8, 434.}]}, {{}, 
         CuboidBox[{0.55, 0.8, 0.}, {0.6, 0.85, 127.}]}, {{}, 
         CuboidBox[{0.6, -0.8, 0.}, {0.65, -0.75, 260.}]}, {{}, 
         CuboidBox[{0.6, -0.75, 0.}, {0.65, -0.7, 440.}]}, {{}, 
         CuboidBox[{0.6, -0.7, 0.}, {0.65, -0.65, 404.}]}, {{}, 
         CuboidBox[{0.6, -0.65, 0.}, {0.65, -0.6, 445.}]}, {{}, 
         CuboidBox[{0.6, -0.6, 0.}, {0.65, -0.55, 488.}]}, {{}, 
         CuboidBox[{0.6, -0.55, 0.}, {0.65, -0.5, 474.}]}, {{}, 
         CuboidBox[{0.6, -0.5, 0.}, {0.65, -0.45, 508.}]}, {{}, 
         CuboidBox[{0.6, -0.45, 0.}, {0.65, -0.4, 498.}]}, {{}, 
         CuboidBox[{0.6, -0.4, 0.}, {0.65, -0.35, 567.}]}, {{}, 
         CuboidBox[{0.6, -0.35, 0.}, {0.65, -0.3, 554.}]}, {{}, 
         CuboidBox[{0.6, -0.3, 0.}, {0.65, -0.25, 594.}]}, {{}, 
         CuboidBox[{0.6, -0.25, 0.}, {0.65, -0.2, 571.}]}, {{}, 
         CuboidBox[{0.6, -0.2, 0.}, {0.65, -0.15, 665.}]}, {{}, 
         CuboidBox[{0.6, -0.15, 0.}, {0.65, -0.1, 620.}]}, {{}, 
         CuboidBox[{0.6, -0.1, 0.}, {0.65, -0.05, 592.}]}, {{}, 
         CuboidBox[{0.6, -0.05, 0.}, {0.65, 0., 622.}]}, {{}, 
         CuboidBox[{0.6, 0., 0.}, {0.65, 0.05, 653.}]}, {{}, 
         CuboidBox[{0.6, 0.05, 0.}, {0.65, 0.1, 666.}]}, {{}, 
         CuboidBox[{0.6, 0.1, 0.}, {0.65, 0.15, 595.}]}, {{}, 
         CuboidBox[{0.6, 0.15, 0.}, {0.65, 0.2, 619.}]}, {{}, 
         CuboidBox[{0.6, 0.2, 0.}, {0.65, 0.25, 633.}]}, {{}, 
         CuboidBox[{0.6, 0.25, 0.}, {0.65, 0.3, 620.}]}, {{}, 
         CuboidBox[{0.6, 0.3, 0.}, {0.65, 0.35, 571.}]}, {{}, 
         CuboidBox[{0.6, 0.35, 0.}, {0.65, 0.4, 562.}]}, {{}, 
         CuboidBox[{0.6, 0.4, 0.}, {0.65, 0.45, 511.}]}, {{}, 
         CuboidBox[{0.6, 0.45, 0.}, {0.65, 0.5, 481.}]}, {{}, 
         CuboidBox[{0.6, 0.5, 0.}, {0.65, 0.55, 526.}]}, {{}, 
         CuboidBox[{0.6, 0.55, 0.}, {0.65, 0.6, 469.}]}, {{}, 
         CuboidBox[{0.6, 0.6, 0.}, {0.65, 0.65, 454.}]}, {{}, 
         CuboidBox[{0.6, 0.65, 0.}, {0.65, 0.7, 431.}]}, {{}, 
         CuboidBox[{0.6, 0.7, 0.}, {0.65, 0.75, 414.}]}, {{}, 
         CuboidBox[{0.6, 0.75, 0.}, {0.65, 0.8, 223.}]}, {{}, 
         CuboidBox[{0.65, -0.8, 0.}, {0.7, -0.75, 9.}]}, {{}, 
         CuboidBox[{0.65, -0.75, 0.}, {0.7, -0.7, 299.}]}, {{}, 
         CuboidBox[{0.65, -0.7, 0.}, {0.7, -0.65, 416.}]}, {{}, 
         CuboidBox[{0.65, -0.65, 0.}, {0.7, -0.6, 429.}]}, {{}, 
         CuboidBox[{0.65, -0.6, 0.}, {0.7, -0.55, 418.}]}, {{}, 
         CuboidBox[{0.65, -0.55, 0.}, {0.7, -0.5, 451.}]}, {{}, 
         CuboidBox[{0.65, -0.5, 0.}, {0.7, -0.45, 481.}]}, {{}, 
         CuboidBox[{0.65, -0.45, 0.}, {0.7, -0.4, 499.}]}, {{}, 
         CuboidBox[{0.65, -0.4, 0.}, {0.7, -0.35, 509.}]}, {{}, 
         CuboidBox[{0.65, -0.35, 0.}, {0.7, -0.3, 558.}]}, {{}, 
         CuboidBox[{0.65, -0.3, 0.}, {0.7, -0.25, 577.}]}, {{}, 
         CuboidBox[{0.65, -0.25, 0.}, {0.7, -0.2, 563.}]}, {{}, 
         CuboidBox[{0.65, -0.2, 0.}, {0.7, -0.15, 567.}]}, {{}, 
         CuboidBox[{0.65, -0.15, 0.}, {0.7, -0.1, 601.}]}, {{}, 
         CuboidBox[{0.65, -0.1, 0.}, {0.7, -0.05, 612.}]}, {{}, 
         CuboidBox[{0.65, -0.05, 0.}, {0.7, 0., 627.}]}, {{}, 
         CuboidBox[{0.65, 0., 0.}, {0.7, 0.05, 543.}]}, {{}, 
         CuboidBox[{0.65, 0.05, 0.}, {0.7, 0.1, 609.}]}, {{}, 
         CuboidBox[{0.65, 0.1, 0.}, {0.7, 0.15, 596.}]}, {{}, 
         CuboidBox[{0.65, 0.15, 0.}, {0.7, 0.2, 571.}]}, {{}, 
         CuboidBox[{0.65, 0.2, 0.}, {0.7, 0.25, 550.}]}, {{}, 
         CuboidBox[{0.65, 0.25, 0.}, {0.7, 0.3, 538.}]}, {{}, 
         CuboidBox[{0.65, 0.3, 0.}, {0.7, 0.35, 521.}]}, {{}, 
         CuboidBox[{0.65, 0.35, 0.}, {0.7, 0.4, 531.}]}, {{}, 
         CuboidBox[{0.65, 0.4, 0.}, {0.7, 0.45, 531.}]}, {{}, 
         CuboidBox[{0.65, 0.45, 0.}, {0.7, 0.5, 511.}]}, {{}, 
         CuboidBox[{0.65, 0.5, 0.}, {0.7, 0.55, 505.}]}, {{}, 
         CuboidBox[{0.65, 0.55, 0.}, {0.7, 0.6, 401.}]}, {{}, 
         CuboidBox[{0.65, 0.6, 0.}, {0.7, 0.65, 462.}]}, {{}, 
         CuboidBox[{0.65, 0.65, 0.}, {0.7, 0.7, 425.}]}, {{}, 
         CuboidBox[{0.65, 0.7, 0.}, {0.7, 0.75, 309.}]}, {{}, 
         CuboidBox[{0.65, 0.75, 0.}, {0.7, 0.8, 6.}]}, {{}, 
         CuboidBox[{0.7, -0.75, 0.}, {0.75, -0.7, 19.}]}, {{}, 
         CuboidBox[{0.7, -0.7, 0.}, {0.75, -0.65, 297.}]}, {{}, 
         CuboidBox[{0.7, -0.65, 0.}, {0.75, -0.6, 384.}]}, {{}, 
         CuboidBox[{0.7, -0.6, 0.}, {0.75, -0.55, 427.}]}, {{}, 
         CuboidBox[{0.7, -0.55, 0.}, {0.75, -0.5, 452.}]}, {{}, 
         CuboidBox[{0.7, -0.5, 0.}, {0.75, -0.45, 443.}]}, {{}, 
         CuboidBox[{0.7, -0.45, 0.}, {0.75, -0.4, 460.}]}, {{}, 
         CuboidBox[{0.7, -0.4, 0.}, {0.75, -0.35, 491.}]}, {{}, 
         CuboidBox[{0.7, -0.35, 0.}, {0.75, -0.3, 472.}]}, {{}, 
         CuboidBox[{0.7, -0.3, 0.}, {0.75, -0.25, 504.}]}, {{}, 
         CuboidBox[{0.7, -0.25, 0.}, {0.75, -0.2, 496.}]}, {{}, 
         CuboidBox[{0.7, -0.2, 0.}, {0.75, -0.15, 480.}]}, {{}, 
         CuboidBox[{0.7, -0.15, 0.}, {0.75, -0.1, 534.}]}, {{}, 
         CuboidBox[{0.7, -0.1, 0.}, {0.75, -0.05, 534.}]}, {{}, 
         CuboidBox[{0.7, -0.05, 0.}, {0.75, 0., 493.}]}, {{}, 
         CuboidBox[{0.7, 0., 0.}, {0.75, 0.05, 585.}]}, {{}, 
         CuboidBox[{0.7, 0.05, 0.}, {0.75, 0.1, 521.}]}, {{}, 
         CuboidBox[{0.7, 0.1, 0.}, {0.75, 0.15, 507.}]}, {{}, 
         CuboidBox[{0.7, 0.15, 0.}, {0.75, 0.2, 522.}]}, {{}, 
         CuboidBox[{0.7, 0.2, 0.}, {0.75, 0.25, 531.}]}, {{}, 
         CuboidBox[{0.7, 0.25, 0.}, {0.75, 0.3, 489.}]}, {{}, 
         CuboidBox[{0.7, 0.3, 0.}, {0.75, 0.35, 479.}]}, {{}, 
         CuboidBox[{0.7, 0.35, 0.}, {0.75, 0.4, 464.}]}, {{}, 
         CuboidBox[{0.7, 0.4, 0.}, {0.75, 0.45, 443.}]}, {{}, 
         CuboidBox[{0.7, 0.45, 0.}, {0.75, 0.5, 443.}]}, {{}, 
         CuboidBox[{0.7, 0.5, 0.}, {0.75, 0.55, 449.}]}, {{}, 
         CuboidBox[{0.7, 0.55, 0.}, {0.75, 0.6, 427.}]}, {{}, 
         CuboidBox[{0.7, 0.6, 0.}, {0.75, 0.65, 418.}]}, {{}, 
         CuboidBox[{0.7, 0.65, 0.}, {0.75, 0.7, 260.}]}, {{}, 
         CuboidBox[{0.7, 0.7, 0.}, {0.75, 0.75, 18.}]}, {{}, 
         CuboidBox[{0.75, -0.7, 0.}, {0.8, -0.65, 7.}]}, {{}, 
         CuboidBox[{0.75, -0.65, 0.}, {0.8, -0.6, 225.}]}, {{}, 
         CuboidBox[{0.75, -0.6, 0.}, {0.8, -0.55, 384.}]}, {{}, 
         CuboidBox[{0.75, -0.55, 0.}, {0.8, -0.5, 384.}]}, {{}, 
         CuboidBox[{0.75, -0.5, 0.}, {0.8, -0.45, 393.}]}, {{}, 
         CuboidBox[{0.75, -0.45, 0.}, {0.8, -0.4, 421.}]}, {{}, 
         CuboidBox[{0.75, -0.4, 0.}, {0.8, -0.35, 449.}]}, {{}, 
         CuboidBox[{0.75, -0.35, 0.}, {0.8, -0.3, 468.}]}, {{}, 
         CuboidBox[{0.75, -0.3, 0.}, {0.8, -0.25, 492.}]}, {{}, 
         CuboidBox[{0.75, -0.25, 0.}, {0.8, -0.2, 496.}]}, {{}, 
         CuboidBox[{0.75, -0.2, 0.}, {0.8, -0.15, 533.}]}, {{}, 
         CuboidBox[{0.75, -0.15, 0.}, {0.8, -0.1, 494.}]}, {{}, 
         CuboidBox[{0.75, -0.1, 0.}, {0.8, -0.05, 507.}]}, {{}, 
         CuboidBox[{0.75, -0.05, 0.}, {0.8, 0., 536.}]}, {{}, 
         CuboidBox[{0.75, 0., 0.}, {0.8, 0.05, 543.}]}, {{}, 
         CuboidBox[{0.75, 0.05, 0.}, {0.8, 0.1, 507.}]}, {{}, 
         CuboidBox[{0.75, 0.1, 0.}, {0.8, 0.15, 517.}]}, {{}, 
         CuboidBox[{0.75, 0.15, 0.}, {0.8, 0.2, 461.}]}, {{}, 
         CuboidBox[{0.75, 0.2, 0.}, {0.8, 0.25, 511.}]}, {{}, 
         CuboidBox[{0.75, 0.25, 0.}, {0.8, 0.3, 459.}]}, {{}, 
         CuboidBox[{0.75, 0.3, 0.}, {0.8, 0.35, 494.}]}, {{}, 
         CuboidBox[{0.75, 0.35, 0.}, {0.8, 0.4, 478.}]}, {{}, 
         CuboidBox[{0.75, 0.4, 0.}, {0.8, 0.45, 480.}]}, {{}, 
         CuboidBox[{0.75, 0.45, 0.}, {0.8, 0.5, 438.}]}, {{}, 
         CuboidBox[{0.75, 0.5, 0.}, {0.8, 0.55, 449.}]}, {{}, 
         CuboidBox[{0.75, 0.55, 0.}, {0.8, 0.6, 442.}]}, {{}, 
         CuboidBox[{0.75, 0.6, 0.}, {0.8, 0.65, 253.}]}, {{}, 
         CuboidBox[{0.75, 0.65, 0.}, {0.8, 0.7, 12.}]}, {{}, 
         CuboidBox[{0.8, -0.6, 0.}, {0.85, -0.55, 157.}]}, {{}, 
         CuboidBox[{0.8, -0.55, 0.}, {0.85, -0.5, 388.}]}, {{}, 
         CuboidBox[{0.8, -0.5, 0.}, {0.85, -0.45, 411.}]}, {{}, 
         CuboidBox[{0.8, -0.45, 0.}, {0.85, -0.4, 425.}]}, {{}, 
         CuboidBox[{0.8, -0.4, 0.}, {0.85, -0.35, 415.}]}, {{}, 
         CuboidBox[{0.8, -0.35, 0.}, {0.85, -0.3, 421.}]}, {{}, 
         CuboidBox[{0.8, -0.3, 0.}, {0.85, -0.25, 460.}]}, {{}, 
         CuboidBox[{0.8, -0.25, 0.}, {0.85, -0.2, 450.}]}, {{}, 
         CuboidBox[{0.8, -0.2, 0.}, {0.85, -0.15, 502.}]}, {{}, 
         CuboidBox[{0.8, -0.15, 0.}, {0.85, -0.1, 492.}]}, {{}, 
         CuboidBox[{0.8, -0.1, 0.}, {0.85, -0.05, 476.}]}, {{}, 
         CuboidBox[{0.8, -0.05, 0.}, {0.85, 0., 456.}]}, {{}, 
         CuboidBox[{0.8, 0., 0.}, {0.85, 0.05, 477.}]}, {{}, 
         CuboidBox[{0.8, 0.05, 0.}, {0.85, 0.1, 454.}]}, {{}, 
         CuboidBox[{0.8, 0.1, 0.}, {0.85, 0.15, 466.}]}, {{}, 
         CuboidBox[{0.8, 0.15, 0.}, {0.85, 0.2, 467.}]}, {{}, 
         CuboidBox[{0.8, 0.2, 0.}, {0.85, 0.25, 403.}]}, {{}, 
         CuboidBox[{0.8, 0.25, 0.}, {0.85, 0.3, 460.}]}, {{}, 
         CuboidBox[{0.8, 0.3, 0.}, {0.85, 0.35, 422.}]}, {{}, 
         CuboidBox[{0.8, 0.35, 0.}, {0.85, 0.4, 426.}]}, {{}, 
         CuboidBox[{0.8, 0.4, 0.}, {0.85, 0.45, 436.}]}, {{}, 
         CuboidBox[{0.8, 0.45, 0.}, {0.85, 0.5, 410.}]}, {{}, 
         CuboidBox[{0.8, 0.5, 0.}, {0.85, 0.55, 375.}]}, {{}, 
         CuboidBox[{0.8, 0.55, 0.}, {0.85, 0.6, 163.}]}, {{}, 
         CuboidBox[{0.85, -0.55, 0.}, {0.9, -0.5, 38.}]}, {{}, 
         CuboidBox[{0.85, -0.5, 0.}, {0.9, -0.45, 218.}]}, {{}, 
         CuboidBox[{0.85, -0.45, 0.}, {0.9, -0.4, 423.}]}, {{}, 
         CuboidBox[{0.85, -0.4, 0.}, {0.9, -0.35, 416.}]}, {{}, 
         CuboidBox[{0.85, -0.35, 0.}, {0.9, -0.3, 436.}]}, {{}, 
         CuboidBox[{0.85, -0.3, 0.}, {0.9, -0.25, 417.}]}, {{}, 
         CuboidBox[{0.85, -0.25, 0.}, {0.9, -0.2, 492.}]}, {{}, 
         CuboidBox[{0.85, -0.2, 0.}, {0.9, -0.15, 466.}]}, {{}, 
         CuboidBox[{0.85, -0.15, 0.}, {0.9, -0.1, 418.}]}, {{}, 
         CuboidBox[{0.85, -0.1, 0.}, {0.9, -0.05, 443.}]}, {{}, 
         CuboidBox[{0.85, -0.05, 0.}, {0.9, 0., 505.}]}, {{}, 
         CuboidBox[{0.85, 0., 0.}, {0.9, 0.05, 464.}]}, {{}, 
         CuboidBox[{0.85, 0.05, 0.}, {0.9, 0.1, 427.}]}, {{}, 
         CuboidBox[{0.85, 0.1, 0.}, {0.9, 0.15, 472.}]}, {{}, 
         CuboidBox[{0.85, 0.15, 0.}, {0.9, 0.2, 447.}]}, {{}, 
         CuboidBox[{0.85, 0.2, 0.}, {0.9, 0.25, 432.}]}, {{}, 
         CuboidBox[{0.85, 0.25, 0.}, {0.9, 0.3, 468.}]}, {{}, 
         CuboidBox[{0.85, 0.3, 0.}, {0.9, 0.35, 393.}]}, {{}, 
         CuboidBox[{0.85, 0.35, 0.}, {0.9, 0.4, 405.}]}, {{}, 
         CuboidBox[{0.85, 0.4, 0.}, {0.9, 0.45, 382.}]}, {{}, 
         CuboidBox[{0.85, 0.45, 0.}, {0.9, 0.5, 259.}]}, {{}, 
         CuboidBox[{0.85, 0.5, 0.}, {0.9, 0.55, 31.}]}, {{}, 
         CuboidBox[{0.9, -0.45, 0.}, {0.95, -0.4, 40.}]}, {{}, 
         CuboidBox[{0.9, -0.4, 0.}, {0.95, -0.35, 212.}]}, {{}, 
         CuboidBox[{0.9, -0.35, 0.}, {0.95, -0.3, 348.}]}, {{}, 
         CuboidBox[{0.9, -0.3, 0.}, {0.95, -0.25, 418.}]}, {{}, 
         CuboidBox[{0.9, -0.25, 0.}, {0.95, -0.2, 427.}]}, {{}, 
         CuboidBox[{0.9, -0.2, 0.}, {0.95, -0.15, 423.}]}, {{}, 
         CuboidBox[{0.9, -0.15, 0.}, {0.95, -0.1, 417.}]}, {{}, 
         CuboidBox[{0.9, -0.1, 0.}, {0.95, -0.05, 400.}]}, {{}, 
         CuboidBox[{0.9, -0.05, 0.}, {0.95, 0., 464.}]}, {{}, 
         CuboidBox[{0.9, 0., 0.}, {0.95, 0.05, 423.}]}, {{}, 
         CuboidBox[{0.9, 0.05, 0.}, {0.95, 0.1, 420.}]}, {{}, 
         CuboidBox[{0.9, 0.1, 0.}, {0.95, 0.15, 416.}]}, {{}, 
         CuboidBox[{0.9, 0.15, 0.}, {0.95, 0.2, 430.}]}, {{}, 
         CuboidBox[{0.9, 0.2, 0.}, {0.95, 0.25, 403.}]}, {{}, 
         CuboidBox[{0.9, 0.25, 0.}, {0.95, 0.3, 426.}]}, {{}, 
         CuboidBox[{0.9, 0.3, 0.}, {0.95, 0.35, 356.}]}, {{}, 
         CuboidBox[{0.9, 0.35, 0.}, {0.95, 0.4, 243.}]}, {{}, 
         CuboidBox[{0.9, 0.4, 0.}, {0.95, 0.45, 60.}]}, {{}, 
         CuboidBox[{0.95, -0.35, 0.}, {1., -0.3, 3.}]}, {{}, 
         CuboidBox[{0.95, -0.3, 0.}, {1., -0.25, 91.}]}, {{}, 
         CuboidBox[{0.95, -0.25, 0.}, {1., -0.2, 172.}]}, {{}, 
         CuboidBox[{0.95, -0.2, 0.}, {1., -0.15, 268.}]}, {{}, 
         CuboidBox[{0.95, -0.15, 0.}, {1., -0.1, 343.}]}, {{}, 
         CuboidBox[{0.95, -0.1, 0.}, {1., -0.05, 408.}]}, {{}, 
         CuboidBox[{0.95, -0.05, 0.}, {1., 0., 434.}]}, {{}, 
         CuboidBox[{0.95, 0., 0.}, {1., 0.05, 421.}]}, {{}, 
         CuboidBox[{0.95, 0.05, 0.}, {1., 0.1, 371.}]}, {{}, 
         CuboidBox[{0.95, 0.1, 0.}, {1., 0.15, 334.}]}, {{}, 
         CuboidBox[{0.95, 0.15, 0.}, {1., 0.2, 242.}]}, {{}, 
         CuboidBox[{0.95, 0.2, 0.}, {1., 0.25, 213.}]}, {{}, 
         CuboidBox[{0.95, 0.25, 0.}, {1., 0.3, 72.}]}, {{}, 
         CuboidBox[{0.95, 0.3, 0.}, {1., 0.35, 4.}]}},
       FontColor->GrayLevel[0.4]]}, {}, {}},
    FontColor->GrayLevel[0.4]]},
  AutomaticImageSize->True,
  Axes->{True, True, True},
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  FaceGridsStyle->Automatic,
  ImageSize->{353.09209532746866`, 221.73136550934083`},
  Lighting->"Neutral",
  Method->{"RotationControl" -> "Globe"},
  PlotRange->{{-1., 1.}, {-1., 1.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.1]}},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{1.3477790314006972`, -2.739231316497953, 1.4594874022181474`},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{3.6908140344304943`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram3D", "[", 
  RowBox[{"RandomVariate", "[", 
   RowBox[{
    RowBox[{"TransformedDistribution", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"r", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
        RowBox[{"r", " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"r", "\[Distributed]", 
         RowBox[{"UniformDistribution", "[", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}], "]"}]}], ",", 
        RowBox[{"\[Theta]", "\[Distributed]", 
         RowBox[{"UniformDistribution", "[", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"2", "\[Pi]"}]}], "}"}], "]"}]}]}], "}"}]}], "]"}], ",", 
    "10000"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.69081348092243*^9, 3.690813501952256*^9}, 
   3.690813627075473*^9}],

Cell[BoxData[
 Graphics3DBox[
  {RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], EdgeForm[
   RGBColor[0.880722, 0.611041, 0.142051]], 
   StyleBox[{{}, 
     {RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], EdgeForm[
      RGBColor[0.880722, 0.611041, 0.142051]], 
      StyleBox[{{{}, CuboidBox[{-1., -0.5, 0.}, {-0.9, -0.4, 1.}]}, {{}, 
         CuboidBox[{-1., -0.4, 0.}, {-0.9, -0.3, 5.}]}, {{}, 
         CuboidBox[{-1., -0.3, 0.}, {-0.9, -0.2, 14.}]}, {{}, 
         CuboidBox[{-1., -0.2, 0.}, {-0.9, -0.1, 15.}]}, {{}, 
         CuboidBox[{-1., -0.1, 0.}, {-0.9, 0., 15.}]}, {{}, 
         CuboidBox[{-1., 0., 0.}, {-0.9, 0.1, 21.}]}, {{}, 
         CuboidBox[{-1., 0.1, 0.}, {-0.9, 0.2, 10.}]}, {{}, 
         CuboidBox[{-1., 0.2, 0.}, {-0.9, 0.3, 12.}]}, {{}, 
         CuboidBox[{-1., 0.3, 0.}, {-0.9, 0.4, 6.}]}, {{}, 
         CuboidBox[{-0.9, -0.6, 0.}, {-0.8, -0.5, 7.}]}, {{}, 
         CuboidBox[{-0.9, -0.5, 0.}, {-0.8, -0.4, 20.}]}, {{}, 
         CuboidBox[{-0.9, -0.4, 0.}, {-0.8, -0.3, 26.}]}, {{}, 
         CuboidBox[{-0.9, -0.3, 0.}, {-0.8, -0.2, 20.}]}, {{}, 
         CuboidBox[{-0.9, -0.2, 0.}, {-0.8, -0.1, 15.}]}, {{}, 
         CuboidBox[{-0.9, -0.1, 0.}, {-0.8, 0., 18.}]}, {{}, 
         CuboidBox[{-0.9, 0., 0.}, {-0.8, 0.1, 16.}]}, {{}, 
         CuboidBox[{-0.9, 0.1, 0.}, {-0.8, 0.2, 24.}]}, {{}, 
         CuboidBox[{-0.9, 0.2, 0.}, {-0.8, 0.3, 30.}]}, {{}, 
         CuboidBox[{-0.9, 0.3, 0.}, {-0.8, 0.4, 19.}]}, {{}, 
         CuboidBox[{-0.9, 0.4, 0.}, {-0.8, 0.5, 18.}]}, {{}, 
         CuboidBox[{-0.9, 0.5, 0.}, {-0.8, 0.6, 9.}]}, {{}, 
         CuboidBox[{-0.8, -0.8, 0.}, {-0.7, -0.7, 1.}]}, {{}, 
         CuboidBox[{-0.8, -0.7, 0.}, {-0.7, -0.6, 10.}]}, {{}, 
         CuboidBox[{-0.8, -0.6, 0.}, {-0.7, -0.5, 17.}]}, {{}, 
         CuboidBox[{-0.8, -0.5, 0.}, {-0.7, -0.4, 18.}]}, {{}, 
         CuboidBox[{-0.8, -0.4, 0.}, {-0.7, -0.3, 26.}]}, {{}, 
         CuboidBox[{-0.8, -0.3, 0.}, {-0.7, -0.2, 26.}]}, {{}, 
         CuboidBox[{-0.8, -0.2, 0.}, {-0.7, -0.1, 24.}]}, {{}, 
         CuboidBox[{-0.8, -0.1, 0.}, {-0.7, 0., 23.}]}, {{}, 
         CuboidBox[{-0.8, 0., 0.}, {-0.7, 0.1, 16.}]}, {{}, 
         CuboidBox[{-0.8, 0.1, 0.}, {-0.7, 0.2, 13.}]}, {{}, 
         CuboidBox[{-0.8, 0.2, 0.}, {-0.7, 0.3, 19.}]}, {{}, 
         CuboidBox[{-0.8, 0.3, 0.}, {-0.7, 0.4, 20.}]}, {{}, 
         CuboidBox[{-0.8, 0.4, 0.}, {-0.7, 0.5, 25.}]}, {{}, 
         CuboidBox[{-0.8, 0.5, 0.}, {-0.7, 0.6, 22.}]}, {{}, 
         CuboidBox[{-0.8, 0.6, 0.}, {-0.7, 0.7, 5.}]}, {{}, 
         CuboidBox[{-0.8, 0.7, 0.}, {-0.7, 0.8, 1.}]}, {{}, 
         CuboidBox[{-0.7, -0.8, 0.}, {-0.6, -0.7, 15.}]}, {{}, 
         CuboidBox[{-0.7, -0.7, 0.}, {-0.6, -0.6, 16.}]}, {{}, 
         CuboidBox[{-0.7, -0.6, 0.}, {-0.6, -0.5, 18.}]}, {{}, 
         CuboidBox[{-0.7, -0.5, 0.}, {-0.6, -0.4, 15.}]}, {{}, 
         CuboidBox[{-0.7, -0.4, 0.}, {-0.6, -0.3, 19.}]}, {{}, 
         CuboidBox[{-0.7, -0.3, 0.}, {-0.6, -0.2, 25.}]}, {{}, 
         CuboidBox[{-0.7, -0.2, 0.}, {-0.6, -0.1, 22.}]}, {{}, 
         CuboidBox[{-0.7, -0.1, 0.}, {-0.6, 0., 22.}]}, {{}, 
         CuboidBox[{-0.7, 0., 0.}, {-0.6, 0.1, 24.}]}, {{}, 
         CuboidBox[{-0.7, 0.1, 0.}, {-0.6, 0.2, 24.}]}, {{}, 
         CuboidBox[{-0.7, 0.2, 0.}, {-0.6, 0.3, 28.}]}, {{}, 
         CuboidBox[{-0.7, 0.3, 0.}, {-0.6, 0.4, 22.}]}, {{}, 
         CuboidBox[{-0.7, 0.4, 0.}, {-0.6, 0.5, 32.}]}, {{}, 
         CuboidBox[{-0.7, 0.5, 0.}, {-0.6, 0.6, 19.}]}, {{}, 
         CuboidBox[{-0.7, 0.6, 0.}, {-0.6, 0.7, 23.}]}, {{}, 
         CuboidBox[{-0.7, 0.7, 0.}, {-0.6, 0.8, 8.}]}, {{}, 
         CuboidBox[{-0.6, -0.9, 0.}, {-0.5, -0.8, 4.}]}, {{}, 
         CuboidBox[{-0.6, -0.8, 0.}, {-0.5, -0.7, 16.}]}, {{}, 
         CuboidBox[{-0.6, -0.7, 0.}, {-0.5, -0.6, 16.}]}, {{}, 
         CuboidBox[{-0.6, -0.6, 0.}, {-0.5, -0.5, 17.}]}, {{}, 
         CuboidBox[{-0.6, -0.5, 0.}, {-0.5, -0.4, 25.}]}, {{}, 
         CuboidBox[{-0.6, -0.4, 0.}, {-0.5, -0.3, 29.}]}, {{}, 
         CuboidBox[{-0.6, -0.3, 0.}, {-0.5, -0.2, 23.}]}, {{}, 
         CuboidBox[{-0.6, -0.2, 0.}, {-0.5, -0.1, 31.}]}, {{}, 
         CuboidBox[{-0.6, -0.1, 0.}, {-0.5, 0., 30.}]}, {{}, 
         CuboidBox[{-0.6, 0., 0.}, {-0.5, 0.1, 24.}]}, {{}, 
         CuboidBox[{-0.6, 0.1, 0.}, {-0.5, 0.2, 32.}]}, {{}, 
         CuboidBox[{-0.6, 0.2, 0.}, {-0.5, 0.3, 30.}]}, {{}, 
         CuboidBox[{-0.6, 0.3, 0.}, {-0.5, 0.4, 33.}]}, {{}, 
         CuboidBox[{-0.6, 0.4, 0.}, {-0.5, 0.5, 33.}]}, {{}, 
         CuboidBox[{-0.6, 0.5, 0.}, {-0.5, 0.6, 20.}]}, {{}, 
         CuboidBox[{-0.6, 0.6, 0.}, {-0.5, 0.7, 19.}]}, {{}, 
         CuboidBox[{-0.6, 0.7, 0.}, {-0.5, 0.8, 16.}]}, {{}, 
         CuboidBox[{-0.6, 0.8, 0.}, {-0.5, 0.9, 7.}]}, {{}, 
         CuboidBox[{-0.5, -1., 0.}, {-0.4, -0.9, 1.}]}, {{}, 
         CuboidBox[{-0.5, -0.9, 0.}, {-0.4, -0.8, 17.}]}, {{}, 
         CuboidBox[{-0.5, -0.8, 0.}, {-0.4, -0.7, 21.}]}, {{}, 
         CuboidBox[{-0.5, -0.7, 0.}, {-0.4, -0.6, 24.}]}, {{}, 
         CuboidBox[{-0.5, -0.6, 0.}, {-0.4, -0.5, 20.}]}, {{}, 
         CuboidBox[{-0.5, -0.5, 0.}, {-0.4, -0.4, 24.}]}, {{}, 
         CuboidBox[{-0.5, -0.4, 0.}, {-0.4, -0.3, 20.}]}, {{}, 
         CuboidBox[{-0.5, -0.3, 0.}, {-0.4, -0.2, 25.}]}, {{}, 
         CuboidBox[{-0.5, -0.2, 0.}, {-0.4, -0.1, 43.}]}, {{}, 
         CuboidBox[{-0.5, -0.1, 0.}, {-0.4, 0., 36.}]}, {{}, 
         CuboidBox[{-0.5, 0., 0.}, {-0.4, 0.1, 30.}]}, {{}, 
         CuboidBox[{-0.5, 0.1, 0.}, {-0.4, 0.2, 34.}]}, {{}, 
         CuboidBox[{-0.5, 0.2, 0.}, {-0.4, 0.3, 27.}]}, {{}, 
         CuboidBox[{-0.5, 0.3, 0.}, {-0.4, 0.4, 33.}]}, {{}, 
         CuboidBox[{-0.5, 0.4, 0.}, {-0.4, 0.5, 25.}]}, {{}, 
         CuboidBox[{-0.5, 0.5, 0.}, {-0.4, 0.6, 23.}]}, {{}, 
         CuboidBox[{-0.5, 0.6, 0.}, {-0.4, 0.7, 21.}]}, {{}, 
         CuboidBox[{-0.5, 0.7, 0.}, {-0.4, 0.8, 14.}]}, {{}, 
         CuboidBox[{-0.5, 0.8, 0.}, {-0.4, 0.9, 21.}]}, {{}, 
         CuboidBox[{-0.4, -1., 0.}, {-0.3, -0.9, 1.}]}, {{}, 
         CuboidBox[{-0.4, -0.9, 0.}, {-0.3, -0.8, 15.}]}, {{}, 
         CuboidBox[{-0.4, -0.8, 0.}, {-0.3, -0.7, 16.}]}, {{}, 
         CuboidBox[{-0.4, -0.7, 0.}, {-0.3, -0.6, 20.}]}, {{}, 
         CuboidBox[{-0.4, -0.6, 0.}, {-0.3, -0.5, 27.}]}, {{}, 
         CuboidBox[{-0.4, -0.5, 0.}, {-0.3, -0.4, 21.}]}, {{}, 
         CuboidBox[{-0.4, -0.4, 0.}, {-0.3, -0.3, 41.}]}, {{}, 
         CuboidBox[{-0.4, -0.3, 0.}, {-0.3, -0.2, 34.}]}, {{}, 
         CuboidBox[{-0.4, -0.2, 0.}, {-0.3, -0.1, 39.}]}, {{}, 
         CuboidBox[{-0.4, -0.1, 0.}, {-0.3, 0., 50.}]}, {{}, 
         CuboidBox[{-0.4, 0., 0.}, {-0.3, 0.1, 57.}]}, {{}, 
         CuboidBox[{-0.4, 0.1, 0.}, {-0.3, 0.2, 42.}]}, {{}, 
         CuboidBox[{-0.4, 0.2, 0.}, {-0.3, 0.3, 35.}]}, {{}, 
         CuboidBox[{-0.4, 0.3, 0.}, {-0.3, 0.4, 30.}]}, {{}, 
         CuboidBox[{-0.4, 0.4, 0.}, {-0.3, 0.5, 30.}]}, {{}, 
         CuboidBox[{-0.4, 0.5, 0.}, {-0.3, 0.6, 23.}]}, {{}, 
         CuboidBox[{-0.4, 0.6, 0.}, {-0.3, 0.7, 20.}]}, {{}, 
         CuboidBox[{-0.4, 0.7, 0.}, {-0.3, 0.8, 17.}]}, {{}, 
         CuboidBox[{-0.4, 0.8, 0.}, {-0.3, 0.9, 12.}]}, {{}, 
         CuboidBox[{-0.4, 0.9, 0.}, {-0.3, 1., 5.}]}, {{}, 
         CuboidBox[{-0.3, -1., 0.}, {-0.2, -0.9, 13.}]}, {{}, 
         CuboidBox[{-0.3, -0.9, 0.}, {-0.2, -0.8, 14.}]}, {{}, 
         CuboidBox[{-0.3, -0.8, 0.}, {-0.2, -0.7, 13.}]}, {{}, 
         CuboidBox[{-0.3, -0.7, 0.}, {-0.2, -0.6, 28.}]}, {{}, 
         CuboidBox[{-0.3, -0.6, 0.}, {-0.2, -0.5, 22.}]}, {{}, 
         CuboidBox[{-0.3, -0.5, 0.}, {-0.2, -0.4, 37.}]}, {{}, 
         CuboidBox[{-0.3, -0.4, 0.}, {-0.2, -0.3, 37.}]}, {{}, 
         CuboidBox[{-0.3, -0.3, 0.}, {-0.2, -0.2, 45.}]}, {{}, 
         CuboidBox[{-0.3, -0.2, 0.}, {-0.2, -0.1, 56.}]}, {{}, 
         CuboidBox[{-0.3, -0.1, 0.}, {-0.2, 0., 53.}]}, {{}, 
         CuboidBox[{-0.3, 0., 0.}, {-0.2, 0.1, 53.}]}, {{}, 
         CuboidBox[{-0.3, 0.1, 0.}, {-0.2, 0.2, 48.}]}, {{}, 
         CuboidBox[{-0.3, 0.2, 0.}, {-0.2, 0.3, 48.}]}, {{}, 
         CuboidBox[{-0.3, 0.3, 0.}, {-0.2, 0.4, 39.}]}, {{}, 
         CuboidBox[{-0.3, 0.4, 0.}, {-0.2, 0.5, 27.}]}, {{}, 
         CuboidBox[{-0.3, 0.5, 0.}, {-0.2, 0.6, 17.}]}, {{}, 
         CuboidBox[{-0.3, 0.6, 0.}, {-0.2, 0.7, 27.}]}, {{}, 
         CuboidBox[{-0.3, 0.7, 0.}, {-0.2, 0.8, 15.}]}, {{}, 
         CuboidBox[{-0.3, 0.8, 0.}, {-0.2, 0.9, 21.}]}, {{}, 
         CuboidBox[{-0.3, 0.9, 0.}, {-0.2, 1., 15.}]}, {{}, 
         CuboidBox[{-0.2, -1., 0.}, {-0.1, -0.9, 10.}]}, {{}, 
         CuboidBox[{-0.2, -0.9, 0.}, {-0.1, -0.8, 19.}]}, {{}, 
         CuboidBox[{-0.2, -0.8, 0.}, {-0.1, -0.7, 15.}]}, {{}, 
         CuboidBox[{-0.2, -0.7, 0.}, {-0.1, -0.6, 28.}]}, {{}, 
         CuboidBox[{-0.2, -0.6, 0.}, {-0.1, -0.5, 24.}]}, {{}, 
         CuboidBox[{-0.2, -0.5, 0.}, {-0.1, -0.4, 24.}]}, {{}, 
         CuboidBox[{-0.2, -0.4, 0.}, {-0.1, -0.3, 37.}]}, {{}, 
         CuboidBox[{-0.2, -0.3, 0.}, {-0.1, -0.2, 46.}]}, {{}, 
         CuboidBox[{-0.2, -0.2, 0.}, {-0.1, -0.1, 64.}]}, {{}, 
         CuboidBox[{-0.2, -0.1, 0.}, {-0.1, 0., 100.}]}, {{}, 
         CuboidBox[{-0.2, 0., 0.}, {-0.1, 0.1, 119.}]}, {{}, 
         CuboidBox[{-0.2, 0.1, 0.}, {-0.1, 0.2, 71.}]}, {{}, 
         CuboidBox[{-0.2, 0.2, 0.}, {-0.1, 0.3, 56.}]}, {{}, 
         CuboidBox[{-0.2, 0.3, 0.}, {-0.1, 0.4, 42.}]}, {{}, 
         CuboidBox[{-0.2, 0.4, 0.}, {-0.1, 0.5, 31.}]}, {{}, 
         CuboidBox[{-0.2, 0.5, 0.}, {-0.1, 0.6, 34.}]}, {{}, 
         CuboidBox[{-0.2, 0.6, 0.}, {-0.1, 0.7, 21.}]}, {{}, 
         CuboidBox[{-0.2, 0.7, 0.}, {-0.1, 0.8, 22.}]}, {{}, 
         CuboidBox[{-0.2, 0.8, 0.}, {-0.1, 0.9, 15.}]}, {{}, 
         CuboidBox[{-0.2, 0.9, 0.}, {-0.1, 1., 20.}]}, {{}, 
         CuboidBox[{-0.1, -1., 0.}, {0., -0.9, 15.}]}, {{}, 
         CuboidBox[{-0.1, -0.9, 0.}, {0., -0.8, 14.}]}, {{}, 
         CuboidBox[{-0.1, -0.8, 0.}, {0., -0.7, 19.}]}, {{}, 
         CuboidBox[{-0.1, -0.7, 0.}, {0., -0.6, 23.}]}, {{}, 
         CuboidBox[{-0.1, -0.6, 0.}, {0., -0.5, 32.}]}, {{}, 
         CuboidBox[{-0.1, -0.5, 0.}, {0., -0.4, 34.}]}, {{}, 
         CuboidBox[{-0.1, -0.4, 0.}, {0., -0.3, 47.}]}, {{}, 
         CuboidBox[{-0.1, -0.3, 0.}, {0., -0.2, 60.}]}, {{}, 
         CuboidBox[{-0.1, -0.2, 0.}, {0., -0.1, 103.}]}, {{}, 
         CuboidBox[{-0.1, -0.1, 0.}, {0., 0., 317.}]}, {{}, 
         CuboidBox[{-0.1, 0., 0.}, {0., 0.1, 263.}]}, {{}, 
         CuboidBox[{-0.1, 0.1, 0.}, {0., 0.2, 111.}]}, {{}, 
         CuboidBox[{-0.1, 0.2, 0.}, {0., 0.3, 57.}]}, {{}, 
         CuboidBox[{-0.1, 0.3, 0.}, {0., 0.4, 46.}]}, {{}, 
         CuboidBox[{-0.1, 0.4, 0.}, {0., 0.5, 30.}]}, {{}, 
         CuboidBox[{-0.1, 0.5, 0.}, {0., 0.6, 21.}]}, {{}, 
         CuboidBox[{-0.1, 0.6, 0.}, {0., 0.7, 21.}]}, {{}, 
         CuboidBox[{-0.1, 0.7, 0.}, {0., 0.8, 23.}]}, {{}, 
         CuboidBox[{-0.1, 0.8, 0.}, {0., 0.9, 23.}]}, {{}, 
         CuboidBox[{-0.1, 0.9, 0.}, {0., 1., 19.}]}, {{}, 
         CuboidBox[{0., -1., 0.}, {0.1, -0.9, 17.}]}, {{}, 
         CuboidBox[{0., -0.9, 0.}, {0.1, -0.8, 20.}]}, {{}, 
         CuboidBox[{0., -0.8, 0.}, {0.1, -0.7, 27.}]}, {{}, 
         CuboidBox[{0., -0.7, 0.}, {0.1, -0.6, 30.}]}, {{}, 
         CuboidBox[{0., -0.6, 0.}, {0.1, -0.5, 23.}]}, {{}, 
         CuboidBox[{0., -0.5, 0.}, {0.1, -0.4, 35.}]}, {{}, 
         CuboidBox[{0., -0.4, 0.}, {0.1, -0.3, 34.}]}, {{}, 
         CuboidBox[{0., -0.3, 0.}, {0.1, -0.2, 54.}]}, {{}, 
         CuboidBox[{0., -0.2, 0.}, {0.1, -0.1, 109.}]}, {{}, 
         CuboidBox[{0., -0.1, 0.}, {0.1, 0., 267.}]}, {{}, 
         CuboidBox[{0., 0., 0.}, {0.1, 0.1, 299.}]}, {{}, 
         CuboidBox[{0., 0.1, 0.}, {0.1, 0.2, 83.}]}, {{}, 
         CuboidBox[{0., 0.2, 0.}, {0.1, 0.3, 56.}]}, {{}, 
         CuboidBox[{0., 0.3, 0.}, {0.1, 0.4, 37.}]}, {{}, 
         CuboidBox[{0., 0.4, 0.}, {0.1, 0.5, 39.}]}, {{}, 
         CuboidBox[{0., 0.5, 0.}, {0.1, 0.6, 31.}]}, {{}, 
         CuboidBox[{0., 0.6, 0.}, {0.1, 0.7, 34.}]}, {{}, 
         CuboidBox[{0., 0.7, 0.}, {0.1, 0.8, 24.}]}, {{}, 
         CuboidBox[{0., 0.8, 0.}, {0.1, 0.9, 23.}]}, {{}, 
         CuboidBox[{0., 0.9, 0.}, {0.1, 1., 24.}]}, {{}, 
         CuboidBox[{0.1, -1., 0.}, {0.2, -0.9, 9.}]}, {{}, 
         CuboidBox[{0.1, -0.9, 0.}, {0.2, -0.8, 18.}]}, {{}, 
         CuboidBox[{0.1, -0.8, 0.}, {0.2, -0.7, 20.}]}, {{}, 
         CuboidBox[{0.1, -0.7, 0.}, {0.2, -0.6, 30.}]}, {{}, 
         CuboidBox[{0.1, -0.6, 0.}, {0.2, -0.5, 29.}]}, {{}, 
         CuboidBox[{0.1, -0.5, 0.}, {0.2, -0.4, 27.}]}, {{}, 
         CuboidBox[{0.1, -0.4, 0.}, {0.2, -0.3, 39.}]}, {{}, 
         CuboidBox[{0.1, -0.3, 0.}, {0.2, -0.2, 77.}]}, {{}, 
         CuboidBox[{0.1, -0.2, 0.}, {0.2, -0.1, 76.}]}, {{}, 
         CuboidBox[{0.1, -0.1, 0.}, {0.2, 0., 106.}]}, {{}, 
         CuboidBox[{0.1, 0., 0.}, {0.2, 0.1, 98.}]}, {{}, 
         CuboidBox[{0.1, 0.1, 0.}, {0.2, 0.2, 80.}]}, {{}, 
         CuboidBox[{0.1, 0.2, 0.}, {0.2, 0.3, 47.}]}, {{}, 
         CuboidBox[{0.1, 0.3, 0.}, {0.2, 0.4, 46.}]}, {{}, 
         CuboidBox[{0.1, 0.4, 0.}, {0.2, 0.5, 36.}]}, {{}, 
         CuboidBox[{0.1, 0.5, 0.}, {0.2, 0.6, 32.}]}, {{}, 
         CuboidBox[{0.1, 0.6, 0.}, {0.2, 0.7, 32.}]}, {{}, 
         CuboidBox[{0.1, 0.7, 0.}, {0.2, 0.8, 19.}]}, {{}, 
         CuboidBox[{0.1, 0.8, 0.}, {0.2, 0.9, 23.}]}, {{}, 
         CuboidBox[{0.1, 0.9, 0.}, {0.2, 1., 16.}]}, {{}, 
         CuboidBox[{0.2, -1., 0.}, {0.3, -0.9, 9.}]}, {{}, 
         CuboidBox[{0.2, -0.9, 0.}, {0.3, -0.8, 14.}]}, {{}, 
         CuboidBox[{0.2, -0.8, 0.}, {0.3, -0.7, 16.}]}, {{}, 
         CuboidBox[{0.2, -0.7, 0.}, {0.3, -0.6, 25.}]}, {{}, 
         CuboidBox[{0.2, -0.6, 0.}, {0.3, -0.5, 28.}]}, {{}, 
         CuboidBox[{0.2, -0.5, 0.}, {0.3, -0.4, 27.}]}, {{}, 
         CuboidBox[{0.2, -0.4, 0.}, {0.3, -0.3, 43.}]}, {{}, 
         CuboidBox[{0.2, -0.3, 0.}, {0.3, -0.2, 48.}]}, {{}, 
         CuboidBox[{0.2, -0.2, 0.}, {0.3, -0.1, 61.}]}, {{}, 
         CuboidBox[{0.2, -0.1, 0.}, {0.3, 0., 67.}]}, {{}, 
         CuboidBox[{0.2, 0., 0.}, {0.3, 0.1, 58.}]}, {{}, 
         CuboidBox[{0.2, 0.1, 0.}, {0.3, 0.2, 43.}]}, {{}, 
         CuboidBox[{0.2, 0.2, 0.}, {0.3, 0.3, 56.}]}, {{}, 
         CuboidBox[{0.2, 0.3, 0.}, {0.3, 0.4, 27.}]}, {{}, 
         CuboidBox[{0.2, 0.4, 0.}, {0.3, 0.5, 27.}]}, {{}, 
         CuboidBox[{0.2, 0.5, 0.}, {0.3, 0.6, 24.}]}, {{}, 
         CuboidBox[{0.2, 0.6, 0.}, {0.3, 0.7, 26.}]}, {{}, 
         CuboidBox[{0.2, 0.7, 0.}, {0.3, 0.8, 16.}]}, {{}, 
         CuboidBox[{0.2, 0.8, 0.}, {0.3, 0.9, 17.}]}, {{}, 
         CuboidBox[{0.2, 0.9, 0.}, {0.3, 1., 9.}]}, {{}, 
         CuboidBox[{0.3, -1., 0.}, {0.4, -0.9, 10.}]}, {{}, 
         CuboidBox[{0.3, -0.9, 0.}, {0.4, -0.8, 23.}]}, {{}, 
         CuboidBox[{0.3, -0.8, 0.}, {0.4, -0.7, 14.}]}, {{}, 
         CuboidBox[{0.3, -0.7, 0.}, {0.4, -0.6, 17.}]}, {{}, 
         CuboidBox[{0.3, -0.6, 0.}, {0.4, -0.5, 22.}]}, {{}, 
         CuboidBox[{0.3, -0.5, 0.}, {0.4, -0.4, 22.}]}, {{}, 
         CuboidBox[{0.3, -0.4, 0.}, {0.4, -0.3, 33.}]}, {{}, 
         CuboidBox[{0.3, -0.3, 0.}, {0.4, -0.2, 44.}]}, {{}, 
         CuboidBox[{0.3, -0.2, 0.}, {0.4, -0.1, 42.}]}, {{}, 
         CuboidBox[{0.3, -0.1, 0.}, {0.4, 0., 40.}]}, {{}, 
         CuboidBox[{0.3, 0., 0.}, {0.4, 0.1, 31.}]}, {{}, 
         CuboidBox[{0.3, 0.1, 0.}, {0.4, 0.2, 28.}]}, {{}, 
         CuboidBox[{0.3, 0.2, 0.}, {0.4, 0.3, 34.}]}, {{}, 
         CuboidBox[{0.3, 0.3, 0.}, {0.4, 0.4, 32.}]}, {{}, 
         CuboidBox[{0.3, 0.4, 0.}, {0.4, 0.5, 24.}]}, {{}, 
         CuboidBox[{0.3, 0.5, 0.}, {0.4, 0.6, 20.}]}, {{}, 
         CuboidBox[{0.3, 0.6, 0.}, {0.4, 0.7, 17.}]}, {{}, 
         CuboidBox[{0.3, 0.7, 0.}, {0.4, 0.8, 18.}]}, {{}, 
         CuboidBox[{0.3, 0.8, 0.}, {0.4, 0.9, 19.}]}, {{}, 
         CuboidBox[{0.3, 0.9, 0.}, {0.4, 1., 2.}]}, {{}, 
         CuboidBox[{0.4, -0.9, 0.}, {0.5, -0.8, 16.}]}, {{}, 
         CuboidBox[{0.4, -0.8, 0.}, {0.5, -0.7, 15.}]}, {{}, 
         CuboidBox[{0.4, -0.7, 0.}, {0.5, -0.6, 21.}]}, {{}, 
         CuboidBox[{0.4, -0.6, 0.}, {0.5, -0.5, 29.}]}, {{}, 
         CuboidBox[{0.4, -0.5, 0.}, {0.5, -0.4, 23.}]}, {{}, 
         CuboidBox[{0.4, -0.4, 0.}, {0.5, -0.3, 27.}]}, {{}, 
         CuboidBox[{0.4, -0.3, 0.}, {0.5, -0.2, 41.}]}, {{}, 
         CuboidBox[{0.4, -0.2, 0.}, {0.5, -0.1, 40.}]}, {{}, 
         CuboidBox[{0.4, -0.1, 0.}, {0.5, 0., 33.}]}, {{}, 
         CuboidBox[{0.4, 0., 0.}, {0.5, 0.1, 44.}]}, {{}, 
         CuboidBox[{0.4, 0.1, 0.}, {0.5, 0.2, 30.}]}, {{}, 
         CuboidBox[{0.4, 0.2, 0.}, {0.5, 0.3, 19.}]}, {{}, 
         CuboidBox[{0.4, 0.3, 0.}, {0.5, 0.4, 21.}]}, {{}, 
         CuboidBox[{0.4, 0.4, 0.}, {0.5, 0.5, 28.}]}, {{}, 
         CuboidBox[{0.4, 0.5, 0.}, {0.5, 0.6, 28.}]}, {{}, 
         CuboidBox[{0.4, 0.6, 0.}, {0.5, 0.7, 27.}]}, {{}, 
         CuboidBox[{0.4, 0.7, 0.}, {0.5, 0.8, 29.}]}, {{}, 
         CuboidBox[{0.4, 0.8, 0.}, {0.5, 0.9, 13.}]}, {{}, 
         CuboidBox[{0.5, -0.9, 0.}, {0.6, -0.8, 9.}]}, {{}, 
         CuboidBox[{0.5, -0.8, 0.}, {0.6, -0.7, 17.}]}, {{}, 
         CuboidBox[{0.5, -0.7, 0.}, {0.6, -0.6, 17.}]}, {{}, 
         CuboidBox[{0.5, -0.6, 0.}, {0.6, -0.5, 24.}]}, {{}, 
         CuboidBox[{0.5, -0.5, 0.}, {0.6, -0.4, 28.}]}, {{}, 
         CuboidBox[{0.5, -0.4, 0.}, {0.6, -0.3, 21.}]}, {{}, 
         CuboidBox[{0.5, -0.3, 0.}, {0.6, -0.2, 27.}]}, {{}, 
         CuboidBox[{0.5, -0.2, 0.}, {0.6, -0.1, 22.}]}, {{}, 
         CuboidBox[{0.5, -0.1, 0.}, {0.6, 0., 31.}]}, {{}, 
         CuboidBox[{0.5, 0., 0.}, {0.6, 0.1, 28.}]}, {{}, 
         CuboidBox[{0.5, 0.1, 0.}, {0.6, 0.2, 30.}]}, {{}, 
         CuboidBox[{0.5, 0.2, 0.}, {0.6, 0.3, 37.}]}, {{}, 
         CuboidBox[{0.5, 0.3, 0.}, {0.6, 0.4, 22.}]}, {{}, 
         CuboidBox[{0.5, 0.4, 0.}, {0.6, 0.5, 29.}]}, {{}, 
         CuboidBox[{0.5, 0.5, 0.}, {0.6, 0.6, 17.}]}, {{}, 
         CuboidBox[{0.5, 0.6, 0.}, {0.6, 0.7, 15.}]}, {{}, 
         CuboidBox[{0.5, 0.7, 0.}, {0.6, 0.8, 13.}]}, {{}, 
         CuboidBox[{0.5, 0.8, 0.}, {0.6, 0.9, 5.}]}, {{}, 
         CuboidBox[{0.6, -0.8, 0.}, {0.7, -0.7, 6.}]}, {{}, 
         CuboidBox[{0.6, -0.7, 0.}, {0.7, -0.6, 13.}]}, {{}, 
         CuboidBox[{0.6, -0.6, 0.}, {0.7, -0.5, 22.}]}, {{}, 
         CuboidBox[{0.6, -0.5, 0.}, {0.7, -0.4, 22.}]}, {{}, 
         CuboidBox[{0.6, -0.4, 0.}, {0.7, -0.3, 19.}]}, {{}, 
         CuboidBox[{0.6, -0.3, 0.}, {0.7, -0.2, 22.}]}, {{}, 
         CuboidBox[{0.6, -0.2, 0.}, {0.7, -0.1, 24.}]}, {{}, 
         CuboidBox[{0.6, -0.1, 0.}, {0.7, 0., 29.}]}, {{}, 
         CuboidBox[{0.6, 0., 0.}, {0.7, 0.1, 32.}]}, {{}, 
         CuboidBox[{0.6, 0.1, 0.}, {0.7, 0.2, 23.}]}, {{}, 
         CuboidBox[{0.6, 0.2, 0.}, {0.7, 0.3, 25.}]}, {{}, 
         CuboidBox[{0.6, 0.3, 0.}, {0.7, 0.4, 25.}]}, {{}, 
         CuboidBox[{0.6, 0.4, 0.}, {0.7, 0.5, 19.}]}, {{}, 
         CuboidBox[{0.6, 0.5, 0.}, {0.7, 0.6, 15.}]}, {{}, 
         CuboidBox[{0.6, 0.6, 0.}, {0.7, 0.7, 19.}]}, {{}, 
         CuboidBox[{0.6, 0.7, 0.}, {0.7, 0.8, 8.}]}, {{}, 
         CuboidBox[{0.7, -0.8, 0.}, {0.8, -0.7, 1.}]}, {{}, 
         CuboidBox[{0.7, -0.7, 0.}, {0.8, -0.6, 8.}]}, {{}, 
         CuboidBox[{0.7, -0.6, 0.}, {0.8, -0.5, 21.}]}, {{}, 
         CuboidBox[{0.7, -0.5, 0.}, {0.8, -0.4, 18.}]}, {{}, 
         CuboidBox[{0.7, -0.4, 0.}, {0.8, -0.3, 17.}]}, {{}, 
         CuboidBox[{0.7, -0.3, 0.}, {0.8, -0.2, 16.}]}, {{}, 
         CuboidBox[{0.7, -0.2, 0.}, {0.8, -0.1, 21.}]}, {{}, 
         CuboidBox[{0.7, -0.1, 0.}, {0.8, 0., 18.}]}, {{}, 
         CuboidBox[{0.7, 0., 0.}, {0.8, 0.1, 20.}]}, {{}, 
         CuboidBox[{0.7, 0.1, 0.}, {0.8, 0.2, 24.}]}, {{}, 
         CuboidBox[{0.7, 0.2, 0.}, {0.8, 0.3, 18.}]}, {{}, 
         CuboidBox[{0.7, 0.3, 0.}, {0.8, 0.4, 27.}]}, {{}, 
         CuboidBox[{0.7, 0.4, 0.}, {0.8, 0.5, 16.}]}, {{}, 
         CuboidBox[{0.7, 0.5, 0.}, {0.8, 0.6, 20.}]}, {{}, 
         CuboidBox[{0.7, 0.6, 0.}, {0.8, 0.7, 8.}]}, {{}, 
         CuboidBox[{0.8, -0.6, 0.}, {0.9, -0.5, 3.}]}, {{}, 
         CuboidBox[{0.8, -0.5, 0.}, {0.9, -0.4, 15.}]}, {{}, 
         CuboidBox[{0.8, -0.4, 0.}, {0.9, -0.3, 15.}]}, {{}, 
         CuboidBox[{0.8, -0.3, 0.}, {0.9, -0.2, 20.}]}, {{}, 
         CuboidBox[{0.8, -0.2, 0.}, {0.9, -0.1, 10.}]}, {{}, 
         CuboidBox[{0.8, -0.1, 0.}, {0.9, 0., 18.}]}, {{}, 
         CuboidBox[{0.8, 0., 0.}, {0.9, 0.1, 13.}]}, {{}, 
         CuboidBox[{0.8, 0.1, 0.}, {0.9, 0.2, 23.}]}, {{}, 
         CuboidBox[{0.8, 0.2, 0.}, {0.9, 0.3, 13.}]}, {{}, 
         CuboidBox[{0.8, 0.3, 0.}, {0.9, 0.4, 19.}]}, {{}, 
         CuboidBox[{0.8, 0.4, 0.}, {0.9, 0.5, 16.}]}, {{}, 
         CuboidBox[{0.8, 0.5, 0.}, {0.9, 0.6, 3.}]}, {{}, 
         CuboidBox[{0.9, -0.4, 0.}, {1., -0.3, 5.}]}, {{}, 
         CuboidBox[{0.9, -0.3, 0.}, {1., -0.2, 14.}]}, {{}, 
         CuboidBox[{0.9, -0.2, 0.}, {1., -0.1, 12.}]}, {{}, 
         CuboidBox[{0.9, -0.1, 0.}, {1., 0., 23.}]}, {{}, 
         CuboidBox[{0.9, 0., 0.}, {1., 0.1, 19.}]}, {{}, 
         CuboidBox[{0.9, 0.1, 0.}, {1., 0.2, 11.}]}, {{}, 
         CuboidBox[{0.9, 0.2, 0.}, {1., 0.3, 9.}]}, {{}, 
         CuboidBox[{0.9, 0.3, 0.}, {1., 0.4, 6.}]}},
       FontColor->GrayLevel[0.4]]}, {}, {}},
    FontColor->GrayLevel[0.4]]},
  Axes->{True, True, True},
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  FaceGridsStyle->Automatic,
  Lighting->"Neutral",
  Method->{"RotationControl" -> "Globe"},
  PlotRange->{{-1., 1.}, {-1., 1.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.1]}},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{1.3000000000000003`, -2.3999999999999995`, 2.},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{3.690813638219699*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"x", ",", "y"}], "]"}], ";", 
  RowBox[{"PDF", "[", 
   RowBox[{
    RowBox[{"TransformedDistribution", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"r", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
        RowBox[{"r", " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"r", "\[Distributed]", 
         RowBox[{"UniformDistribution", "[", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}], "]"}]}], ",", 
        RowBox[{"\[Theta]", "\[Distributed]", 
         RowBox[{"UniformDistribution", "[", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"2", "\[Pi]"}]}], "}"}], "]"}]}]}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.690813559148341*^9, 3.6908135697567797`*^9}}],

Cell[BoxData[
 RowBox[{"PDF", "[", 
  RowBox[{
   RowBox[{"TransformedDistribution", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[FormalX]1", " ", 
        RowBox[{"Cos", "[", "\[FormalX]2", "]"}]}], ",", 
       RowBox[{"\[FormalX]1", " ", 
        RowBox[{"Sin", "[", "\[FormalX]2", "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[FormalX]1", "\[Distributed]", 
        RowBox[{"UniformDistribution", "[", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}], "]"}]}], ",", 
       RowBox[{"\[FormalX]2", "\[Distributed]", 
        RowBox[{"UniformDistribution", "[", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"2", " ", "\[Pi]"}]}], "}"}], "]"}]}]}], "}"}]}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{{3.6908135662475348`*^9, 3.690813572224555*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"PDF", "[", 
    RowBox[{
     RowBox[{"TransformedDistribution", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[FormalX]1", " ", 
          RowBox[{"Cos", "[", "\[FormalX]2", "]"}]}], ",", 
         RowBox[{"\[FormalX]1", " ", 
          RowBox[{"Sin", "[", "\[FormalX]2", "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[FormalX]1", "\[Distributed]", 
          RowBox[{"UniformDistribution", "[", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}], "]"}]}], ",", 
         RowBox[{"\[FormalX]2", "\[Distributed]", 
          RowBox[{"UniformDistribution", "[", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"2", " ", "\[Pi]"}]}], "}"}], "]"}]}]}], "}"}]}], "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.690813605765008*^9, 3.6908136059807777`*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{{3.690813601578142*^9, 3.6908136293715878`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plot3D", "Subsection",
 CellChangeTimes->{{3.686399233667267*^9, 3.68639923684855*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Normal2", "[", 
   RowBox[{"x_", ",", "y_", ",", "\[Sigma]_"}], "]"}], ":=", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"2", "\[Pi]", " ", "\[Sigma]"}]], 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     FractionBox[
      RowBox[{"-", "1"}], 
      RowBox[{"2", 
       SuperscriptBox["\[Sigma]", "2"]}]], 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["x", "2"], "+", 
       SuperscriptBox["y", "2"]}], ")"}]}]]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Normal2onepass", "[", 
   RowBox[{"x_", ",", "y_", ",", "\[Sigma]_", ",", "r_"}], "]"}], ":=", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"2", "\[Pi]", " ", "\[Sigma]"}]], 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     FractionBox[
      RowBox[{"-", "1"}], 
      RowBox[{"2", 
       SuperscriptBox["\[Sigma]", "2"]}]], 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["x", "2"], "+", 
       SuperscriptBox["y", "2"]}], ")"}]}]], 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "2"], "+", 
       SuperscriptBox["y", "2"]}], "<", 
      SuperscriptBox["r", "2"]}], ",", ".1", ",", "1"}], "]"}]}]}]}], "Input",\

 CellChangeTimes->{{3.686398632317314*^9, 3.686398634616186*^9}, {
  3.686398669588901*^9, 3.6863987772665653`*^9}, {3.68639883629935*^9, 
  3.686398889942643*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"Normal2", "[", 
    RowBox[{"x", ",", "y", ",", "2"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6863987821027946`*^9, 3.686398824482409*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJx1nHmcjXX7x3GSdTDGo7EvSYsl1GPaz5eeslXKMinbYEybsWTJ1liK7MsQ
E9lnMIQZMWRpjq3wk6whsqYnkkhC0fy85lzv67zu63H657zm3e0+1/053/u6
r+/1/XzvKp17tOiaL0+ePBXz58nju/357yUl9uTkRAX4HP7fytvSq1bzBxoX
q5xcLVL53S1mPRUTGeOftvuek42Tiyp//8E5639t2Mj/WZGooYlH71Z+6tA/
/1xOa+XfnHuevMqnV0xOeqJqnH9F7vF/ZsPLPVkjpX/dBP+qXP6T8rjNHWb2
OPG2P0/ufwc2wJvGvvDte6nd/HODx/vh8XJ8WvD8yivK+TcG43HwmRLP4mD8
yi9I/MnB61U+Rq73y6A+yiNFH/nbWT35G13Rk7/5/GFB200RiU1VZ3i+J682
z7vwddUZPiMzpvCsRW+ozvCXGk8+NWvQu6ozvNiOW9fWdRugOsNXPf3hu5V3
JKnO8LJ5u20r/uZQ1Rm+Vo5HZ3iknB+d4S0kHnSGp0n86AwvIdeLzvBzog86
Wz3RGf0YnxwHR0/+5vN1GT/oDH+545j06d+/pzrDO875u2LvBcNVZ/iPMasq
jFwwWnWGt959rPGAIhNVZ/jygqV7vTN2kuoMbyPHozP8vJwfneHxEg86w9tJ
/OgMT5DrRWc4+qOz1ROd0Yn7HZ3hjE/+PRw9+ZvPUU1iayXXHKE6w9NFH3SG
J+3OmVZj8zTVGb7twPamaRNmqs7wmKgJ/piOs1Rn+HY5Hp3hH8j50RmeIfGg
M3ySxI/OcPRHZzjjH52tnuiMHuRPdIZzv6MznPHJeeHoyd98ni295rWvv/9E
dYbnv1BgS+z2eaozPGpuneTHRqWpzvAOc1PWx1xZqDrDS8vx6AwvJOdHZ/hF
iQed4eiPzvAEuV50hr8q+qCz1ROduW6eR+gMJ3+iM5z7HZ3hjE++D46e/M3n
3n9q9ajYb7HqDL9/gK/Sh7OXqc7wmaserXRk8grVGV5Djkdn+GE5PzrDi0g8
6AwfKfGjM/w3uV50Vt1EH3S2eqIz18fzXZ9DwnkeoTOc/InOcO53dIYzPokD
jp76ffJ5651p89MvZqrO8PkN/9x9vfznqjM8R45HZ3htOT86w8tJPOgM/1bi
R2d4J7ledNbrFX3Q2eqJzlwH9RI6w3m+ozOc5xE6w8mf6AznfkdnOOOT+ODo
yd98frB9R2KdjqtUZ3iaHI/Oeh45PzrDEyQedIY3lPjRGb5arhed4VVFH3S2
eqIz8cab8Qxfa8YzvI0Zz/DtZjzDS5vxDK9hxjM8x4xneJoZz3zm7eYdz/C6
ZjzDK5jxDN9vxjO8qxnP8B1mPFs90Zm4Kpr8DI80+Rl+3uRn+AcmP8MLmfwM
P2zyM7y2yc/w+SY/w+ua/MznDyY/w0uY/AwfZ/Iz/KrJz/AKJj9bPdGZ759p
6g14C1NvwONNvQHPMPUG/KKpN+BFTL0BL2fqDXiCqTfgFUy9AS9h6g0+r5l6
A55l6g14oqk34O1MvWH1RGe+54Kpn/V3NvUzvJ2pn+GTTP0MzzD1M3ykqZ/h
35r6Gd7Q1M/w/aZ+ho8z9TM8y9TPfE439TO8q6mf4ZmmfrZ6ojPnG2Pmg/AS
Zj4ITzDzQXg7Mx/U4818EP6bmQ/CO5n5IHy1mQ/Cu5r5IPyqmQ/CE818UM9j
5oN89jLzQXgFMx+0eqIz/y7S9Dfg50x/A17C9Dc0b5n+BvxV09+AlzP9Dfg2
09+AVzX9DfgO09+AVzD9DXg709+AZ5r+hp7H9Df4vGb6G1ZP069zYfp1Lky/
zoXp17kw/ToXpl/nwvTrXJh+nQvTr3Nh+nUuTL/OhenXuTD9OhemX2f1dFbP
gQOKX2+cXDLA57Jvhp4ZvyekP/zStEJLT1+rzfEuzPEuzPGcx4U5vwtzfj2e
v/kee37OZ88ThgfseUz8yg9Hloiv1iQqwGfztnlWxMY8DHdhOMe7MMcrJz7+
XXy1ItOql3xQj9d+r5dr/HD+5t+FOT4Q5njLA2HO4+z3Xpxa7LucIaG+7oi7
/ho8ZFJjf/Oc6LU5ORH6vZ0LNXv0tVb/Ua794Lh7V1Vt+qp/84FSW3NyCurx
ayqO3/fsf15RzvGldsZ1Pf11F4nTp8ePGxOZ9Ejf15VzfOUqyxK6Ne/ufzn3
e29pv73Z6BrbL7/RWTnHp1y/saNg6b7++rnHXdHjL5a/3ubPdm8o5/jHE+bE
Htgy0B+Ty8/o8cf7HJtXIvod5Rz/XNaE1nkKD5G8kaF9/iaSNx4JHq+/w0k5
D8fbfjXHwxvJ+R8Nxum38cNt/C8FddDjm4o+cI6fLvoEz+PT8TlB9IdzfBXR
f1Pwd9Tj18vvC+f4aPl9g98boccnyPiBc/xXMn5kHOrxXesc2ny2xr+Vc/xI
GZ+MW54bT4/MyNtzWxsdn/D7vxhxvOXgN3Qcwu920Ws++L23jjd40W8DV76c
lKTjCj7l8NBnBj47QscPfHj7pJ+H3xqj4wS+Juvumz++MFF/d9s/53eHr5Xj
+X3hH8r5+R3hUyUefi94cYmf3wVeWK4X/eE1RB90hjvRE515Dv+8+OSogre6
qs7wlRu7x5093Ed1hh86UWnXoVXDVGd4r1qbPlpVZazqDD+68sUhV04kq87w
yBK/+5pena46w6cO7jR6zfaZqjO8vtT/6Az/WI5HZ3hJOT86w3+QeNAZ3lfi
R2f4EbledIZniT7oDD8neqIzdU2dBo2/ebF2L9UZPuVk96jCTYeqzvBPf7rR
f/LSsaozfOfEhK5lHvlYdYbHdmyz5FbSLNUZXrjMvvrN185XneEV5rZ/L2V1
mups++foDK8kx6MzvIicH53hbSQedIZ/I/GjM3yOXC86wz8WfdAZXk/0RGfq
xHlbhlZ9cv57qjO8xJnnrz755kjVGT5u6eUudxWcojrDG+//aEK3B2epzvBS
j0xbMKxJquoMf7P9vUdjAumqs67LzS2UffHYMtUZPkP6M+gMT5Hj0Rn+jpwf
neGlJR50hjeT+NEZPkGuF53hUaIPOsNTRU90pu5+YP659ldmDVad4QOr/nlX
9u37CJ11PeGXhKIvFZmuOsOfHrFz5rZF81Rn+PuZOT9NnbRYdYYf3zP+55ja
K1Rn+L6EqqN6l1qpOtv+OTrD98vx6Aw/KedHZ/gQiQed4X6JH53hmXK96KzX
JfqgM7ym6InOzGNiv+5VusvQJNUZ/nLEzbL3/TJOdYY3Ll5l386JKaqz9rkP
rlj21t75qjP8+v1X3KraS1RneHyrXnN+m5WhOsM7fr5ns/+5z1VnOP1zdIbH
yfHoDO8q50dn+F8SDzrD80n86Kz9cLledIa3En3QGf6a6InO2sc24xn+vhnP
8EwznuHOjGf4MDOe4afNeIYfMOPZ9s/RGX7QjGf4GTOe4cPNeIY3MONZ153M
eNbrMuMZ/rAZz8yzU01+hv/L5Gf4ZJOf4c1NfoaXMfkZ3sPkZ/gsk5/h80x+
hs82+Rne0+RneFmTn+EtTX6GTzH5GR5t8jN8ocnP9C0eNfUGPMXUG/CFpt6A
7zP1BjzO1Bva3zb1Bvw+U2/Y/jk6w6ubegNe0tQb8C6m3oAfMPUGPN3UG9on
N/UGvL6pN+gD/W7qZ/gGUz/Dj5v6GT7Y1M/w06Z+hpc19TN8tqmf4Q1M/azr
ZqZ+hpc39TP8R1M/w5NM/Qw/YepneLapn+F/mPqZvlpTMx+E1zPzQe2rm/kg
PNrMB+GfmvkgfLyZD8K3mPmg7Z+jM3ybmQ/CJ5r5IHy2mQ/Cy5v5ILykmQ9q
P9LMB+EvmPkgfcpJpl8E32X6QtpPNv0feG3T54EvMP0ceCPTt4HHmv6M7Z+j
M7yN6bfAnzd9Ffh80z+B1zV9Ev1e0w+B7zV9D/gU09+gX0c/xPTlHH05039z
9N9Mn83RZzP9NEc/zfTNHH0n0x9zx01fCx6mD+bog5m+lp7f9K8c/SvTp3L0
qUw/ytGPMn0nR98JPbWOO9An4tj/Pa96lj9VbFzi0chAwqZNPaYmtlY9m9Uq
3vBo/ZKB8+tu9Ch4LU71pA/98j8vdyqb9kYoD28rvjzr15KBq+lldlyqnqh6
HpI+7eznMlsfvKun6pm/Q4myyalRgeXnF48ZvaaH6vmo9MFijZ7E323QA6ee
XTdY9ST+ig+/XWtgYj/Vk/in78k/pWRiD9WT+Kv+HL/1lx+7hPKwxF/u6bYb
r52NVT2J/97GxTb2jQiNz98Tol+o1iQiUD/p6ImdhUL5ls8Cuz6dFL+7a6gv
NL1MtaNZxQKVB/Q9V/vNXqpnoTplJ2UlFg/sHju60+vj+6uej8RH/NO4ZInA
A9caPPvfr5NUz84ZEauyEksE8nSs3yO12TDVc9LNiLer7SgRqNO+Y7EjM4ap
ntnSP6xk8sBliT9rVffoojHjVU+57sCSzOmp26M+CvWFJP5WR47lHfv2UNWz
sMR/eP/4bWVr9FU9H5X4L766MM+4Y2+qnsTPeiJ5gPhnlEoN7CjQVHUumBp1
oXFygcCaVd98F+gWqh+6PlWqTbUmBQN1y91/4JUJvUN9IfmMn/tN2sxhQ1Tn
Son/qnM0q1Dgw7n920YOH6k6D85f+tOsxMKBDyvOSt2+Zpzq/P2s0gWTqxUJ
1Nx5cNbfQyepzjH17+mTeLRIILPdvmu/uMmq81TpH640z7UCEn/jQcnFn6k9
Q3WOl/gz+rT9vviVqaG+kMT/XaUhKSnNJqjOlSX+QX88sDDfzx+ozu9L/Kx3
ozPx//ufUtcGRr6tOhP/4u7fdc05+5rqXDH3PsobuLv0q6tf29tTdR6Ue7/k
CzTuGmhe+XySxhdcV/EFvhh838aG9482+dYX+L5C3cdGPZYcqh8aRj51NOuu
QJ+sK4/FL5uuOl/6PnJxVmL+wG8Ptflrw8GZqvOLvUuWSq52d6Dp6daTZh+Z
pTovkf7hU6ZOqyDxN0k8c6XaslTVeaDEP6/InPX/2j5XdSb+r9uuvDQuM0V1
ri/x48dA5ykSf6DJHx9Vf/xD1Zn4PykzLubI8H6qM/G7nM1rL2UlqM5v5P7u
17OP1P2va9QgNL+rmvv73si+0WJAi+gxI1Tno7m/49/ZV4s9fCDP2smmb38z
O+5S8qCixWaoznyu67dudbqbpzoXyb1Pc7Jf+fbusqc3pqrOXXLvxzyBRVX3
Lui2Y6FZr8kbiDPzjgSJv1TFaclld3ymOleW+B9cdPFa6rpFqjPxFxY/DzpP
l/i/eLdt/wEvpajOLST+AzL+0bmoxL+851NZtR4Ypjp3lvj/3ndqeYOJoXlH
tdx4zmWveivr16iWoX7FJ7nfeyH7p5Zprev1G6M6B8//W/bA5s377CkwzazH
Xc7+7NnDtRf1mas6B++L37P/dCO3LXpsoerMZ6XVy1J/ab5Udb6cO06uZi+f
cXL35czlqvNS6R/OMvPoKhL/znP18/yenmnWRy5k1xJ/GjoT/7wFxbd1n7fQ
9JMvZ/eM7fZm+sQ5obwh8W9tVOjmsCJTVecYiT9d8j86X5L4y9z8PLnsr6F5
9J7c+LOyoy/Wm1IyPtR/25DLv8oOTL0c89ySUP9tW248e7Oz6nV+Lr1WqP+2
PPf477LjRyTVea59qP+Wknu9x7J33l/y6wPN0k3f/lR23Q0bkzpuC/WF+Jx4
6OagdU+tNOsj/9vnXCvx0y9C5wyJf0OH1w60bRHqv22V+Fdknozr0ztddf5c
4j924O/o8+VC/bc5Ev+z2+/7pEdiqC+0VeKPmJnn59mdQ32h+hL/O1LnoHMd
ifct4ei8Pngef1E5DzpPDH6vv6F8LzovDMbpPypxovOG4HX5l8l1eftvX/nX
iw7oOz2om9/rE6bPmbFhuOlz8jlJfhfvvOOU/1H5HdF5ksS/S353dJ4n8SfI
OEHn1RL/FzKu0HmGxL9VxiE6z5P4y8q4Redfg+PcHy3jHJ3rSbzcF+g8IHgf
+bfJfeSd3132c9+hc8HgfeqfK/epdx59wV9T7mt0rhDMA/4dkge8/Yqf/AvM
eL4o8WdKnkFnPqtKXkJn4r8ueczbF7rsXyF5D53vkviTJE+i8ySJ/xfJq+hc
UeJfJ3kYnTsF87Yjb6NzUJ8cP3kenYmXugidg3XXTf86eY6g85Hgc8fPcwed
g/Hc8D8gzyl9Dgafa/4oea6hczr9TJOf5bnjlshzE30LSfyt5DlL3HxukOey
t19x058gz3F0PiTx35DnPjpXkPhzpE5A53iJ/5jUFej8QrAOcc9LHYLOvwXr
FjdT6hbtCwXrHEedg87ES12EzsH5kc99JXUUOkvd5ai70Dk4X8vrqNO885S8
roupN6SOci9IHYjOUne5S1I3al9I4n9P6kzi5vO41KXo/J3Ev1nqWHQeIPG3
lLoXnaXOdEWkTkbn+sG62i2Tuhqdg+OwiKsvdTg6y7xDfapmnuIGSp2v69cS
734Z/+gs8wi3XOYR6CzzDse8w9TP7mlTP8u8wGXIvAadZR7hasg8CJ2Jn3kT
+laU+MfIPAud+ewm8zJ0Jv7HZR6HzsQfkHkfOss80c2WeSI6y7xSfaroLPNo
d0HmoWbe7Zi3qh8jOM91LWWei87al5X8r3VdcB7tVsk82swHnZ0PEn9tmaej
M/H/0yE4r0dn4q8ufQB0Lijx75O+AfoulfirS5+BuPksLn0JdCb+htLHQOcC
wf6Mu1Qn9qeiDWJUZ/x090g/BJ3Tg/0TFyn9E9MvcuWk34LOLwT7My5Z+jPo
HLy/Il156eegM/HS/zH9DWf7G8Q/Q/pL6Ez806Qfhc7Ef176V6Zf5Oh3obP0
l9wl6Y+hr/SjXC/ppxk9A+jJ9dAHu2H4Jfl3M6Rfx3kuyP9f4uVO17sMl/M7
e37bXzV9V/Wh4T/j/+OTVH+ecI7HRwXHn4bvB46fSveRUufK+hG+Cjh+FXwA
cPwVrFvD8QOwzgpn/Zp1QTjrrbrvRTjrg6y7aP9P4medAM76C31tzVuiG3qq
n1T64eip+Uz6t+gJx9eHnnD1oYmecHxT6AnH54OecHwp6AnHR4GecNb9db1Z
OOvU6AlnXRU9db4o8aOn1t1yvegJ3+XVzVnddP+15Cev/zZKOesFui9bOD5J
3ZctHF+f7ssWjg9N92ULxzel+7LxVYlPAJ3h+FJ0X7ZwfBS6L1s46/66L1s4
69S6L1s466q6L1s464C6L1u4d90qylndvPsafOpb9u6D8KnP2bvfwae+U+9+
B5/6JL37HXzq6/Pud/AF8KF59zv4Avim0Fn9PuKT8e538AXwpXj3O/gC+Ci8
+x18Adb9vfsdfAHWqb37HXwB1lW9+x18gdpe3ZzVDZ21LyLrcegMZz1L34sh
HB+vvt9BOL5TdIbjk0RnOL4+dIbjQ0NnOL4pdIbj80FnOL4UdIbjo0BnOOv+
6AxnnRqd4Qu8ujmrGzpTj+AzR2c463foDMcXrX5c4fh40RmO7xSd4fgk0RmO
rw+ddR4gPjF0huObQmc4Ph/1bQjHl4LOcHwU6Axn3R+d4Y28ujmrGzpT37G/
AJ3hrLeiMxyfub43RDi+aHTWPor4ZNBZfeviU0JnuNcneWADHF8fOsPxoaEz
HN8UOsPx+aAzHF8KOsPxUaAzPNarm7O6ed8nkKHvE4BTLzcy+nN8E7OPnuNP
mt+F4/H5w7XPan4vjsevDuf4j83vyPH4ruEcX8n8vhyPfxjO8Snmd+d4+plw
jt9vxgPH4+eEc3ycGSccb/f1c/xBM344Hn8dnONnm3HF8fjE4Bxf3Yw3jsfv
BFe/pBmHHL/a7LPm+G1mfHI8/hM4x7cx4zbMeHN2vDFumc/Z/Ay3+Rn+ocnP
8JImP8OLmPwMf8fkZ/hJk5/hXU1+hp8x+Rne0+RnjdPkZ/VBmPwMn2jyM/x5
k5+tbvqeMpkfTzf1BrypqTfgU029Af/B1BvwNqbegJc29QZ8iKk34H+ZegM+
3NQb8LKm3oB3MfUG/EdTb8Bnm3oDPt/UG1Y373j2uSqmfoZPMPUzvLipn+F9
Tf0M/8bUz/Bmpn6G+039DM9n6md4A1M/w1ua+hl+wNTP8CRTP8PLm/oZXtfU
z1Y3dKZ/E23mg/D1Zj4IL2zmg/AjZj6o635mPgifYOaD8EwzH4Q3NfNB3T9h
5oPqUzDzQXi6mQ/CT5j5ILykmQ/Cq5r5oNXNmzci3FemvwFPMP0NeA3T34Bn
mf4G/GPT34BHmf4G/H3T34C3Mv0N+DDT34BHm/4GfKbpb8CzTX9D/XqmvwHf
a/obVjfTl3PsDzX9N+fu3H9z5+7cf3P17tx/c6l37r+5mnfuv7nX7tx/cw/f
uf/mFt65/6Z+ctN/U/+z6b+pX9f039Rfqv5L4fQt8fNp30/64fjP4PjQ8Etp
f1fWg/D3wL+X9Tj8KLo/TNZDD4v/AI6P4oKs4yqX9WjWTeGsn7LOB2e9j3Up
OOtTrEPAWU+hbw6nX43fjj4bvjv8YXB8YlXEDwTH15Qi/hU4PpwvxW8Bz5b1
etaDdZ+irAuzfglnHZP1NniMrLuxvqL9T1kn0vcaCGddA38Y/a61sj54TPxM
cHxZ+G/gg2R9HL+I9s3En8A6JXyTrLeyrgZnfZB1IDjrWaxbwFl/wR9GHwmf
GH4m+DJZ318m/hU4Phz5W/tRrP+yTqnrPLJeyboa/JCsrw3yvNfCF2A9CB8V
fRj8VNPENwPH/8M6KJz1UNbt4C1k/Y51JvUhynrTJvHf0Jeo5/GfRGi/gvU+
1qXgrE9xnzBPwbeDvxaOzxY/KLyJrM/iX1Qu6+P47eD47vCHwfGJ4WfS/Vgy
38QXAscfgo8Bjp+BdXc46++sE+t+XFkvJp/A8SGTT+Csx+EzZt6xVHTGF6s+
LFnXxscJx1eA7xCO/xCfHBy/HL4uOP4ufBtw/Bv4DNR3IH4D1sXhrI+TZ+C3
ZD2XPKM+Pll/JM8wL8CPim8Sjo+FPAPH77dF8ozuexYfF3kGji+CPANnHZ88
A2fdmTwDZ52UPEO9jZ8T3yG8l/igMiTPwPHLkU/go8U/QD6Bs97Nuiy8hazP
DpZ8Ql2Kv3G25BM4fjzWy+Gsm7O+C78o67xbJG+QJ/DvkR/gPWX9l3Vf+zw1
dYiun+b3Hq/rtqwH6/sqZJ3XrMM6cx5nz8N+CZ537PvARwjHT4jvTfftyX3K
/gqeO+wTYZ8AnP0O48XPB28g+vcX/xmc32uA531HPt1vwn4JOPsm8PfD8fmn
iV8Qju8Rfx68h4xP/GRwfGXsD+E5wj4X9mnA2a/BvgI49xc+eHhfuR83in8R
jg8Tv6Duk5b7HX8bnPyAHwuOL4t9LDy/2I/Dfgzd1y77Stg/ACe/4XfXfr7k
Q/zlcHzmc8R/CcdHit8Rju8Rfx4cnx5+Mjj5H/8QHB8U9xH9cPYZsc8EznOK
fRFw9nfg44ezHwHfvO4rlecmPm/9XnnO4peF02fG3wnH54mfD44vEf8cnDoB
vxQc3xf+Hn0PhNQhuh9EuHdfVaj/zz4s9hHB8dtMNf1//E7s04CzX4N9BXD2
F+CDh+OHx7dt+/P4X+H4YPFrwvFt4i+E4zPEDwfHFzfV9L25LvxGVgfyKs93
9qNl428Wjs+Z/KnvN5K6lPwJx4eGnxuOLxr/LhwfL/vceD6y3439WnD8b+wv
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
I/WG6fNonWb6PFp38bvDee/c/wOuniW9
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
q1puWereWbX9h6l7XtWEX6XWHtUzLs5yrvLdktS9uerMFal1A/Voa1Lrk+o3
v0ytZ6qeXJ5ac1D/+EWWF5S716bWMNXPbk2tSc6Bt6TWLWfD38H14ZnwN6m1
0+lww+C1oTWivac9WDBxr6m9MAJeBdfMuXb9NrX+OQPekLo+VP7anFo7naXa
JrUeOw3enlqTfAPelOUL5bJtqfXV17UvU2sX6o9WptY01DftSK2pvhlcd+tb
vKp1G1wnn8m36BK8T8+Grw3uO6SRzIzWsFSrdw3WFs6Jrn+1JucyT4/gnqUO
4x2C+xT1Md1Vf8DnMn5jcJ9ynmJCcO9zvvZ6cO9TO7qP25xzTfdOap1E/YX6
E/Up6imKBetXyh27U+uu8xg7JstNb+N/ZbwZ/BZcALsFfkd7KLWWoh7kr9T6
7Vz4z9R5U/n3ANYJXsh4GqznLMLvT60/L4D3pdal58NJlsuUc4vlXStrv5QN
1tPe1RqO7g1Uh7wdXTOpZuud7Rft2TuDNcmf8Hfpd+Cf8Y9H99ofKaZG9+BL
NXdwT/qLclEWz7V/50RrcJsZmxgdy77Qt42OR18p7kbriZ/CjYL1vc/1nqP7
VdW0V2VrQPG8VbC+9zX+hSxWfqlvG60PanxKtD74DXx/tL6v9/9SdExcozmi
Nc118ODgmlyxYnK0jrmesUuCtUfNPyRaZ9f7vyjLL9pfjYP1WD1LE+zZnOd/
JFrjej9YH1ccm8HPL2d91AbGmwVrs7qHNsFa5bf4ttgr8Hf41sGanp7l9OA4
r/c/KVp7XQu3CNZ1NeeDwZrDNnzzYH1YzzI4+ixBa+aj6LpTtWWt4Pyi71g9
ixuqPe6M1j0VT3pHa6Pa+9OitePv4T7RGqXiz93R5zGKS9OjdecftLeiNWs9
S9/osxzFk7uitU7FnP7R5zqKG/dGn/0otsyO1jQ3wRcE68wr8XWD4/kKxZDo
sx/FxqnRerHe4YxoffxHuF6wdq01dl/0OZPiz4PRZzzaXxOi86jW3vjovPgZ
XD9Y016FPzM4Ly/DVwvOm0vwVYJz5WL8ycE59AOtkWgtTtefHZx/P8afGpyj
P8SPjc67mv/ZaH1cz3hucO7+ROsrWhPX846J1vo0XhsbzjXLtW+i9UbNPzT6
vErx5+loLU7XNAjWafVc70f3tOpfKgbr+VqrFwb3+Kv1fNFnZootFwfr7dq/
o6N1Nt1/gbzPgZTfj8n7jEf1TJL3eZJirERvnSEp9qpf1j6owFia9/mT4u3+
aL1YddqR6HMmxfaj8z5PUt11VN7nRsrd6qPVz6mXfydaY1KvelvwuclWrZdo
HVjf5Z9oLUb13q3B5y9b8Muj9RT1RB9Hay7qv2LeZ2DKIyHvcyzliIJ5n3Wp
hjkQrXmpbjwYraMpfy2N1lbUo5XOu0dVrXts3jWc6pzF0bqPesZSefelqmmL
5q0vqKYqmXefrFp0SbQ2pF6ySN79sGqwUdEauNbhu9F6nzSBE/PWDlRz/h19
lqaa83C0Rq/c+m+03qf6p3ze+otq10J56zuqzcrk3W+rxi6cd+2oGrVc3v28
6u2yeffwqodHRmvsWv+zos9jNgbrG1tz1iM6B58xaW+OiNb/pYMtitb+pBUs
iD4bUxwbF12Pak1+EK1zqQfvFnxmpPhwTfAZmWJOx+AaQHlfGqzWidaLcrly
unSkZdE6l3rq16PPqLQeRgTrBupHOgWfWynW3YC9lXMuuz74XEzPNTD6LFl5
f1702Z7y4NzoMy3lzQHR59DK78Oiz49VAwyPPu9QXn4r+rxNOfe64PpZNU/T
4HM6xfk3os8CtbavCK5tVNP+HyMu6Uw=
          "]], Polygon3DBox[CompressedData["
1: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
YpalZ9O7yWFmXXq2O/r3azan57uxH39/n57sql4P+P4dj6t7Pe/7v6FGD5nZ
WK9vrNFr/kZ/qx7uyl5fmF19xOfnpD+A4x5cH5dze3p/G/+8P21557JrRE6R
o5tkRLv37/+mfn75vuXoi/v67XyVky/q9YpcLf/d2Y+HfK/nusZa08SL6WkH
9/NJflyH6yOAxwHf0T/jAiXP4LMf3sWv7wweTW4Hr6tXkCpqMqMze31k9mdm
dFavjzbq9dbZvR6Se+X4C3s9JvebKZ3U62P1mXrt5F6/yO16eLMsMxG9vZnA
ib0+NCu4uUZPW+Ot9ZKd2ZsZgLXKGmJWZ6ZgbdlczgNPBX7Ud1ujDcyg1Ivn
0I6gfwLnFuLaiTVeRk8j35xW866G7fn69BqvMKDns1Nr/E7X8/HJNf6q6fn6
pBo/9ncT/jylxo+1PT9fUaMHzZj0R47J8E0yYsdqlS61zRo3Eb9thS556SN6
FvCKXfLYR8HjD5M1PUnJmnatn1Gjz0bp+Xz5LmvbNT4O998MvqXEM23ru+2S
D99fki9eVTOfzbD0z85Z58oEbebybTVz2cxOv3BtjT8xM1SvXwdeoEnGqR95
uc1Y/AXe0bla42/M5PQn5uPm4tYMa8fVNfreDE+9fwt4+SaZoP5HDzmE/htN
vKWe76EST6gXlNNGLMn4Hus5cKYSDpQbb+31+bIl/ub2mnzAzFI/dkcNd5k5
6tcGq0macJrcdn2NPzITVj+3/fuYrs3aubNm7ehx1f8rd9kfeBw84TDJxO8p
ydjNyh1Dx9LM+piaTEk/qN7XH5mpma3pD80O9U/6ATWcWs6M0LzA/ED/aEZn
VmfNmaQmA9uqX99T12RCZkNy1Jw1mZvZmxp3yhp/aD5jTbG2qJmXLNHMamk1
+cI936vVn+35X478tdeoS5TURLWrmn0Z8CqukRpNvnSJR1CrmzEtVeIRzJ7U
g46NY6SXMrM0u1RzT16TaZptqskG1WRgZmFq5ulr9gzOKMnE3EvQYyxYUhP1
HmZkR5b4X7MzNfu/SjyJWv71kj0hNYhaxIzTvOugJn55XMbr4ZI1eVRNxmnW
qYaftiYf85x98y33PC4vyXjdCzGjNKvUI8xek/mZ/ek5Zq3J/Mz+9Agz12R+
Zn96iBlrMjeztwPB09R4LPcLFm3ivfQQ65V4Er2Fa27GkjXtWpRD5BI55Oga
TzZ3iabSq43bZm47x80CvuSeT+h/Svu6Rk+e0+bcV+ATfAdN9rC+qalB1qKP
aV/U+Gv9vfmBftoM2PxBv6/fvonrHzbZg/u8RiOtUZJBqp2ua+NvhvTf7xpy
LcmRx9X4oQf79S8fyHFynfpFfySHyqX6o+NrMvh7S/bAzOblPLlPjnSvZQLw
YyVr9tiajP++Eo40+9cDrFniMfUGarzVSjya2k9NuHqJ51Qr6vnM7vUEekE9
nXtFmzXxenpAs3s1ld5Qz7BiiQfWSzjGrltzdcdej7xQiQbUO5uRm5WrSSeq
8axm+3oSvawe1PzSPFZvasZv1q9GHa/G865Q4sH1wmq6lUo8tlpPTyM3ypF6
HT3vWiV+TS+sJ9a/bdzEK+up5yrR4N/0Gsg8eOsm2sj8c51eX6g3VurCfb5z
373j7Z7oe/14nVnjLwaW+IenarhPDjQbebrGf5qJmY09WcOdcqjZ2gs12ZQZ
ln71mZpsxczF7OX5mrnpHFU/D6nJqsy09LuP1PhdM2mz6YdruFGONMu2plvb
1QB6sWW6cLtzzLl2ZU3e4x6T+bdz6h3w5W0/12r8shmyWfLjNf7dDNksWY2h
1lBD6AUfrMlnzMTNxh+t8edm6GbpS3fxetYYa40aR65Yq432ebYmzzFjMmsa
ra9X8/Za0IxXf6gH0guZ8UxW4hfNfu6tycfNrM2uzXymKMnszILuqalF1iSz
7Ptq8lUzerP6u2vmgnPCPPyumrnpHDVrv78mbzXzNvt+qH9+M3+z/wdq8lcz
Y7Pjl8CnN8kczTvUbGo3NZre20x6opI9AbPq52q0nxmm+ZaZ+AQlmbVZuZn5
hCV7FmbpeuaXmnCe3PdPDVfKuXKvHPQu+Io23DRsl1ppTbO2jdiltrjGXGvD
dKmN1lRr60hd1p5r3rU/Whfuk2PkmtG7cI1rzrU3oAs3uEZdq531q0nNtfaO
xfHLJhx8Nc80XJfaas219qp5lu3r8fc93y/T12Prx7f8noFN9gD0n7/W+GUz
Cv30GF3WvmvetT9yF66QI+SK4bt8l99p7TcjmbIkozY7GdiFG+V4uX7ULtwp
Z8qdo1i/mnCq3Pon/39B8Jwl/vqvmnxDjpFrSpfaLifKjW0XblSjqFX+ruEi
a5y1To2uVlejm7VYA9+if2lfG9Vgb4Mva6PNzDQmL8nUzTqsKWZvF7apNbWL
FlIDqYWe4vhVk/ronFFP+C4H9vVNT6A30HOYteg59B7ut6g3/qjJM8xI9Ptq
jDfBl7TRHr/XaFkzGf2/HClXXtmm1rkHNH7JHoZ7Q09w/YgmewDuBbwFvqzJ
Hph7YR/XeEk9pVnERTVrXQ6QC/Q8eh/1tPpcT6G30BOZHX1U4yXMSMxKLq/J
csx03D95sWYvwD0A88Dzataaz+iz6tH0W9+UeLfXuH5+k0zbvNkxd+wdc7OW
68CXga8Dr8+9F9eMjRwlV51Vk0ePXpJPfQJ+qEmGYZah5/Gzh7bxQu/X7C25
p2c++AH4liZ7TuZ/+mv3Ns38VqX/Xk1WYGZgvuj/8H9Zo8zGzq/hDjlFbtHf
6Ef04Pq7c2vGxj0499ts9gc12U9zT2/Mkt/gXp81z9qnpzNLu7DGT8lpctuH
NdmBGYJZ16s1eah7Fu5dXFqz9uRoufoy2ukl73iFmv0898cmbZI9vVOThw7d
Q+DeC2q4U06UG9+oyVPdA3Ev5JIa7neNuFaW7aKt1Exqp7Nr3p2/yd+2Qs+/
W7R5lvX78d6tH9t3+/EZumfh84JnbMIhcsnLNdmBGYL59ds1WcnQPR3wKzX5
sXsk5tGv12QTZhTu7bxZk++6Z+Pezf8BPFO3Qw==
          "]], 
         Polygon3DBox[CompressedData["
1:eJwt12fYFNUVAOBldwGpIggoKBaKSg2gIF2pkSo9oSZUQzVUI02liAKiAkKU
YlRKVDQJClgokao0oxQbkKCACoKiKEjLe57hx3nuPe+c2W935s65893Ua2i7
IelUKvW+yCkqZlKpCqJ0NpVq4cCTxrXyhuZHza83LyWKmNdk/XOkUkOddyW7
mtVmA9ifxBT5Kn4ju1t+j7oz5pVZJVHG8Zbyp4y75J3MR6t7SF19+U7RkY1i
E1g9+SeiL5vCZrJW8nKirLjJ5zRzbIaxqKhjPlDdMHWFHS/O6rHBbAS7mhVj
ddkgNpwVYdeJkhGO3e3Yo8YS4i7z+9WNVlfc8fysMuvB+sb1Y78RVeL7ONbK
saeNBUU1817qBqjL5/hb4mbWiLVgv5oXUFfF2JP1Y7nUXMsasKFsFCvG8rAK
rCvrIibK84qKrJu8t7qMusKsBuvHhrCC7BpWnw1hI1lRtjquHWvImrOz5lep
u8PYlw1mBdQUYrezPmwQy8/Ki9vitzjW3LGZxnyiknl3dX3UZR2/klVnvdlA
lpetySTX94hj15qXEJXNY0EuVLdEXSf2vmjDfozvZF5DbMok6/NkNllLsaYy
5jewNs7t5Nyf4xz+i/wWUYXtZKfYz/JyojLbxbLOLW1sz7qy8+abM8n6/D6b
3NO4txszye88kU2ek3heNmSSdXec3WJ+q9iSSe7/D6yqeTVxLq4Da+BvNPU3
jphXdXyk8Rk2V1yIa6yuurglm/zu2cZbxb3mD6mZ6tw7HU+zUqw168hOm5+P
59DYmLVk35lfjHVubMpasxPmx+K3mL/LXo3vLl9rLMheNr4i2mXj5nkezFvG
OhXj5eVFz7jX8Z2VNHNujugNrBXrwH4yv439zjiVPSqek69X25h9Y35TrBuR
y7ws66imu3MvmOdkZYwdWDd2zrwC+0P0JDaPNY2+xGaxN9ibomDO5FrHNS/n
WGvHZhnXyRuZfx1rJHqS2Cf6sMnOe8LntZR/LLqz8dG/WGP5HtGLTWTTWXP5
XtGbTWIzWAv5R6IbG8cms0by/4iubCybxBpG34v+Gt/Bd2nq2HTjB/K25sPU
jVFXK9YW759O1kWsj8XybbwdGy4fq662/EPRhY2JXsDulm8X7dkINo7Vke8Q
HdjIuI+sbvRhn3kfm8cWsdaxztn97Hm2jHVm/xZN2LfZ5LvHb6hlPoktjmdV
5HTtt2aSa34qm6zhWMs/iYvxrIlKsV9kk3U/Kp2cF+cvjx4pRrOl8tf83e7O
ey+TXKNj2aTHR6/fLXqwCbGu1DWJnuv4ULaILWUd2a+iIKvPmrDD5qfZpegF
ogbby6o79wHjMvY666HmgijKmrBW7Lj539gPscZEidgz00nPit51XTbZI6ca
/yt/0Pw5dS+q+2P0Of4kW8+2stHsLjaTrWNb2Cj2PzGGzWcvsV6Z5DnqzB5g
fxGn5Yf4WLYgrp+63vLvxQl5HpFXvKPuABsePUS+QF1X+UExgs1hC1k3eQO1
T7C1bDMbyeqzGWwN28SGxxply9gn7CCbweqx6emkl0RPGcGWiywrG/ecfRHP
LftMfi72J7GCvRy9w3gzL88+jWeUPWt8h21gD8v3i2HxLLP5rIv81ej5rAyr
yD5PJ9fgpPwGUSr2Zd9tNjtgnhG51a2KfssOyfPFtWJvs7MsfzpZo7FWN0Yv
FuPY8ugv6vqqqcumstVsHRvC7mQPs3+yt9h9rCZ7iP2DrWb92VdiInsp1jwb
GM+VurlsC9vJxmWSPb58Oum50Xt3X+7FJVldeT2xTT4n7mc8e+IKJatjP2XT
jK+yN9iwy72kXzrpw9GPz8iP8qfZCvm76h6MHhmfyTax7WwM+5e4ilVjtdk3
0W9ZEePtrC47Zn6YPR57B1vB/iz/UjzCXox9hg2IZyjWqvzG2JfZFsc/YwOj
F7LZrJ38czGIzWBzWHt5Dd9vAnudrWL9Lu8Bs9nGWC/h8R4qprCV8jXqBqn7
VAxg09gs1lZ+r7qlbB87wKazNmwJ28v2s2nsCzGYPRG9mHWQ11H3KFvF1rLB
l3vi5HSyF8WetCKbrKsC6eSexb0bnU164oXLazTW6jr2CkurKy2v4PM+M/8r
Oyy/ShRga9iz7Ii8SI5kv459exE7Ls+KYmxT9PRYb/IrRf7Y69kZlttYkzVg
B81/iT3YWIPVZ/vj2Yt9wNiW/Z5dIb8i3m9YZ9aTXTLPzcoZO7Ee7GLsG2q/
k+cSxdnm2CPY6fhu8ZvZjngGYm+QXy2uZ9tjnbAf5YXFdWxbOtmrY88ulU3e
HR7PJv+DxP8i12eTff0x48/ynOZ3xPPh3APp5P0i3jNuyCb71zTjfPk3ai7G
+754j78dfdbYnLdnafmb0dtZbdaInTJ/gZ2SFxIl2Qfp5P+eWunkXTzeyQ/G
e6oYz16Tr1TXx3krRQlWhzVmP5q3VPdCOlm3sX6vsYc2Z4vYLvk+dZOdt1Ac
k6dFUbbR8ZPsaFzjWENsPWvq3HnGrWwXG6+mMXuGbWY72NhM8ndfZB+zj6Jn
yZvFtWHbo9+oe0RdK/YS280+Z4+xWdGP5TniHrOVjrdWt9i4h33BHlezNPbg
uE6iDPvY8b+z83G/RTm2hz0dz5f8Uir5H/RN9lQ8/+xC0vZSb0RvZYWMVXkt
9nX0AZbXWIHdzr6MPZF9K0/F2jJsiD7qQ543fsg+YVPUvCuqsnasC8sjnxs9
K5612BvYO9G/WT5jRXYH+8r8tz5vgXEH28MmqlkizspLiNLso7j/0cuN5Vl1
dijeM9i5WN+iLNsdPZgVjncRVod9a36Pv7HQuJPtZZPi3UUUZ81YG3bS/P9Y
itd+
          "]]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0rsrRnEYwPHjfr8lpYj8AWxkYJSBSTKwkYGBkoHRIDYbfwEriV2xufO6
35Pktrhf4/Mrw/f9PPX+Ouc5nVPW3tvUExdF0bBeFeZHXWo2PopyucBSrrOC
p6zlAxv5zTZmJERRN4tYrEFzNUdZzwm2cIqdnGc/l8K1eM13betZ91q2UIwr
3OEqd7nGvbAT97nBA27ykFvc1pE5xmPu8IS7POUez7jPc057jht+6EIvYS+N
2W2LQ1xkH+fYwUk2c5x1HGEVKzVgLmQX09jKT/do4B1reMzy8Fws4a1zV3xT
jp7CWRXYMZv5zGIeM8MZZjCL6eEdMI2pTFGqOSnMTGByeMdM4q8S9RP+05es
Ec34uf3/Hv4AxpdK8A==
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{690, 1001, 473, 689, 1107, 912, 691, 1108, 913, 692, 1109, 
       914, 693, 1110, 915, 694, 1111, 916, 695, 1112, 917, 696, 1113, 481, 
       697, 1114, 918, 698, 1115, 919, 699, 1116, 920, 700, 1117, 921, 701, 
       1118, 922, 702, 1106, 1119, 923, 1002}], 
      Line3DBox[{704, 1007, 1210, 703, 488, 705, 1120, 924, 706, 1121, 925, 
       707, 1122, 926, 708, 1123, 927, 709, 1124, 928, 710, 1125, 1008, 1211, 
       711, 1009, 1212, 712, 1126, 929, 713, 1127, 930, 714, 1128, 931, 715, 
       1129, 932, 716, 1130, 933, 717}], 
      Line3DBox[{719, 1010, 1213, 718, 1011, 1214, 720, 504, 721, 1131, 934, 
       722, 1132, 935, 723, 1133, 936, 724, 1134, 937, 725, 1135, 1012, 1215, 
       726, 1013, 1216, 727, 512, 728, 1136, 938, 729, 1137, 939, 730, 1138, 
       940, 731, 1139, 941, 732}], 
      Line3DBox[{734, 1014, 1217, 733, 1015, 1218, 735, 1016, 1219, 736, 520, 
       737, 1140, 942, 738, 1141, 943, 739, 1142, 944, 740, 1143, 1017, 1220, 
       741, 1018, 1221, 742, 1019, 1222, 743, 1144, 945, 744, 1145, 946, 745, 
       1146, 947, 746, 1147, 948, 747}], 
      Line3DBox[{749, 1020, 1223, 748, 1021, 1224, 750, 1022, 1225, 751, 1023,
        1226, 752, 536, 753, 1148, 949, 754, 1149, 950, 755, 1150, 1024, 1227,
        756, 1025, 1228, 757, 1026, 1229, 758, 1027, 1230, 759, 1151, 951, 
       760, 1152, 952, 761, 1153, 953, 762}], 
      Line3DBox[{764, 1028, 1231, 763, 1029, 1232, 765, 1030, 1233, 766, 1031,
        1234, 767, 1032, 1235, 768, 552, 769, 1154, 954, 770, 1155, 1033, 
       1236, 771, 1034, 1237, 772, 1035, 1238, 773, 1036, 1239, 774, 1037, 
       1240, 775, 1156, 955, 776, 1157, 956, 777}], 
      Line3DBox[{779, 1038, 1241, 778, 1039, 1242, 780, 1040, 1243, 781, 1041,
        1244, 782, 1042, 1245, 783, 1043, 1246, 784, 568, 785, 1158, 1044, 
       1247, 786, 1045, 1248, 787, 1046, 1249, 788, 1047, 1250, 789, 1048, 
       1251, 790, 1049, 1252, 791, 1050, 1253, 792}], 
      Line3DBox[{796, 1159, 957, 794, 1160, 958, 798, 1161, 959, 800, 1162, 
       960, 802, 1163, 961, 804, 1164, 962, 806, 1165, 963, 808, 1166, 585, 
       810, 1167, 964, 812, 1168, 965, 814, 1169, 966, 816, 1170, 967, 818, 
       1171, 968, 820, 1172, 969, 822}], 
      Line3DBox[{821, 1267, 1063, 819, 1266, 1062, 817, 1265, 1061, 815, 1264,
        1060, 813, 1263, 1059, 811, 1262, 1058, 809, 1261, 584, 807, 1260, 
       1057, 805, 1259, 1056, 803, 1258, 1055, 801, 1257, 1054, 799, 1256, 
       1053, 797, 1255, 1052, 793, 1254, 1051, 795}], 
      Line3DBox[{824, 1064, 1268, 823, 1173, 970, 825, 1174, 971, 826, 1175, 
       972, 827, 1176, 973, 828, 1177, 974, 829, 1178, 975, 830, 1179, 1065, 
       1269, 831, 601, 832, 1180, 976, 833, 1181, 977, 834, 1182, 978, 835, 
       1183, 979, 836, 1184, 980, 837}], 
      Line3DBox[{839, 1066, 1270, 838, 1067, 1271, 840, 609, 841, 1185, 981, 
       842, 1186, 982, 843, 1187, 983, 844, 1188, 984, 845, 1189, 1068, 1272, 
       846, 1069, 1273, 847, 617, 848, 1190, 985, 849, 1191, 986, 850, 1192, 
       987, 851, 1193, 988, 852}], 
      Line3DBox[{854, 1070, 1274, 853, 1071, 1275, 855, 1072, 1276, 856, 625, 
       857, 1194, 989, 858, 1195, 990, 859, 1196, 991, 860, 1197, 1073, 1277, 
       861, 1074, 1278, 862, 1075, 1279, 863, 633, 864, 1198, 992, 865, 1199, 
       993, 866, 1200, 994, 867}], 
      Line3DBox[{869, 1076, 1280, 868, 1077, 1281, 870, 1078, 1282, 871, 1079,
        1283, 872, 1080, 1284, 873, 1201, 995, 874, 1202, 996, 875, 1203, 
       1081, 1285, 876, 1082, 1286, 877, 1083, 1287, 878, 1084, 1288, 879, 
       649, 880, 1204, 997, 881, 1205, 998, 882}], 
      Line3DBox[{884, 1085, 1289, 883, 1086, 1290, 885, 1087, 1291, 886, 1088,
        1292, 887, 1089, 1293, 888, 657, 889, 1206, 999, 890, 1207, 1090, 
       1294, 891, 1091, 1295, 892, 1092, 1296, 893, 1093, 1297, 894, 1094, 
       1298, 895, 665, 896, 1208, 1000, 897}], 
      Line3DBox[{911, 1006, 685, 910, 1309, 1105, 909, 1308, 1104, 908, 1307, 
       1103, 907, 1306, 1102, 906, 1305, 1101, 905, 1304, 1100, 1209, 904, 
       673, 903, 1303, 1099, 902, 1302, 1098, 901, 1301, 1097, 900, 1300, 
       1096, 899, 1299, 1095, 898, 1310, 1004, 1003, 1005}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{251, 474, 1107, 252, 488, 280, 1214, 503, 295, 1218, 518, 
       310, 1224, 533, 325, 1232, 548, 340, 1242, 563, 355, 1255, 578, 1160, 
       370, 593, 1173, 385, 1271, 608, 400, 1275, 623, 415, 1281, 638, 430, 
       1290, 653, 445, 1299, 668, 460}], 
      Line3DBox[{253, 475, 1108, 254, 489, 1120, 281, 504, 296, 1219, 519, 
       311, 1225, 534, 326, 1233, 549, 341, 1243, 564, 356, 1256, 579, 1161, 
       371, 594, 1174, 386, 609, 401, 1276, 624, 416, 1282, 639, 431, 1291, 
       654, 446, 1300, 669, 461}], 
      Line3DBox[{255, 476, 1109, 256, 490, 1121, 282, 505, 1131, 297, 520, 
       312, 1226, 535, 327, 1234, 550, 342, 1244, 565, 357, 1257, 580, 1162, 
       372, 595, 1175, 387, 610, 1185, 402, 625, 417, 1283, 640, 432, 1292, 
       655, 447, 1301, 670, 462}], 
      Line3DBox[{257, 477, 1110, 258, 491, 1122, 283, 506, 1132, 298, 521, 
       1140, 313, 536, 328, 1235, 551, 343, 1245, 566, 358, 1258, 581, 1163, 
       373, 596, 1176, 388, 611, 1186, 403, 626, 1194, 418, 1284, 641, 433, 
       1293, 656, 448, 1302, 671, 463}], 
      Line3DBox[{259, 478, 1111, 260, 492, 1123, 284, 507, 1133, 299, 522, 
       1141, 314, 537, 1148, 329, 552, 344, 1246, 567, 359, 1259, 582, 1164, 
       374, 597, 1177, 389, 612, 1187, 404, 627, 1195, 419, 642, 1201, 434, 
       657, 449, 1303, 672, 464}], 
      Line3DBox[{261, 479, 1112, 262, 493, 1124, 285, 508, 1134, 300, 523, 
       1142, 315, 538, 1149, 330, 553, 1154, 345, 568, 360, 1260, 583, 1165, 
       375, 598, 1178, 390, 613, 1188, 405, 628, 1196, 420, 643, 1202, 435, 
       658, 1206, 450, 673, 465}], 
      Line3DBox[{263, 480, 1113, 265, 494, 1125, 286, 509, 1135, 301, 524, 
       1143, 316, 539, 1150, 331, 554, 1155, 346, 569, 1158, 361, 584, 1166, 
       376, 599, 1179, 391, 614, 1189, 406, 629, 1197, 421, 644, 1203, 436, 
       659, 1207, 451, 674, 1209, 466}], 
      Line3DBox[{267, 482, 1114, 268, 1212, 496, 288, 1216, 511, 303, 1221, 
       526, 318, 1228, 541, 333, 1237, 556, 348, 1248, 571, 363, 1262, 586, 
       1167, 378, 601, 393, 1273, 616, 408, 1278, 631, 423, 1286, 646, 438, 
       1295, 661, 453, 1305, 676, 468}], 
      Line3DBox[{269, 483, 1115, 270, 497, 1126, 289, 512, 304, 1222, 527, 
       319, 1229, 542, 334, 1238, 557, 349, 1249, 572, 364, 1263, 587, 1168, 
       379, 602, 1180, 394, 617, 409, 1279, 632, 424, 1287, 647, 439, 1296, 
       662, 454, 1306, 677, 469}], 
      Line3DBox[{271, 484, 1116, 272, 498, 1127, 290, 513, 1136, 305, 528, 
       1144, 320, 1230, 543, 335, 1239, 558, 350, 1250, 573, 365, 1264, 588, 
       1169, 380, 603, 1181, 395, 618, 1190, 410, 633, 425, 1288, 648, 440, 
       1297, 663, 455, 1307, 678, 470}], 
      Line3DBox[{273, 485, 1117, 274, 499, 1128, 291, 514, 1137, 306, 529, 
       1145, 321, 544, 1151, 336, 1240, 559, 351, 1251, 574, 366, 1265, 589, 
       1170, 381, 604, 1182, 396, 619, 1191, 411, 634, 1198, 426, 649, 441, 
       1298, 664, 456, 1308, 679, 471}], 
      Line3DBox[{275, 486, 1118, 276, 500, 1129, 292, 515, 1138, 307, 530, 
       1146, 322, 545, 1152, 337, 560, 1156, 352, 1252, 575, 367, 1266, 590, 
       1171, 382, 605, 1183, 397, 620, 1192, 412, 635, 1199, 427, 650, 1204, 
       442, 665, 457, 1309, 680, 472}], 
      Line3DBox[{277, 682, 683, 1119, 278, 501, 1130, 293, 516, 1139, 308, 
       531, 1147, 323, 546, 1153, 338, 561, 1157, 353, 1253, 576, 368, 1267, 
       591, 1172, 383, 606, 1184, 398, 621, 1193, 413, 636, 1200, 428, 651, 
       1205, 443, 666, 1208, 458, 685, 686, 687}], 
      Line3DBox[{459, 667, 1310, 684, 444, 652, 1289, 429, 637, 1280, 414, 
       622, 1274, 399, 607, 1270, 384, 592, 1268, 369, 1159, 577, 1254, 354, 
       562, 1241, 339, 547, 1231, 324, 532, 1223, 309, 517, 1217, 294, 502, 
       1213, 279, 487, 1210, 250, 473, 681, 688}], 
      Line3DBox[{467, 675, 1304, 452, 660, 1294, 437, 645, 1285, 422, 630, 
       1277, 407, 615, 1272, 392, 600, 1269, 377, 585, 1261, 362, 570, 1247, 
       347, 555, 1236, 332, 540, 1227, 317, 525, 1220, 302, 510, 1215, 287, 
       495, 1211, 266, 481, 264}]}, {}, {}}},
   VertexNormals->CompressedData["
1:eJxtXHdcz9/3TwOVqBTRQBmRkKIiXTILDVkNlQaipYhUKqW9tElCySwZ2bpF
pdCQ7BINM3tWxu+O9/H7/Hr8vv+8Hu739bnvc8/r3HOe55znaYSj5xIXYSEh
IRUxISER8iwJtO6y1BiL4akgq9Px9+8HJHLP/4nIeT3cqD4oIuyeATZf1niI
rufGbExqL5uDO84a3js8cDGuu36r5A9ZNxdVNl0etBinpy2K3FBrhSMjTGN/
kfVbr0Z6TTO2wEMSVhqUjXPGFROstv0k676t8zuWnTXDt4/FzL11dQMOlbT9
85ms67ltFnugNRvXyk6fvPeWF76THCH8nqwL8f8FtxZcjcMvNmLZloM/35L1
ae7sfbRsvocWfT8olb+fJuP/g+yPtAX735Xg+0+e4OpG5EEbBPIsmMjl6ap/
bUTkR2E3gyKo/MsjufyHq/yjyHnRDcVDd+l555Tx87r2PXmT6AdJjuX6CRPo
JzPQ+jHRI2oQ6HOyQJ+gR9Ar6POL4sDfs80XYXhO/6ThSff/8ufPzAG3VmAJ
xdjQuXG2GCWd2NNF5VFTdV7X7oDfu65JVlrpim8kXwv+RNZfDy++EFrthNe5
D7wWWu2DvQLf2z6n+hQ5sKZL3RHnyOw9sWWGP96+2mzrbbKubyAzbtLvZfje
m2cKbYHBOHNLivKl/+h5q1qX5YvkEFzsMrz0NFlv3SkjQd5Hx9/x9xUD+fsz
+f6o5/5X1wkXEXnQJhvh6/+VZ9yqZdZEfvTCeE4qld8vncs/uPbWFHJe1K7E
z2uZws87NjX6FdELOtr18Q/Vz9zPXD/jv7c4EX2iNQJ91gn0CXYJdgr2CXoE
vYI+63VM7iz6sxbD034/t58XG7PVS8U34gCXb15aizbjt1qnQu6Q9X1910SL
//TB2smTfvTJDca7Xe4+PEDW14a+VGoz88YidiZqTa3h+NkA2X7ryLrx7QXn
9cevwb5TUiYsOB+Dx7S9m633Hz1HO16Z4Bsdh3Xz8+tHkfWoUvY+WvXo9ET6
fm4Df/+cpOlgsj+asJbvf0qJ7y+x5Fg4kQe5/XTvpPLMt+XynI/MHkHkRzMt
drtT+cuNufy4/+AKck4kGaZRR8+beZSft+nKKHeiH5Rv8gxR/fikc/0ov91Y
SPSJhOK4Pl+Vc33CPYd7D/cd7BLsFOwT9Ah6BX2++JHTitB2DE+Ndc8OxpF1
lbpI5W0XQ3Cut8yYnwcisFos18/y5gkv2mYG4z4/bnxum5mI980VLi368wF9
GLxWQrLAB4940NVXsiAZj2r5ssn5z//q+dGrN4evdqZgHaE3XfPJev/va+j7
6Ij4agn6vsxx/r6SeuVbsj9628z3H67A9/dbUj2EyIPKXs8ZSeVZWMPl8a+e
8YTIjd7I5zL5OyK4/MMM1jiS86KvJfWj6HkP2fHzhisKBRL9IDFNrp/QQ1w/
n/ctWkf0iYwkuD5/xXF9gt8EPwr+E+453Hu4X2CXYKdgn6BH0CvoU0x2wbiZ
p2MwPNO+a7kFk/NWCL0QO+8ShUOLxUyM+yVjz2H6j7/8/oCO7BkXtbpkO9bL
G6psLJ2Oj3/r21L4+3/1LHXc8PCA1AycJd+VnUPWh87UoO+j4OP2Q+j7lQfE
2ft3+P6o5/4fI60ViRyos4zLY1Y+mcmzy1l2CJEflWSy74D3Lilg8hfKTH9P
zovUdPl51Qr5edvOTTlN9IN09bl+zuVy/RTfiVEj+kQGn7g+1xhyfUIcgrgE
8Qj8GvhR8G9wz+Hew30HuwQ7BfuEc4Je4bz7uybX5WzZheEp7fruVBZZr6/8
tihn9E7sZ/d0Xs7oVGw0W/Vi3X/0/Oavu5FVTBp+vVr8lMiff++jnu+nPc+8
SfZFIsvqLtL9j037xPZ/g0zmEXnQ/gAFmf/KczST2n8iymVP4t+6ufxyIzsH
kfOinLazMvS8gef4ecu6RqYT/aAz47l+Uo9x/dzW/axG9IkshRYwfR5S5/qE
uA5xHuI7xCGISxCPwG+CHwX/Cfcc7j3cd7BLsFOwT9AL6BX0k92nY7h0VhSG
55EnJz6f/4/f2DNlZcDyxTH4a3BXzlwaf9PfC5H30G6zd+x9q80F7H057Xmz
yP6otuOHAd1/5CM1tr+04yF5Ig8a7qVlTOUpmy3J5Ok+nCpE5Ef6rVz+g+O/
MfmrW8SGk/Mi+ZXG7Lyt+e/ZeeWurJQk+kG76lkcxqc6uH4KhfsqE32it+Fc
n5YlXJ+Ak+AcgJcgrsM6xHeIQ7AO8Qj8JqyD/4R7Dutw38EuYR3sE/QI66BP
+Pf/fX5ESb2X7yXvI63bP8l7Awz58wOqie+9gOz/77+LcunL9q+4FppD5Pm3
3q+ay9PQuDObyP9v3dvhLZN/X/yAYeS8/9bLU7g/idkvOZfo59969yuun76H
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
6XkNJO/XjnXCiYedP7aODMHiYVU3Csn661J7mTjiByTfnVbyG7YDG+8cs/EE
WXcW1N8Ce9RdfR5InT9L/O2ML9d+PvWOxvNqNKYtpPfi7+ryIF0PZL7c3nO1
yU7sG+G0LpisH9o+Qdqt3BM1Cqn3GyIahNN1VIeeJesR0honQz+uR0bxz4c/
id2Er/Xrnk39wx/1vOHF8U6obNjyOx7312FfWxvHj2T9md/sm3u7V6ITXa2d
521tcKnvuBxqzxX3OhwL1y1Cn5dcnPzQbiFudP+8jeo5QunXnXPya/F7Ienb
5U12eJv//i9Un0eMtkV0l27EMU6WvftEuuHKrtVJzVTPWelbZ6zdguHZ3P0s
kuYvxaONC9YabsNW8kPfShO9Fe5KCooh6zUftlYVH9+K/YvlLxukh+MzBp9W
UZxjMXnr3M2HvbF+7c5h33vF4LrXK1u1yfpqczH7cySuBdVVb2rYHodXyqXu
HU7W0wX1t7gedU7VMcNCFhH8IBwrN/kryWN2rjB7HUJwgnqDt2zbaH8UL7u3
cqJZAj5QXXCvkayH2NkPrhcLRM9OXNQ8ZR2BJ5lc+G1E9ulWdR2Sp+iHTjnM
OXP0ehA+fWNa1G6y7tCgHnX8oDda0LIpb/4ZH/x8Upk4tZ90zdQ7JUvXIYu9
K+oG6q3Btu3TxT+Q9Wtzx0yJnmKL4o1OXT94dDmed+NQC9W/iPDwQDNVb7y3
MOR2DXLEl+YsM3xB/cCYdbPlRwTgjq6tp84P2ojNPxktpPFUt/KbTNz1HVgu
X2VJfEwAbptj0W8zWc/L15r/e91ODM+01oCbQ8n67SfTZRX3hGGJUp2lwf3j
8LQs1VvXyHlzdiHDK32D8f6dqm3Xvu7CX8+KzA0k62fr5IOJ3rD4ha3f3puk
4DFvRA5YUD6woP72pEedM/LDygk2BA/PvBWTFVCdhg9suF10k+Be7XUNS2R3
7ESf3rWmlOgk428SHzcokve9S4XCytZGoMPF09SUguMw/tjonUXWY+tmvb2c
H4ai9Z58JE8sbp48cRyNvypKOxIcg9BrS5f2WOdteKRNRXsaWc8uPWQX3rEJ
XSz/ZSiywwMv6hJSoP6nQePpro2n16HWIe6j912yx8nKAVHUT+7+/CTfV8EP
J77p9dLzpwMet2SxWgNZn+1SdzIzNxS/bnjYmT3FC2/R66ucQP3hxLeWJ+Oj
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
X4k94/dLuD0bznz9kM63iCnKjSL2j4UPcvtfcaM8i9wX3DmF3Rf85gS/L6P3
3PtL7hfOnTf0Jrlf+HpdM7tfupW9JMh9xMoKBfQ+4g5Xfh/V1w5YTu4vUgmU
v0XuL/65fT27vxn3nTXIfUcvw9fdJvcdx7xdze674a9H84l/QBOLJrtSvhv4
h/CrLrqUj5WoWziN8rOWjWhm/uSx+hepEXne+JahdyGdy8mI5/5nbIXVfuKv
cNJtVeqv8NEQ7q+kZsy2Jv4NrxTLsqfzEAay3L8t6fbRJv4Q5/bpo0P5+23t
P5k/XLraoZ7yyzObr6ygfPNdhZxnPvL1C3Hib9Fiu+XU3+Lqydzf5pfNdCD+
GTU8UKkl/hmfNbdn/nl3pMJ7ys+bkTrZnvhzvOsQ9+e/KubspnyyzL+WHsT/
432/uP9f1uK+n/KfcjMRjRe4vOo0ixddeypv0fmi+VtZ3MEhdTYs7lQOtd1C
52SUPVicwmfW8DhVE7ZLmsQ1XBjG4hruUxDL4lrjwrsjSBzEko39amh9/rvD
HxYH+7nW3qC8+bzkozRu4g+rfrC4Gb1b3Z3yvMf8DtcjcRab6b9ncbavuY1O
+mIb9PzW7VUV9O8EVGuwuJwupqNL4jhSlBBuJ3EclzXxOO6VP286ifuowaPj
Con7WNt7GYv7RsbOwZQ/N2/1+kj6u8pjHzCcsPjVFhHK9zLqHUdxBR4WtYLh
ihu3fKooP+lqDcMhuO/6CQyHVAj4NMCvyRTwamD+ynBAxP2nlYb/6v8wR7Rt
cHjiVQmzf30EmHtZVz/v2KI4m3/1f5jTWOj0KrYo3OVfnR/q+R+DXpvu3uv+
r54PPPi1wre+93u/8V/dHnjbc6W/fjmg5POvPg/8V6kvnA+r3ePvD8v+fWZw
lvxuz78/PKwxaOpiIifUyYEPV/DlwrUyci6ohwN/68ffwuXtRA9Q9wa+0buv
Kj6OtF4tqG8fCNCcRufQLv1tpPgQeT7m82guX3VuEJyJjo15ep7ynUPMOM40
L1ftR+fTJjf51tB5tUXbOS41GW4qT+esoszGatG5K4ePIxiONbx7keJhtGpL
txLlR6u2cDwcd1h+KuXv/vh4cDHl89p4ch7vq9HF+XTOLanm+TM69zYpguNt
zy3DVOm8VtH+3pfp/Fba3y6Gzyc2TThJ54u8Ag3H0Hmj7Sc4nhc+EFtF8gJk
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
9OhX/g/mScvF
    "]],
  AutomaticImageSize->True,
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{371.93313273069543`, 332.2364480051165},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{All, All, All},
  PlotRangePadding->{Automatic, Automatic, Automatic},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{1.3371525229594052`, -1.959963612549743, 2.4125848726675407`},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{{3.68639881375804*^9, 3.6863988248551064`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"Normal2onepass", "[", 
    RowBox[{"x", ",", "y", ",", "2", ",", "3"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6863989186099253`*^9, 3.686398943261613*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJx1nHmcjeX7x3HIWAZjfC2DCUnKEupLizo3lV1kGQoRY5SMfaexJ2Mfvohs
hUJpiCHJHLJnS7ITQkiyJCnMz2vO9b7O67l+M/1zXvPu8Zzr+Zz7uZ7rvu7P
/ZTu2KNZ52xZsmSJzpEli+/B53+XFdiflhYZ4HPkr6W2Li1T1h+ol69UUtkI
5Q81m1uzRkQN/4y9RU7XS8qr/L3H53/ze+26/s/zRA6PP/6Q8jOH79+/vriF
f3P6ebIqnxmdlPBcmQ7+L9OP/ysVXvz5CrMGVo3zr07nF5R32PzmnB4/d/Vn
Sf/v4AZ4g5hG+wYs6uZfEDzeD4+V4xcHz688Ws7/bTAeB58j8XwWjF/5FYk/
KXi9yhPlejcG9VEeIfrI387qyd/oip78zefJT9psCo9voDrDsz1/q0nWJW+o
zvDZK2vknvtpF9UZ/mq9qWfmDumtOsPz7bx3e323QaozfPULo3uX2pmgOsOj
snbbmv/t4aozfJ0cj87wCDk/OsObSTzoDF8s8aMzvIBcLzrDL4k+6Gz1RGf0
Y3xyHBw9+ZvPN2T8oDO8afvEpTOPDVCd4e3n/xvd55ORqjP8XI3VJd//ZJzq
DG+590S9QXkmq87wFWGFe707forqDG8tx6Mz/LKcH53hsRIPOsPbSvzoDI+T
60VnOPqjs9UTndGJ+x2d4YxP/j0cPfmbzw/qx1RKqjhGdYYvFX3QGZ6wN21G
hc0zVGf4vAI5e6zNE6c6w6fVzhPXflgX1Rm+QI5HZ/goOT86w5MlHnSGT5H4
0RmO/ugMZ/yjs9UTndGD/InOcO53dIYzPjkvHD35m8/zhde+vv3Yh6oz/JNB
R7Nv7NNNddbzFHvj+LZne6nO8GFfRc6o2La36gxfLsejs55Hzo/O8KsSDzrD
0R+d4XFyvegMbyX6oLPVE525bp5H6Awnf6IznPsdneGMT74Pjp78zWetauNv
rJzaR3WGN9+erZFv1QDVGd6gXbthg2sNUp3hMXI8OsPryPnRWe8niQed4e9L
/OgM/0OuF51VN9EHna2e6Mz18XzX55BwnkfoDCd/ojOc+x2d4YxP4oCjp36f
fHaqk9g1/8qhqjP8h7mPNNw0PUF1hsfJ8egMby3nR2f9PSUedIYvlvjRGf6W
XC86w7eKPuhs9URnroN6CZ3hPN/RGc7zCJ3h5E90hnO/o7N+r4xP4oOjJ3/z
ue+h5zeWaxSqN+AH5Xh0hjeR86MzfIzEg87wjyR+dIavketFZ3gZ0QedrZ7o
TLyxZjzD15nxDG9txjN8gRnP8OVmPMNjzHiGx5nxDD9oxjOf75jxDG9jxjN8
pRnP8KVmPMM7m/EM32nGs9UTnYkr2uRneITJz/DLJj/DR5n8DF9q8jO8jsnP
8NYmP8ObmPwMb2PyM58NTH6Gf2XyM3yCyc/wWyY/w0ua/Gz1RGe+f46pN+DN
TL0BjzX1BjzZ1Bvwq6be0DrL1Bv6vDL1BnyMqTfgK029Af/K1Bt83jb1BjzF
1BvweFNvwNuaesPqic58zxVTP+vvbOpneFtTP8OnmPoZnmzqZ/j7pn7W7zX1
M/wjUz/Dl5r6GT7B1M/wFFM/8znT1M/wzqZ+hq809bPVE505X6KZD8ILmPkg
PM7MB+FtzXxQjzfzQfgfZj4If8vMB+FrzHwQ3tnMB+G3zHwQHm/mg3oeMx/k
s5eZD8JLmvmg1ROd+XcRpr8Bv2T6G/ACpr+hecv0N+CtTH8DXtz0N+BbTX8D
Xsb0N+A7TX8DXtL0N+BtTX8DvtL0N/Q8pr/B523T37B6mn6dy6Rf5zLp17lM
+nUuk36dy6Rf5zLp17lM+nUuk36dy6Rf5zLp17lM+nUuk36dy6RfZ/V0Vs/B
g/L/XS+pYIDPL/YM/2Xi/pD+8Gszci0/e7syx7tMjneZHM95XCbnd5mcX4/n
b77Hnp/z2fNkwgP2PCZ+5UciCsSWrR8Z4LNJmyxfxtR4Eu4y4RzvMjleOfHx
72LL5plRruDjerz2e71c44fzN/8uk+MDmRxveSCT8zj7vVen5zuUNizU1x2T
/Z+hw6bU8zdJK7ouLS1cv7djroZPv97iZeXaD+7wyOoyDVr5Nx8stCUtLUyP
Xxs98cBLL7+mnOML7erQ+ez2ThKnT4+fkBiR8FS/N5RzfKnSX8R1a9Ld3zT9
e+9pv73huAo7rnfpqJzjZ/19Z2dY4X7+6unH3dTjr5b4u/Vfbbso5/hn4+bH
HPxusL9GOv9Fjz/V98TCAkXfVc7xr6RMapkl9zDJG8na568veeOp4PH6O5yW
83C87VdzPLyunP/pYJx+Gz/cxv9qUAc9voHoA+f4maJP8Dw+HZ+TRH84x5cW
/TcFf0c9/hv5feEcX1R+3+D3huvxcTJ+4By/TcaPjEM9vnOVw5vPV/ivco5/
X8Yn45bnxgvvJ2ftubW1jk/4Y1+POdV8aBcdh/CHXNG1o2700fEGz7svcHPj
lAQdV/BpR4a/OPilMTp+4CPbJVwceS9Rxwl8bcpDd881mqy/u+2f87vD18nx
/L7w0XJ+fkf4dImH3wueX+Lnd4HnlutFf3gF0Qed4U70RGeewxc/O/1B2L3O
qjN81bfdO5w/0ld1hh/++eHdh1ePUJ3hvSptGru69HjVGX58VeNhN39OUp3h
7SLXdbu/aarqDD8549f4is/Fqc5a/0r9j87wU3I8OsN7yPnRWc8v8aAzvJ/E
j87wo3K96AxPEX3QGX5J9ERn6poqtertaVy5l+oMn3a6e2TuBsNVZ/hHF+4M
nLp8vOoM3zU5rnOxp/6nOsP/md9o+OMJU1VneET5ptdX3oxXneHnGq1Minyz
l+ps++forP15OR6d4QXl/Ois37sgGA86w/dI/OgMny/Xi87w/4k+6AyvJnqi
M3Xiwu+Gl3n+4wGqM7zAL3VuPf/2+6ozfMLy652yh01TnbXvcm92q0+aJqrO
8JPlB5bY+1xP1Rk+tsilets+7Ks6wwtGda9245cBqjO8vvRn0BleSI5HZ/gH
cn50hp+SeNAZvlXiR2f4JLledIZHij7oDF8keqIzdXf5jy+1uzl3qOoMH1zm
r+ypD+4jdIaf2deq/ssVE1Rn+N2FJ5M+9ndTneHfv/HhmJNL+qjO8GKfLmq+
7fpA1Rn+Wq+5S8b8PlR1hu+XfiM6ax9ejkdneJScH53huyUedIbfl/jRGR62
P3i96Ax/T/RBZ3hF0ROdmcfEbO9VuNPwBNUZ3jT8btSjv01QneFn6m0eOqDQ
cNUZvqdFsfoniofqLnjl5pP3PH6jr+oM7/77q9UazQjVUfDvf2v8Q7WfElRn
OP1zdNbvlePR2Z4fnW086AzfL/GjM/wvuV50hrcQfdAZ/rroic7MCyuY8Qx/
z4xn+DkznuFpZjzD95rxDC9hxjO8hRnP8B/NeNY+vBnP8JJmPNt40Bme7WPv
eIbnNeMZPsKMZ/iTZjwzz15k8jP8PyY/w6ea/AxfbvIz/IzJz9qvNvkZXsTk
Z/irJj/Di5n8DJ9o8jP8rMnP8D0mP8OnmfwML2ryM3yJyc/0LZ429QZ8lqk3
4EtMvQE/YOoNeNYF3noDHmXqDfhlU2/Y/jk6w38z9Qa8hKk34EVMvQE/aOoN
+FJTb2if3NQb8Oqm3qAPdMPUz/ANpn6GnzL1M3yoqZ/hZ039DO9k6mf4OVM/
w+eY+hn+q6mf4f1N/aznN/UzPMHUz/CfTf0MTzX1M/xPUz/TV2tg5oPwamY+
qH11Mx+EFzXzQfhHZj4In2jmg/DvzHzQ9s/RGb7VzAfhk818ED7PzAfhJcx8
EF7QzAe1H2nmg/BGZj5In3KK6RfBd5u+kPaTTf8HXtn0eeCfmH4OvK7p28Bj
TH/G9s/RGd7a9FvgdUxfBf6x6Z/Aq5o+iX6v6YfAfzB9D/g009+gX0c/xPTl
HH05039z9N9Mn83RZzP9NEc/zfTNHH0n0x9zp0xfC55JH8zRBzN9LT2/6V85
+lemT+XoU5l+lKMfZfpOjr4Temodd7Bv+Inv66ieJc7kmxB/PCIQt2lTj+nx
LVXPhpXy1z5evWDg8vo7PcJud1A96UM3vd/0rajFXUJ5eGv+FSm/FwzcWlps
57Vy8arnYenTzntlZcufsvdUPXO8WSAqaVFkYMXlzxLHre2hej4tfbAYoyfx
dxtS/sxL60P1G/FHP9m10uD4/qon8c/cn2Nawfgeqifxl7kYu+W3c51CeVji
L/5Cm29vn49RPYn/kXr5vu0XHhqfN+KKNipbPzxQPeH4z7tyhfItnzl3fzQl
dm/nUF9oZrGyx1PyBUoN6nep8tu9VM9cVaKmpMTnD+wdP+6tNyYOVD2fig2/
X69ggUD527Ve+nV7gurZMTl8dUp8gUCW9tV7LGo4QvWccje8a9mdBQJV2rXP
d3T2CNUzVfqHD5s8cF3iT1ndvWjeGhNVT7nuwLKVMxftiBwb6gtJ/C2Onsg6
vutw1TO3xH/kx4lboyr0Uz2flvivtlqSZcKJt1VP4mc9kTxA/LMLLQrszNlA
dQ5bFHmlXlLOwNrVew4FuoXqh841C7UuWz8sULX4Ywdfm9Qn1BeSz9gFexbP
GTFMdX44/j9VjqfkCoxeMLBNxMj3VeehOQp/lBKfOzA6eu6iHWsnqM7H5hYO
SyqbJ3B1do3wDnNGq841qhfpG388T2DGpOtROS6MV52nS/9wqXmu5ZT4E4tH
3/npcqhOi5X4k/u2OZb/5vRQX0jiP/TwsFmzGk5SnUtJ/EP+LL8k28VRqvN7
Ej/r3ehM/P+9X+j24IiuqjPxf9b9UOe086+rztHp91HWwEOFW615/YeeqvOQ
9PslW6Be50CTUpcTNL7guoov8PXQR7+t/dg4k299gWMlqz7zwTNJofqhdkTN
4ynZA9Wu7itZ6vWxqvO1YxGfpcTnCPQZeiv6hUeTVOfGfQoWSir7UKBH8eVL
Gp7pojovk/7hTFOnlZT4FyY2+WtUYk/VebDE/87Pse03HO2qOhP/9jarrk1Y
OUt1ri7x48dA52kSf6D+n2PLPTtadSb+D4tNqHF0ZH/Vmfhd2uZ111LiVOcu
6b/736lHq/7q6tYKze/KpP++d1LvNBvUrGjiGNX5ePrv+G/qrXxPHsyybqrp
299NPVhjZdVfio1Wnfm8P3hfnc73Q/OOPOn3aVpqP/+BQhdnhvJwp/T7MUug
1MhjTb59rrdZr8kaGGHmHXES/8lzL/erlzM0vysl8Ze6srHi2n97q87Ev1z8
POg8U+L/unebgYNenaU6N5P4D8r4R+e8Ev+KnjVTKpUfoTp3lPj/PXBmRa3J
oXlH2fR4LqWufifl98jmoX7Fh+nfeyX1QvPFLav1T1Sdg+f/I7VA+zsXG0cP
Nutx11OPtzjUeG6B0LwjeF/cSN2WJce8K9t6qc58Nrqd2HTc0X6q8/X0cXIr
9dGzF/K0mTRQdV4u/cOGZh5dWuJ/eWnZPSVeCj3vZkj8+NnQmfh/HZk3e2pU
b9NPvp762CvXvl7vfyeUNyT+LXVz3R2RZ7rqXEPiXyr5H52vSfzF7n6VFPV7
aB69Pz3+lNSiV6tNKxgb6r9tSOfbUgPTr9d4ZVmo/7Y1PZ4fUhMeHrft7QWh
vtCK9OMPpf74/MzGYR3jVedZ6dd7IjWs+fFnltXsa/r2Z1Jv3d31/aqug0L5
WT4bpW6veLvSe2Z9JOQTRud1Ej9+S3ROlvinzyy/vn3JUD28ReK/8UbjqHZt
Q/23ryT+f9a3n9T/TqgvNF/ib1q7+dBdq4epzlsk/vA5WS7O6xjqC1WX+N+V
Ogedq0i87whH52+C5/HnlfOg8+Tg9/rLyfei85JgnP6/JU503hC8Lj/X5e2/
bfMniQ7oOzOom9/rE6bPmbxhr+lz8vmq/C7eeccZ/235HdF5isSfW353dF4o
8R+ScYLOayT+z2RcofNsiX+LjEN0XijxR8m4Reffg+PcX1TGOTpXk3i5L9B5
UPA+8m+V+8g7v7vu575D57Dgfeq/IPepdx59xd9K7mt0LhnMA/7akge8/YoL
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
82jdxe8O571z/we8XJHV
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
q1puWereWbX9h6l7XtWEX6XWHtUzLs5yrvLdktS9uerMFal1A/Voa1Lrk+o3
v0ytZ6qeXJ5ac1D/+EWWF5S716bWMNXPbk2tSc6Bt6TWLWfD38H14ZnwN6m1
0+lww+C1oTWivac9WDBxr6m9MAJeBdfMuXb9NrX+OQPekLo+VP7anFo7naXa
JrUeOw3enlqTfAPelOUL5bJtqfXV17UvU2sX6o9WptY01DftSK2pvhlcd+tb
vKp1G1wnn8m36BK8T8+Grw3uO6SRzIzWsFSrdw3WFs6Jrn+1JucyT4/gnqUO
4x2C+xT1Md1Vf8DnMn5jcJ9ynmJCcO9zvvZ6cO9TO7qP25xzTfdOap1E/YX6
E/Up6imKBetXyh27U+uu8xg7JstNb+N/ZbwZ/BZcALsFfkd7KLWWoh7kr9T6
7Vz4z9R5U/n3ANYJXsh4GqznLMLvT60/L4D3pdal58NJlsuUc4vlXStrv5QN
1tPe1RqO7g1Uh7wdXTOpZuud7Rft2TuDNcmf8Hfpd+Cf8Y9H99ofKaZG9+BL
NXdwT/qLclEWz7V/50RrcJsZmxgdy77Qt42OR18p7kbriZ/CjYL1vc/1nqP7
VdW0V2VrQPG8VbC+9zX+hSxWfqlvG60PanxKtD74DXx/tL6v9/9SdExcozmi
Nc118ODgmlyxYnK0jrmesUuCtUfNPyRaZ9f7vyjLL9pfjYP1WD1LE+zZnOd/
JFrjej9YH1ccm8HPL2d91AbGmwVrs7qHNsFa5bf4ttgr8Hf41sGanp7l9OA4
r/c/KVp7XQu3CNZ1NeeDwZrDNnzzYH1YzzI4+ixBa+aj6LpTtWWt4Pyi71g9
ixuqPe6M1j0VT3pHa6Pa+9OitePv4T7RGqXiz93R5zGKS9OjdecftLeiNWs9
S9/osxzFk7uitU7FnP7R5zqKG/dGn/0otsyO1jQ3wRcE68wr8XWD4/kKxZDo
sx/FxqnRerHe4YxoffxHuF6wdq01dl/0OZPiz4PRZzzaXxOi86jW3vjovPgZ
XD9Y016FPzM4Ly/DVwvOm0vwVYJz5WL8ycE59AOtkWgtTtefHZx/P8afGpyj
P8SPjc67mv/ZaH1cz3hucO7+ROsrWhPX846J1vo0XhsbzjXLtW+i9UbNPzT6
vErx5+loLU7XNAjWafVc70f3tOpfKgbr+VqrFwb3+Kv1fNFnZootFwfr7dq/
o6N1Nt1/gbzPgZTfj8n7jEf1TJL3eZJirERvnSEp9qpf1j6owFia9/mT4u3+
aL1YddqR6HMmxfaj8z5PUt11VN7nRsrd6qPVz6mXfydaY1KvelvwuclWrZdo
HVjf5Z9oLUb13q3B5y9b8Muj9RT1RB9Hay7qv2LeZ2DKIyHvcyzliIJ5n3Wp
hjkQrXmpbjwYraMpfy2N1lbUo5XOu0dVrXts3jWc6pzF0bqPesZSefelqmmL
5q0vqKYqmXefrFp0SbQ2pF6ySN79sGqwUdEauNbhu9F6nzSBE/PWDlRz/h19
lqaa83C0Rq/c+m+03qf6p3ze+otq10J56zuqzcrk3W+rxi6cd+2oGrVc3v28
6u2yeffwqodHRmvsWv+zos9jNgbrG1tz1iM6B58xaW+OiNb/pYMtitb+pBUs
iD4bUxwbF12Pak1+EK1zqQfvFnxmpPhwTfAZmWJOx+AaQHlfGqzWidaLcrly
unSkZdE6l3rq16PPqLQeRgTrBupHOgWfWynW3YC9lXMuuz74XEzPNTD6LFl5
f1702Z7y4NzoMy3lzQHR59DK78Oiz49VAwyPPu9QXn4r+rxNOfe64PpZNU/T
4HM6xfk3os8CtbavCK5tVNP+HyMu6Uw=
          "]], Polygon3DBox[CompressedData["
1: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
YpalZ9O7yWFmXXq2O/r3azan57uxH39/n57sql4P+P4dj6t7Pe/7v6FGD5nZ
WK9vrNFr/kZ/qx7uyl5fmF19xOfnpD+A4x5cH5dze3p/G/+8P21557JrRE6R
o5tkRLv37/+mfn75vuXoi/v67XyVky/q9YpcLf/d2Y+HfK/nusZa08SL6WkH
9/NJflyH6yOAxwHf0T/jAiXP4LMf3sWv7wweTW4Hr6tXkCpqMqMze31k9mdm
dFavjzbq9dbZvR6Se+X4C3s9JvebKZ3U62P1mXrt5F6/yO16eLMsMxG9vZnA
ib0+NCu4uUZPW+Ot9ZKd2ZsZgLXKGmJWZ6ZgbdlczgNPBX7Ud1ujDcyg1Ivn
0I6gfwLnFuLaiTVeRk8j35xW866G7fn69BqvMKDns1Nr/E7X8/HJNf6q6fn6
pBo/9ncT/jylxo+1PT9fUaMHzZj0R47J8E0yYsdqlS61zRo3Eb9thS556SN6
FvCKXfLYR8HjD5M1PUnJmnatn1Gjz0bp+Xz5LmvbNT4O998MvqXEM23ru+2S
D99fki9eVTOfzbD0z85Z58oEbebybTVz2cxOv3BtjT8xM1SvXwdeoEnGqR95
uc1Y/AXe0bla42/M5PQn5uPm4tYMa8fVNfreDE+9fwt4+SaZoP5HDzmE/htN
vKWe76EST6gXlNNGLMn4Hus5cKYSDpQbb+31+bIl/ub2mnzAzFI/dkcNd5k5
6tcGq0macJrcdn2NPzITVj+3/fuYrs3aubNm7ehx1f8rd9kfeBw84TDJxO8p
ydjNyh1Dx9LM+piaTEk/qN7XH5mpma3pD80O9U/6ATWcWs6M0LzA/ED/aEZn
VmfNmaQmA9uqX99T12RCZkNy1Jw1mZvZmxp3yhp/aD5jTbG2qJmXLNHMamk1
+cI936vVn+35X478tdeoS5TURLWrmn0Z8CqukRpNvnSJR1CrmzEtVeIRzJ7U
g46NY6SXMrM0u1RzT16TaZptqskG1WRgZmFq5ulr9gzOKMnE3EvQYyxYUhP1
HmZkR5b4X7MzNfu/SjyJWv71kj0hNYhaxIzTvOugJn55XMbr4ZI1eVRNxmnW
qYaftiYf85x98y33PC4vyXjdCzGjNKvUI8xek/mZ/ek5Zq3J/Mz+9Agz12R+
Zn96iBlrMjeztwPB09R4LPcLFm3ivfQQ65V4Er2Fa27GkjXtWpRD5BI55Oga
TzZ3iabSq43bZm47x80CvuSeT+h/Svu6Rk+e0+bcV+ATfAdN9rC+qalB1qKP
aV/U+Gv9vfmBftoM2PxBv6/fvonrHzbZg/u8RiOtUZJBqp2ua+NvhvTf7xpy
LcmRx9X4oQf79S8fyHFynfpFfySHyqX6o+NrMvh7S/bAzOblPLlPjnSvZQLw
YyVr9tiajP++Eo40+9cDrFniMfUGarzVSjya2k9NuHqJ51Qr6vnM7vUEekE9
nXtFmzXxenpAs3s1ld5Qz7BiiQfWSzjGrltzdcdej7xQiQbUO5uRm5WrSSeq
8axm+3oSvawe1PzSPFZvasZv1q9GHa/G865Q4sH1wmq6lUo8tlpPTyM3ypF6
HT3vWiV+TS+sJ9a/bdzEK+up5yrR4N/0Gsg8eOsm2sj8c51eX6g3VurCfb5z
373j7Z7oe/14nVnjLwaW+IenarhPDjQbebrGf5qJmY09WcOdcqjZ2gs12ZQZ
ln71mZpsxczF7OX5mrnpHFU/D6nJqsy09LuP1PhdM2mz6YdruFGONMu2plvb
1QB6sWW6cLtzzLl2ZU3e4x6T+bdz6h3w5W0/12r8shmyWfLjNf7dDNksWY2h
1lBD6AUfrMlnzMTNxh+t8edm6GbpS3fxetYYa40aR65Yq432ebYmzzFjMmsa
ra9X8/Za0IxXf6gH0guZ8UxW4hfNfu6tycfNrM2uzXymKMnszILuqalF1iSz
7Ptq8lUzerP6u2vmgnPCPPyumrnpHDVrv78mbzXzNvt+qH9+M3+z/wdq8lcz
Y7Pjl8CnN8kczTvUbGo3NZre20x6opI9AbPq52q0nxmm+ZaZ+AQlmbVZuZn5
hCV7FmbpeuaXmnCe3PdPDVfKuXKvHPQu+Io23DRsl1ppTbO2jdiltrjGXGvD
dKmN1lRr60hd1p5r3rU/Whfuk2PkmtG7cI1rzrU3oAs3uEZdq531q0nNtfaO
xfHLJhx8Nc80XJfaas219qp5lu3r8fc93y/T12Prx7f8noFN9gD0n7/W+GUz
Cv30GF3WvmvetT9yF66QI+SK4bt8l99p7TcjmbIkozY7GdiFG+V4uX7ULtwp
Z8qdo1i/mnCq3Pon/39B8Jwl/vqvmnxDjpFrSpfaLifKjW0XblSjqFX+ruEi
a5y1To2uVlejm7VYA9+if2lfG9Vgb4Mva6PNzDQmL8nUzTqsKWZvF7apNbWL
FlIDqYWe4vhVk/ronFFP+C4H9vVNT6A30HOYteg59B7ut6g3/qjJM8xI9Ptq
jDfBl7TRHr/XaFkzGf2/HClXXtmm1rkHNH7JHoZ7Q09w/YgmewDuBbwFvqzJ
Hph7YR/XeEk9pVnERTVrXQ6QC/Q8eh/1tPpcT6G30BOZHX1U4yXMSMxKLq/J
csx03D95sWYvwD0A88Dzataaz+iz6tH0W9+UeLfXuH5+k0zbvNkxd+wdc7OW
68CXga8Dr8+9F9eMjRwlV51Vk0ePXpJPfQJ+qEmGYZah5/Gzh7bxQu/X7C25
p2c++AH4liZ7TuZ/+mv3Ns38VqX/Xk1WYGZgvuj/8H9Zo8zGzq/hDjlFbtHf
6Ef04Pq7c2vGxj0499ts9gc12U9zT2/Mkt/gXp81z9qnpzNLu7DGT8lpctuH
NdmBGYJZ16s1eah7Fu5dXFqz9uRoufoy2ukl73iFmv0898cmbZI9vVOThw7d
Q+DeC2q4U06UG9+oyVPdA3Ev5JIa7neNuFaW7aKt1Exqp7Nr3p2/yd+2Qs+/
W7R5lvX78d6tH9t3+/EZumfh84JnbMIhcsnLNdmBGYL59ds1WcnQPR3wKzX5
sXsk5tGv12QTZhTu7bxZk++6Z+Pezf8BPFO3Qw==
          "]], 
         Polygon3DBox[CompressedData["
1:eJwt12fYFNUVAOBldwGpIggoKBaKSg2gIF2pkSo9oSZUQzVUI02liAKiAkKU
YlRKVDQJClgokao0oxQbkKCACoKiKEjLe57hx3nuPe+c2W935s65893Ua2i7
IelUKvW+yCkqZlKpCqJ0NpVq4cCTxrXyhuZHza83LyWKmNdk/XOkUkOddyW7
mtVmA9ifxBT5Kn4ju1t+j7oz5pVZJVHG8Zbyp4y75J3MR6t7SF19+U7RkY1i
E1g9+SeiL5vCZrJW8nKirLjJ5zRzbIaxqKhjPlDdMHWFHS/O6rHBbAS7mhVj
ddkgNpwVYdeJkhGO3e3Yo8YS4i7z+9WNVlfc8fysMuvB+sb1Y78RVeL7ONbK
saeNBUU1817qBqjL5/hb4mbWiLVgv5oXUFfF2JP1Y7nUXMsasKFsFCvG8rAK
rCvrIibK84qKrJu8t7qMusKsBuvHhrCC7BpWnw1hI1lRtjquHWvImrOz5lep
u8PYlw1mBdQUYrezPmwQy8/Ki9vitzjW3LGZxnyiknl3dX3UZR2/klVnvdlA
lpetySTX94hj15qXEJXNY0EuVLdEXSf2vmjDfozvZF5DbMok6/NkNllLsaYy
5jewNs7t5Nyf4xz+i/wWUYXtZKfYz/JyojLbxbLOLW1sz7qy8+abM8n6/D6b
3NO4txszye88kU2ek3heNmSSdXec3WJ+q9iSSe7/D6yqeTVxLq4Da+BvNPU3
jphXdXyk8Rk2V1yIa6yuurglm/zu2cZbxb3mD6mZ6tw7HU+zUqw168hOm5+P
59DYmLVk35lfjHVubMpasxPmx+K3mL/LXo3vLl9rLMheNr4i2mXj5nkezFvG
OhXj5eVFz7jX8Z2VNHNujugNrBXrwH4yv439zjiVPSqek69X25h9Y35TrBuR
y7ws66imu3MvmOdkZYwdWDd2zrwC+0P0JDaPNY2+xGaxN9ibomDO5FrHNS/n
WGvHZhnXyRuZfx1rJHqS2Cf6sMnOe8LntZR/LLqz8dG/WGP5HtGLTWTTWXP5
XtGbTWIzWAv5R6IbG8cms0by/4iubCybxBpG34v+Gt/Bd2nq2HTjB/K25sPU
jVFXK9YW759O1kWsj8XybbwdGy4fq662/EPRhY2JXsDulm8X7dkINo7Vke8Q
HdjIuI+sbvRhn3kfm8cWsdaxztn97Hm2jHVm/xZN2LfZ5LvHb6hlPoktjmdV
5HTtt2aSa34qm6zhWMs/iYvxrIlKsV9kk3U/Kp2cF+cvjx4pRrOl8tf83e7O
ey+TXKNj2aTHR6/fLXqwCbGu1DWJnuv4ULaILWUd2a+iIKvPmrDD5qfZpegF
ogbby6o79wHjMvY666HmgijKmrBW7Lj539gPscZEidgz00nPit51XTbZI6ca
/yt/0Pw5dS+q+2P0Of4kW8+2stHsLjaTrWNb2Cj2PzGGzWcvsV6Z5DnqzB5g
fxGn5Yf4WLYgrp+63vLvxQl5HpFXvKPuABsePUS+QF1X+UExgs1hC1k3eQO1
T7C1bDMbyeqzGWwN28SGxxply9gn7CCbweqx6emkl0RPGcGWiywrG/ecfRHP
LftMfi72J7GCvRy9w3gzL88+jWeUPWt8h21gD8v3i2HxLLP5rIv81ej5rAyr
yD5PJ9fgpPwGUSr2Zd9tNjtgnhG51a2KfssOyfPFtWJvs7MsfzpZo7FWN0Yv
FuPY8ugv6vqqqcumstVsHRvC7mQPs3+yt9h9rCZ7iP2DrWb92VdiInsp1jwb
GM+VurlsC9vJxmWSPb58Oum50Xt3X+7FJVldeT2xTT4n7mc8e+IKJatjP2XT
jK+yN9iwy72kXzrpw9GPz8iP8qfZCvm76h6MHhmfyTax7WwM+5e4ilVjtdk3
0W9ZEePtrC47Zn6YPR57B1vB/iz/UjzCXox9hg2IZyjWqvzG2JfZFsc/YwOj
F7LZrJ38czGIzWBzWHt5Dd9vAnudrWL9Lu8Bs9nGWC/h8R4qprCV8jXqBqn7
VAxg09gs1lZ+r7qlbB87wKazNmwJ28v2s2nsCzGYPRG9mHWQ11H3KFvF1rLB
l3vi5HSyF8WetCKbrKsC6eSexb0bnU164oXLazTW6jr2CkurKy2v4PM+M/8r
Oyy/ShRga9iz7Ii8SI5kv459exE7Ls+KYmxT9PRYb/IrRf7Y69kZlttYkzVg
B81/iT3YWIPVZ/vj2Yt9wNiW/Z5dIb8i3m9YZ9aTXTLPzcoZO7Ee7GLsG2q/
k+cSxdnm2CPY6fhu8ZvZjngGYm+QXy2uZ9tjnbAf5YXFdWxbOtmrY88ulU3e
HR7PJv+DxP8i12eTff0x48/ynOZ3xPPh3APp5P0i3jNuyCb71zTjfPk3ai7G
+754j78dfdbYnLdnafmb0dtZbdaInTJ/gZ2SFxIl2Qfp5P+eWunkXTzeyQ/G
e6oYz16Tr1TXx3krRQlWhzVmP5q3VPdCOlm3sX6vsYc2Z4vYLvk+dZOdt1Ac
k6dFUbbR8ZPsaFzjWENsPWvq3HnGrWwXG6+mMXuGbWY72NhM8ndfZB+zj6Jn
yZvFtWHbo9+oe0RdK/YS280+Z4+xWdGP5TniHrOVjrdWt9i4h33BHlezNPbg
uE6iDPvY8b+z83G/RTm2hz0dz5f8Uir5H/RN9lQ8/+xC0vZSb0RvZYWMVXkt
9nX0AZbXWIHdzr6MPZF9K0/F2jJsiD7qQ543fsg+YVPUvCuqsnasC8sjnxs9
K5612BvYO9G/WT5jRXYH+8r8tz5vgXEH28MmqlkizspLiNLso7j/0cuN5Vl1
dijeM9i5WN+iLNsdPZgVjncRVod9a36Pv7HQuJPtZZPi3UUUZ81YG3bS/P9Y
itd+
          "]]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0rsrRnEYwPHjfr8lpYj8AWxkYJSBSTKwkYGBkoHRIDYbfwEriV2xufO6
35Pktrhf4/Mrw/f9PPX+Ouc5nVPW3tvUExdF0bBeFeZHXWo2PopyucBSrrOC
p6zlAxv5zTZmJERRN4tYrEFzNUdZzwm2cIqdnGc/l8K1eM13betZ91q2UIwr
3OEqd7nGvbAT97nBA27ykFvc1pE5xmPu8IS7POUez7jPc057jht+6EIvYS+N
2W2LQ1xkH+fYwUk2c5x1HGEVKzVgLmQX09jKT/do4B1reMzy8Fws4a1zV3xT
jp7CWRXYMZv5zGIeM8MZZjCL6eEdMI2pTFGqOSnMTGByeMdM4q8S9RP+05es
Ec34uf3/Hv4AxpdK8A==
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{690, 1001, 473, 689, 1107, 912, 691, 1108, 913, 692, 1109, 
       914, 693, 1110, 915, 694, 1111, 916, 695, 1112, 917, 696, 1113, 481, 
       697, 1114, 918, 698, 1115, 919, 699, 1116, 920, 700, 1117, 921, 701, 
       1118, 922, 702, 1106, 1119, 923, 1002}], 
      Line3DBox[{704, 1007, 1210, 703, 488, 705, 1120, 924, 706, 1121, 925, 
       707, 1122, 926, 708, 1123, 927, 709, 1124, 928, 710, 1125, 1008, 1211, 
       711, 1009, 1212, 712, 1126, 929, 713, 1127, 930, 714, 1128, 931, 715, 
       1129, 932, 716, 1130, 933, 717}], 
      Line3DBox[{719, 1010, 1213, 718, 1011, 1214, 720, 504, 721, 1131, 934, 
       722, 1132, 935, 723, 1133, 936, 724, 1134, 937, 725, 1135, 1012, 1215, 
       726, 1013, 1216, 727, 512, 728, 1136, 938, 729, 1137, 939, 730, 1138, 
       940, 731, 1139, 941, 732}], 
      Line3DBox[{734, 1014, 1217, 733, 1015, 1218, 735, 1016, 1219, 736, 520, 
       737, 1140, 942, 738, 1141, 943, 739, 1142, 944, 740, 1143, 1017, 1220, 
       741, 1018, 1221, 742, 1019, 1222, 743, 1144, 945, 744, 1145, 946, 745, 
       1146, 947, 746, 1147, 948, 747}], 
      Line3DBox[{749, 1020, 1223, 748, 1021, 1224, 750, 1022, 1225, 751, 1023,
        1226, 752, 536, 753, 1148, 949, 754, 1149, 950, 755, 1150, 1024, 1227,
        756, 1025, 1228, 757, 1026, 1229, 758, 1027, 1230, 759, 1151, 951, 
       760, 1152, 952, 761, 1153, 953, 762}], 
      Line3DBox[{764, 1028, 1231, 763, 1029, 1232, 765, 1030, 1233, 766, 1031,
        1234, 767, 1032, 1235, 768, 552, 769, 1154, 954, 770, 1155, 1033, 
       1236, 771, 1034, 1237, 772, 1035, 1238, 773, 1036, 1239, 774, 1037, 
       1240, 775, 1156, 955, 776, 1157, 956, 777}], 
      Line3DBox[{779, 1038, 1241, 778, 1039, 1242, 780, 1040, 1243, 781, 1041,
        1244, 782, 1042, 1245, 783, 1043, 1246, 784, 568, 785, 1158, 1044, 
       1247, 786, 1045, 1248, 787, 1046, 1249, 788, 1047, 1250, 789, 1048, 
       1251, 790, 1049, 1252, 791, 1050, 1253, 792}], 
      Line3DBox[{796, 1159, 957, 794, 1160, 958, 798, 1161, 959, 800, 1162, 
       960, 802, 1163, 961, 804, 1164, 962, 806, 1165, 963, 808, 1166, 585, 
       810, 1167, 964, 812, 1168, 965, 814, 1169, 966, 816, 1170, 967, 818, 
       1171, 968, 820, 1172, 969, 822}], 
      Line3DBox[{821, 1267, 1063, 819, 1266, 1062, 817, 1265, 1061, 815, 1264,
        1060, 813, 1263, 1059, 811, 1262, 1058, 809, 1261, 584, 807, 1260, 
       1057, 805, 1259, 1056, 803, 1258, 1055, 801, 1257, 1054, 799, 1256, 
       1053, 797, 1255, 1052, 793, 1254, 1051, 795}], 
      Line3DBox[{824, 1064, 1268, 823, 1173, 970, 825, 1174, 971, 826, 1175, 
       972, 827, 1176, 973, 828, 1177, 974, 829, 1178, 975, 830, 1179, 1065, 
       1269, 831, 601, 832, 1180, 976, 833, 1181, 977, 834, 1182, 978, 835, 
       1183, 979, 836, 1184, 980, 837}], 
      Line3DBox[{839, 1066, 1270, 838, 1067, 1271, 840, 609, 841, 1185, 981, 
       842, 1186, 982, 843, 1187, 983, 844, 1188, 984, 845, 1189, 1068, 1272, 
       846, 1069, 1273, 847, 617, 848, 1190, 985, 849, 1191, 986, 850, 1192, 
       987, 851, 1193, 988, 852}], 
      Line3DBox[{854, 1070, 1274, 853, 1071, 1275, 855, 1072, 1276, 856, 625, 
       857, 1194, 989, 858, 1195, 990, 859, 1196, 991, 860, 1197, 1073, 1277, 
       861, 1074, 1278, 862, 1075, 1279, 863, 633, 864, 1198, 992, 865, 1199, 
       993, 866, 1200, 994, 867}], 
      Line3DBox[{869, 1076, 1280, 868, 1077, 1281, 870, 1078, 1282, 871, 1079,
        1283, 872, 1080, 1284, 873, 1201, 995, 874, 1202, 996, 875, 1203, 
       1081, 1285, 876, 1082, 1286, 877, 1083, 1287, 878, 1084, 1288, 879, 
       649, 880, 1204, 997, 881, 1205, 998, 882}], 
      Line3DBox[{884, 1085, 1289, 883, 1086, 1290, 885, 1087, 1291, 886, 1088,
        1292, 887, 1089, 1293, 888, 657, 889, 1206, 999, 890, 1207, 1090, 
       1294, 891, 1091, 1295, 892, 1092, 1296, 893, 1093, 1297, 894, 1094, 
       1298, 895, 665, 896, 1208, 1000, 897}], 
      Line3DBox[{911, 1006, 685, 910, 1309, 1105, 909, 1308, 1104, 908, 1307, 
       1103, 907, 1306, 1102, 906, 1305, 1101, 905, 1304, 1100, 1209, 904, 
       673, 903, 1303, 1099, 902, 1302, 1098, 901, 1301, 1097, 900, 1300, 
       1096, 899, 1299, 1095, 898, 1310, 1004, 1003, 1005}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{251, 474, 1107, 252, 488, 280, 1214, 503, 295, 1218, 518, 
       310, 1224, 533, 325, 1232, 548, 340, 1242, 563, 355, 1255, 578, 1160, 
       370, 593, 1173, 385, 1271, 608, 400, 1275, 623, 415, 1281, 638, 430, 
       1290, 653, 445, 1299, 668, 460}], 
      Line3DBox[{253, 475, 1108, 254, 489, 1120, 281, 504, 296, 1219, 519, 
       311, 1225, 534, 326, 1233, 549, 341, 1243, 564, 356, 1256, 579, 1161, 
       371, 594, 1174, 386, 609, 401, 1276, 624, 416, 1282, 639, 431, 1291, 
       654, 446, 1300, 669, 461}], 
      Line3DBox[{255, 476, 1109, 256, 490, 1121, 282, 505, 1131, 297, 520, 
       312, 1226, 535, 327, 1234, 550, 342, 1244, 565, 357, 1257, 580, 1162, 
       372, 595, 1175, 387, 610, 1185, 402, 625, 417, 1283, 640, 432, 1292, 
       655, 447, 1301, 670, 462}], 
      Line3DBox[{257, 477, 1110, 258, 491, 1122, 283, 506, 1132, 298, 521, 
       1140, 313, 536, 328, 1235, 551, 343, 1245, 566, 358, 1258, 581, 1163, 
       373, 596, 1176, 388, 611, 1186, 403, 626, 1194, 418, 1284, 641, 433, 
       1293, 656, 448, 1302, 671, 463}], 
      Line3DBox[{259, 478, 1111, 260, 492, 1123, 284, 507, 1133, 299, 522, 
       1141, 314, 537, 1148, 329, 552, 344, 1246, 567, 359, 1259, 582, 1164, 
       374, 597, 1177, 389, 612, 1187, 404, 627, 1195, 419, 642, 1201, 434, 
       657, 449, 1303, 672, 464}], 
      Line3DBox[{261, 479, 1112, 262, 493, 1124, 285, 508, 1134, 300, 523, 
       1142, 315, 538, 1149, 330, 553, 1154, 345, 568, 360, 1260, 583, 1165, 
       375, 598, 1178, 390, 613, 1188, 405, 628, 1196, 420, 643, 1202, 435, 
       658, 1206, 450, 673, 465}], 
      Line3DBox[{263, 480, 1113, 265, 494, 1125, 286, 509, 1135, 301, 524, 
       1143, 316, 539, 1150, 331, 554, 1155, 346, 569, 1158, 361, 584, 1166, 
       376, 599, 1179, 391, 614, 1189, 406, 629, 1197, 421, 644, 1203, 436, 
       659, 1207, 451, 674, 1209, 466}], 
      Line3DBox[{267, 482, 1114, 268, 1212, 496, 288, 1216, 511, 303, 1221, 
       526, 318, 1228, 541, 333, 1237, 556, 348, 1248, 571, 363, 1262, 586, 
       1167, 378, 601, 393, 1273, 616, 408, 1278, 631, 423, 1286, 646, 438, 
       1295, 661, 453, 1305, 676, 468}], 
      Line3DBox[{269, 483, 1115, 270, 497, 1126, 289, 512, 304, 1222, 527, 
       319, 1229, 542, 334, 1238, 557, 349, 1249, 572, 364, 1263, 587, 1168, 
       379, 602, 1180, 394, 617, 409, 1279, 632, 424, 1287, 647, 439, 1296, 
       662, 454, 1306, 677, 469}], 
      Line3DBox[{271, 484, 1116, 272, 498, 1127, 290, 513, 1136, 305, 528, 
       1144, 320, 1230, 543, 335, 1239, 558, 350, 1250, 573, 365, 1264, 588, 
       1169, 380, 603, 1181, 395, 618, 1190, 410, 633, 425, 1288, 648, 440, 
       1297, 663, 455, 1307, 678, 470}], 
      Line3DBox[{273, 485, 1117, 274, 499, 1128, 291, 514, 1137, 306, 529, 
       1145, 321, 544, 1151, 336, 1240, 559, 351, 1251, 574, 366, 1265, 589, 
       1170, 381, 604, 1182, 396, 619, 1191, 411, 634, 1198, 426, 649, 441, 
       1298, 664, 456, 1308, 679, 471}], 
      Line3DBox[{275, 486, 1118, 276, 500, 1129, 292, 515, 1138, 307, 530, 
       1146, 322, 545, 1152, 337, 560, 1156, 352, 1252, 575, 367, 1266, 590, 
       1171, 382, 605, 1183, 397, 620, 1192, 412, 635, 1199, 427, 650, 1204, 
       442, 665, 457, 1309, 680, 472}], 
      Line3DBox[{277, 682, 683, 1119, 278, 501, 1130, 293, 516, 1139, 308, 
       531, 1147, 323, 546, 1153, 338, 561, 1157, 353, 1253, 576, 368, 1267, 
       591, 1172, 383, 606, 1184, 398, 621, 1193, 413, 636, 1200, 428, 651, 
       1205, 443, 666, 1208, 458, 685, 686, 687}], 
      Line3DBox[{459, 667, 1310, 684, 444, 652, 1289, 429, 637, 1280, 414, 
       622, 1274, 399, 607, 1270, 384, 592, 1268, 369, 1159, 577, 1254, 354, 
       562, 1241, 339, 547, 1231, 324, 532, 1223, 309, 517, 1217, 294, 502, 
       1213, 279, 487, 1210, 250, 473, 681, 688}], 
      Line3DBox[{467, 675, 1304, 452, 660, 1294, 437, 645, 1285, 422, 630, 
       1277, 407, 615, 1272, 392, 600, 1269, 377, 585, 1261, 362, 570, 1247, 
       347, 555, 1236, 332, 540, 1227, 317, 525, 1220, 302, 510, 1215, 287, 
       495, 1211, 266, 481, 264}]}, {}, {}}},
   VertexNormals->CompressedData["
1:eJxtfHdcz1/0f3bKCEVURhmhIStp3JRVRlq0J5W0I+2NdiGyV2S2JGR0G5o0
hDIiTaPsWcTv3td9Hd/Pt9/388/70XU/t3PP+9xznuec52mKnbvBpv4CAgIT
BwkIDCCfBUFmPYazZ2L4FB89v+vv3w9owKOAZwOuLcKNsmN3RT5Sw+uMG8/Q
9dOxnnva7yzFXVc0Hp0dswbXFt8t+EPW1w2UWrs+ZA1O2b86akuNKY7atTbu
N1m/+3qqx2IdfTw+0UTtzqyNuFTB1P8nWfdpXdFlfEUP37sQu+zu7S04Qtji
z2eyvshl26AGJW1cM1p17pG7Hvj+3l3935N1AfZfaGvG7Xjc4YlHt5z62UnW
F7ty+5HxCjcluj9kH9u/f1TAD3I+msef/0CInT9XYbMLkQdt4eVZqcjk6al7
o0XkR5GVIbuo/OujmPxnKwKiyX1RmcSZB/S+S++w+24WzKwk+kHCM5l+Inn9
HA4ye0r0iB7y+pzL6xP0CHoFfX6RGNOrvW41hk/VT7Pd6flf/vzRHHl3AxaS
iItYFm+B0Z5Lh3qoPDLSG53abfD7zQ57JU0247K9RaGfyPqbyfnXI6rssZPr
mKKIKm/sEfTeopnqc8BJhx5ZO5w66sil7eoBONhWz/ceWVdRGzVrTq8xfvT2
pXhbUCg+vD1Z6sZ/9Owr02PYsTcM52+aXHiZrLfuGCVE9qOL79h+iSC2X5Od
j/qef9upfy6RB20171/8X3lmWRqbEflRh87SfVR+vxQm/7iauwvIfVG7JLuv
YTK778x9Ma+JXtD5no9/qH6WfWb6kfveYk/0iRx4fdby+gS7BDsF+wQ9gl5B
n3Xzde+v/uOI4dP6BLOfDs/jsoVDPXHgpm8eSqu34U6l7LD7ZP2YoEPM0J/e
eN7eOT+GnA7FBzc9eHySrDtGvJJs0/PCA6x0ZZ637sQvR44e5kTWde6tvKYi
54B9FiQrrLwWi2e0vdNe9B89x9jdUvCJicfK6el108h6dCG3H1k+uaxI959+
yPZfFV47jpyPFBzZ+dmS7Hwhgws7iTzI5adrN5VnhQWT51rU8SlEfqSpf9CV
yl+iw+THI8aVknsi4cjZtfS+h8+z+z6/Nc2V6Ael675EVD/eKUw/Up2eWUSf
SCCe6fN1CdMnvHN49/DewS7BTsE+QY+gV9Bnx4/UVoSCMXzOdnp5Kp6sT6yN
kvLPC8OnvUbN+HlyF5aJY/pZ36TQ0aYZiof8KPvcppmEjy3rX5j75wMa1VHt
5R6MsOiGcZ7uwdb427apLb/+o+fRonUOmeU2+OuVuQfpul07tx81Srd50/3a
/H5J2fJOcj7qbGLnTxZn5/sZVI0n8qA7b5ZOpfKsqmbyBFSpPyNyo7dipzn5
u3Yx+SepOdiR+6KvBXXT6H3PWLH77pQQCCL6QYPkmX4izjD9fD622onoE2kJ
MX3+jmf6BL8JfhT8J7xzePfwvsAuwU7BPkGPoFfQ56DRK2dpXo7F8Ln/u5JL
KNVnWm3hOQMjXKHaK9cbYIXtJ2UWUnvYbFmTc/7wSlyjkD0fb7XD39ZJjO35
j56dOututFy0x1JyMl+7/2c/6ru/+dGAKnI+cvp6fQ49P0+Snf8xykyCyIG6
7zB59ErmcvLs3jh6PJEfFRzmvgd8xCCDkz9rlOp7cl8ko8zuK5PF7tt2dcFl
oh+krML0c/U000/+/VgZok+k9onp00GD6RPiEMQliEfg18CPgn+Ddw7vHt47
2CXYKdgn6BH0Cvq0HJEZlfnVHMPniOOf2qjesoNdLzztWoe/vEg597TLBt+Z
lun4Xz0vntD7QlHIDg8bpv2Wrpf6u94g+9HD52x/mgzbn9YaEETORW6XV3rR
8zemsfPrQpbMJPKg7nrue8BhE5k85w9T+09Cp7lP4t9+MflFp3aPJfdFqW1X
RtH7Bl1l973TMzWF6AflyDH97LvA9HNP+bMM0ScyFFjJ6fOMLNMnxHWI8xDf
IQ5BXIJ4BH4T/Cj4T3jn8O7hvYOdgZ2CvYEeQa+gz1uVgx18go0wfO5s7b32
+z96zslbpfu9wRivMXsm/ed/9qO++3vY+ajv+cK3VOSJPOi+Y81eKk/VeiZP
S6KuDZEfRbdX76HyH/Rj8le1DJpM7ovETHS4+7amv2f3vWUiTPSDdtdxcRhn
dzH9ZPUXlCL6RJ07mT4NC5g+ASf98388XoK4DusQ3yEOwTrEI/CbsA7+E945
rMN7B7uEdbBP0COsgz7h5//9+RG9vrrKjOz/9+97N7D9i1fOeUvO/7d+axA7
343J828d5LkVuMiWyP9vve0ak/9YwshJ5L7/1kuSmT+JPSG8jOjn3/qv10w/
gmdjfIg+/63/Fkvl9Am4E3Ao4E/ASYCbAC9BXIc4D/Ed4hDEJe3/254R2DO8
c3j38N772DPqa8+gV9BnbclgH7oPPh1esP3P2Pmo7/l97BmBPd/8kuVE7Xn8
ayb/IN//054R2DPKY/b8Kop770jpFdOPq5MbZ8/OzJ5REGb6BBwPuB7wPPhn
wKHgnwEnAW4CvARxHeI8xHeIQxCXIB6B3wQ/Cv4T3jm8+//PP/N2CvYJegS9
gj6PXeHO//dZf46dfz6U+ed6DecyKg/Ei8hGhXfUPydGMvklqpn8eBTzz5Me
cvEINR5h9x0qsnA/9c/RCkw/xelMP2MG4KnUPxfKM30umcH0CXkR5EmQHwGO
B1wPeANwJ+BQwJ+AkwA3AV6CuA5xHuI7xCGISxCPwG+C3YG9gZ7h3cN7B7vs
ux/0CHoFfbp6jp1E5YDPi3LzOHnWTmySoHhjW/eosVR+wBuPhzG8MbllSgK9
b10au++55xuyKN4Yr8bhDbT+PNOPSB3DG6kLmT5f83gD8kzIOyHfhLwI8iTI
jwDHA64HPA+4E3Ao4E/ASYCbQH6I6xDnIb5DHIK4BPHon5/l/Sj4T3jn8O7h
vYNdgp2CfYIeQa8gj2hTQx2VGz6VXjH5++sy/OwyfLAkvW+EN7vv1TsXwih+
Lqi8aU71sySN6cfnOMPPpY+ZPk8kMH1C3g55POTvkGdC3gn5JuRFkCdBfgQ4
HnA94HnAnf9wKI8/AScBbgK8BHEd/CL4Q9AzxCWIR+A3++6Hdw7vHt472CXY
Kdgn6BH0Cvoc9+lGEb0nfM67yu5rFPPZneaDJnVMPzkHmH7krmtk03yws5Lp
c1Ep0yfUQaAuAvUQyNshj4f8HfJMyDsh34S8CPIkyI8AxwOuBzwPuBNwKOBP
wEmAmwAvgZ4hzkN8hzgEcQniEfhN8KPgP+Gdw7uH9w52CXYK9gl6BL2CPkfu
8HtD9QKfjl+YfpJmjuXqG1W8PgevZ/qEuhLUmaC+BHUQqItAPQTydsjjIX+H
PBPyTsg3IS+CPAnyI8DxgOsBzwPuBBwK+BP0DLgJ8BLEdYjzEN8hDkFcgngE
fhP8KPhPeOfw7uG9g12CnYJ9gh5Br6DPDF6P8KnL63ODWo2w+WlVDJ86TkEn
uDreFuUt78zm4fq0vKH9upVwc+Gmh3Td5EVHu9lpVVTO77/L7w8cdN+E7Ecf
+P3Di9h+2Af/H+z/yp9vPejUD4FuJTSU31/J74NPvc1svx+/bz//e5T5/SAf
yAtywrnwe+B8kA/kBTnhXPg9cH6ywuwZC2rnYvhsbS98wNU/N30cSX5Gufy6
RAdbh5/h32H9Jv8zfOrz66M/r23PXK+I5w2ac3zmIgX84JpdC12XWzPYj/yM
FvD//oNfN+b3zZ0WXkDW0b91/ue1/P8ncZ2tw7nwe+B8+P/hPDgHfh/8fliH
c+H3wPnib4fV7t2ri+ePWFxyUV8Xn/mGTlE7XKIhmh13QQvfGbw1wG2zDlZr
8R5C9/sK/RIzsjPGBzbMrv79xQTLLhIpp/E0J/GejIuKLk6duPSOwT5jbBOh
Gt5L1huOWl57LWSFf82y0UxU2oR9XxRt/UbWDwRXdXgNXIdTbxhJqkfbYOGV
l/Kon6mwfLPLx9QOay6z9axQ88BSIzO13pL1F8fu5ifjdVhubO3gV/0ccWzC
xFPfyfpTlYZrtYr2+LmYVnVIig8OUpU1fUpxYLPQuqt7V2NZY/uL0+e74hIR
h5fUvy3rjhO3s7LB37+O1RmWHojl28S3lJP1+H5zZh+5q4mrZkufFvjggTcL
hVe9I+u9f3brxKgb4sk/BENPnwjFIyxnuueR9eZcFGDTNEutb50/pD93Diru
dkul57QJs3OkCtOnPi/XUPPj81rM57PvNfbIk/ORTjc7X9uWnW+x1NOEyI8+
vf99gcp/gZf/bv94USI/+v6dyb+og8nf0pJI9YMkef3s5fUT3xGWS/SDfJwb
OP2o8/r59FC6hegfle2awun/Jq9/s4nTwoj+kcn8dV5U/xNGMf2PcPIYT75f
ZGKwvZh+v0KR7PsN9H6bRr5ftLYhZgn9fhOb2fc73VDrHLEf1PZA05/az1He
fg7vGyBM7AeViDpy9vNJhdnPvNcjx0UMUUY/5dwKX/gsxlOPiObQ/W81W24S
+0QjlRpLqX0e/s7sc97tVq+Ge2ZYQNCn+pfUejxBad9Krl46QLzMLmkTfiK+
5ZfEz434ZY/0c6o3Rf0T1Ymr3PASIU/ltTWeuDI279FzGkd+JOV1hHrhGrO2
q9K6AVjmoNiIW2TdaXX5m98m3viApKNO969w/KphVmgCjacfY+S9wzzwvMs7
FPLEo/CzZZOrLen6xLciOQ72+E97eX7Gp1g8XHNG20Kybh8xN/iakJ5adJ/6
eaYotx8Z5RZjut9iLtuf8HDDTHI+yrOt4s6fvoqdL+ti2k7kQb7BVbpUnvWP
mDz3ZeddIfKjrOve16j8qalM/jr19EJyX1R+c8oCel+lo+y+xU/bbhL9oPPq
Hj1UPyIDZDj99Fr2WhB9Iu1ZAVVUn88WMH0uvr12qEilIz5VEhrkstkan16b
tOYL9Q9SY7JnTvXGa5Ze9+4tc8Vfw4ZoPKPxdMzbQ1Jt/viQuPS6eav8cJ6e
+P0L1J5T3+5OdAnFUqtShWtsIvConcnpVvQdFatfWSoXhjcfX1r19lsMfjGj
IVqArB9NNjHa3uSL3Z3Pd3haRuMmuY3+FE/O35kTczJBFdfXPbWvKrDGdh7L
X1I5VxZUHbsiPF1tDF8H+sbXf7J3cPvRtEFrHej+Une2Xys534Kcj77lYO78
s6PY+etG9afyINO8yLtUnm1LmDwvNnyJJ/Ij1WHqQlT+uVeY/L+i5yeR+6K/
zmJ69L7C29l93302SyX6QdWqO9ypfrLSmH5SF+V+GVlJcGw902eOFdOnfrX2
8ND9Xjhg3XhHRyc7vMnHSbKdvsfaIb3ub4JwYGava563Jxbe+E0ol6w/n1uy
tKj/DvzpS+3kltNBuCB0YK4ZWVfZ8ernlAvRuGds/cqW3J1Y3ajc6imtGyhd
1fLQDsd2ZVuX2t4Ox4EzbWuMyP7BYXIPvPUN8F2D7rIMYRss9jDlAoefB72J
mh+1DCdH+mSmHrbDt46LyNB1pdSCgmIVJbXNfF1tIp/PqrP9aG+f/b/a9jwj
56NR160r6Pnydex858+vVIg8yPbVSU4e5Mvkuari+ZbIjyof/1xO5R8oU8HJ
L3P5/CJyX9Tv93RJel+1UYO4+w6aeKKT6AcJPWL6mXSG6Ues/6PekP1e6Pcm
pk/NQ0yfR3U/RKft9sN1uVY7g5ttcOzjzMw6Gvcltgkf2BOJBZLkO4b188Ci
lqMUdlJ86+9z6UBHHN47z7hsgmIAHpSr+pvag5G98Nly2XC8J0NqivVdL6yQ
9NM/hayf32EhpRltiTux1YYtihuwkMnIYHrfO+8WOt2Ya4ofrSwX++Rqic/N
+iZN1xOTC8qCj63BGoIbbXaI2OKU3OYUuj7AoFL9b7ayWt/6+cSEglayH9kO
Yft/5rD9yXG19uR8NDji10B6vr0iO7/g74OxRB500fynMZWnypTJEzW99jiR
Hx0plZKl8m8qZPLXPRI/Tu6L3JylK+l9z7uocfcV0Yn+m7InEjUdKntO9RPx
munnbtDwbUSfKPYp06euRBanz2t6ZUF3vgXj7Yp1d855GOGQdwe2FZH1S2Fj
hb++jsLJGWISj2zs8eyjb//SdyR5L3OaYa4ffqX/6dGAeGMs0Fr28iFZv9w1
M+jXeFsssNwo30N+KX4oZC1I32/KX/nIimZbvF57x9j3o1fjfcEdqvRerT1J
19vDrfAsgZXpS+7r4zljD06i+w0zJ+ecfa+Py7+YhqadN8LbLgSOofFLY+J8
12HZamp96+e2bD8q67P/JzsfyfY5v2NDRAiRBzXo7OhP5dENZ/I49FPdRuRH
nbpGV6n89iOZ/OptU8XJfZH1uU9P6X3Th5dz95XJrfj95XUU2jRz7Diqn1z9
Tk4/Nw942RN9ot7sunNUn00bDnL6vHzpZ0J9SCjUqwUEI4Z/uknjo+v0ioa4
mH/rUnqlxXpkvdY7LCPTIeDf+rDUvNE0v65Yt0dMZ/G/erjAcvt+NVR+tLrp
PBr5r34uoCDy3oCrE5rVF5/S+ldvFwj+6fSC3utiP4UTPyQN/613v8/cQ/V5
ZF14Mk7WUBP4X/99RHF/5TPIfsjDBFq62P6Rt9Wqyfn/1hd+Yee7B43OIPL8
W08fzuSZs6NkNJH/33rTRiZ/0Mm/J8h9/63r32f3TZx5Po/o5996oWQZp5+2
sq2hRJ//1st7mD7H3kzn7FnLjdM/Mv/M7Hl+yDvOnnWyxOj3habsY/bcU/F9
OrVnhVWcPaP2F8yeT056ztlz7TLOntE23p4Rb89Rmjukif2gd0HMfqZ0M3tW
612RR+wNRYoyezPm7XnrF9NwYp9ImrfPr0GHIqg9v+Lr57v5+rnexcmF1J43
fTBNovvfnmH7S38k3aL23PJrxW16fr8x7PxE3p6HrtgxgspzMozJY37IaDu1
5+hVRhlU/uQRTH7j1q3jqT1XnWT3XSPE7PlIDrPn9ZPH0veOdPSYPd+2CeHs
Wceb8w9ogSGz5xDeP2vqXaf+BFnw/rlqCvPPP7f2NBP/g/w3Mf/j6sj888uV
qveIv0I2p5l/NhVewfnnjW6cf0PHgph/s/NZNY7657T42WbEH6IPvH+Ol3Xe
QP1zzGvb4cR/onbefx7k/bOwW6Ut8bfo8ZU+/rlP/VyW98+Krmy/Cu+fp8x0
Nqf+OSKS889ISImdX1R9YjT1z8GWvgZUHkdzJs9+j4UnqX++EeY8g8pvdJXJ
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
l3pau69ZmONCn1mpXD71qMsuy2k1+myQN/ex1Src6PrZn+p5l+Tv+1fFHPF7
AZF7Jc+tsH/AiS9Un+e0/Hf9KvTEsfaGg4dEueDyHts9TVTPR1N81R23Y/hs
+vUyiuYv+dN1Mhw1/LGp2IROEaK3rN17QmLJevUH34r8i744IF/splrKTpyj
9smS4hyZ4mSnZ94ueJtk7/m26eG4ddjt7hNkfYP9ZYVbJK693NckkF0ahX92
fz1jQ9ZX8PW3sD51TjM//54sgh/K5sS/OBznghdF6YhS+WUfeo1umx6AEkYf
KVfUS8QnqzIeNRLcFWZlPa5uUBB6eSlPPttsF56je71Xi+z/Jb15fJqEH8q2
WZpzvjgEXy5bHH2QrNs8lI2+eMoLrWzZmrYixxs3z7kzlNpPivy++wVGTkj/
yIbaMYscsEW76tAPFG8vm7EgZoEFStDKLj51fj1eXnamhcON/ScH6Ul74SNZ
YfeqkR2+sdRYo4P6gRlO2mJTAnFXj2/2tbGeeN0nrVU0niqXfxsVXxyORdMn
GiTEBuK2pfrDtpH1tHSlFb1OOzB87m8NrJxA1nXRpQ85I32x+yGDbVLzQnHP
wBvzD5F1T70nq0yn++GKPw17y6OisdQm1W0LqL9dNT6J4rT0U1mTqtRssLjQ
m2z6vqD+Jtqnzmm8eXU0xcMW38WXqRP5i5YvN6H3StK6eKJ9gT5S9j/y/OAt
KxxSNmwG3e9VKBB5x3EXOpu/WEYyNB7jj41eR4n+42qXdN5Mj0Qxi559JJ94
6Lq9irNo/J0oGZ5oF4LeGG5qj9voj6eal7bvJ+vHC89Y7ezaivJKfmsMCHfD
q3sExKn/eTj7xW7Py06odbzr9GM3rPFeqcBo6icPfn6W7iPuh5Pe9nvl/tMG
zzJYI0PzRO1NtZmHT0fgNw8fdx9f4IG3LxKUSqT+ULHTMDMhBtvOv7RjTnUA
fh/8fMMksv7g+IlFBz0DcJj91dZX2lux9m11rWtkfZSU7wrB4+EYPk8fVzxm
QNYjhiZrLPAzxN+vqS3eYmiN46T8Mql+jhbu5OqcQ2/GGro62uG7e7SW0PWB
fH7n1KfOefLAmg6a330NSbx9c6ktXqTZFED3v8126N8tZIIkG1M2typZ4XG6
CxS4c072zwy6ZIZWWL3eLyttgodmiH2m6y+r4gVHTEhA3YcHyx7s3oHLzaOu
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

    "]],
  AutomaticImageSize->True,
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{317.50453602257284`, 247.63740101557983`},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{All, All, All},
  PlotRangePadding->{Automatic, Automatic, Automatic},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-0.618410271068602, -2.840915694807011, 1.7311171975449997`},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{{3.6863989221599913`*^9, 3.686398943701346*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["RevolutionPlot3D", "Subsection",
 CellChangeTimes->{{3.686399233667267*^9, 3.68639924820135*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Normal2rev", "[", 
   RowBox[{"x_", ",", "\[Sigma]_"}], "]"}], ":=", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"2", "\[Pi]", " ", "\[Sigma]"}]], 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     FractionBox[
      RowBox[{"-", "1"}], 
      RowBox[{"2", 
       SuperscriptBox["\[Sigma]", "2"]}]], 
     RowBox[{"(", 
      SuperscriptBox["x", "2"], ")"}]}]]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Normal2revonepass", "[", 
   RowBox[{"x_", ",", "\[Sigma]_", ",", "r_"}], "]"}], ":=", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"2", "\[Pi]", " ", "\[Sigma]"}]], 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     FractionBox[
      RowBox[{"-", "1"}], 
      RowBox[{"2", 
       SuperscriptBox["\[Sigma]", "2"]}]], 
     RowBox[{"(", 
      SuperscriptBox["x", "2"], ")"}]}]], 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"x", "<", "r"}], ",", ".5", ",", "1"}], "]"}]}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6863990140950823`*^9, 3.686399036434338*^9}, {
  3.686405252349719*^9, 3.6864052525770473`*^9}, {3.6939124023146276`*^9, 
  3.693912431460521*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RevolutionPlot3D", "[", 
  RowBox[{
   RowBox[{"Normal2rev", "[", 
    RowBox[{"x", ",", "2"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "8"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", "All"}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.686398974148808*^9, 3.686398996327183*^9}, {
  3.6863990449352837`*^9, 3.68639912186656*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJx1nHk4F9/7/+1LkS1EloqElOwlzCgJpbRJkqhUIlpJRaWNVomkCC20l7KU
9JoJqYSUrWixVYSyk/V7Xs6Z07z9Pj//zHW9rnONM4+5z/N+3vfMmYnrfJd6
8PHw8GwQ5OHhB8dgxzvpITrXLBaVN4o3jF5qHv3qzdYZa1OIDToW0ZNta4jH
h0Nf1hmds5imNkYq5sxjIvHHpyF12zZi7mxtozqjBIsvpu4rL9knE+PTxxqk
b+0j7qWcFS4rumVx50LK0iyTu8Tr7CmP1W35SLGo3qZao2SLcaKxdwMNbxB8
Oi/zt1YKkS+WTStzOZxqoXPPy894bSxhHrHuR9rW0aSfpBtVWvTUol5Rbflq
Kpzw7x8CfxLk1ILwm4tUOBYxM56GbRhzjFj1qPCUuq002ZJT87rW6IXF1uuy
qbq//Am/jbEKtuFjyQVq+83jXbItem51xqR/30ScV/RO3FopR944JPvI5fBL
i4RRCxxF+RyJh4WmBuHqCiRP1X0NhduvLF6nTfH5cm8OURgsSqdtHU86W9hc
Li16Y1GvnFn0beY0otH448LKNGUyNaZaIrz7rUWdDq/Wb0lZQqgx8dPQkCop
3rf3yCKVQgsdBenmroE+C+rD5IO+1gkWWR6dM/dcC7NgOMfHZiqeC6gi7v3N
+r0w8x3BcI6bGBoWFtBCKPmdrFuQ+Y1gOPt0PD7vlNZDPEqvuDmz4CfBcI5b
77sgLICHdEzxXbsg8w/BcBYqELDviBIgA534Rj8obScYzj7GlxY5pYmQ78oW
bpxZ0E0wnMvidB0yS8TIiSuiXrzI6SMYznFHajTDAiTJncXVSgsyhwiG87JZ
97SyQqTJGk05s1+feEmGs9Bvf+2OqLHk6M3PGu6X8pMM54yrc6ZqJMmRhklu
UTvfC5IMZ5+V4jpOaePINT8E580sECYZzpPEPuqceKlIHpt8p63/tSjJcC6h
r07LLFEi721wiH+RM5pkOE9rH1tTVh9lEa1H71/QF4s5ez6+VGpXUEZM+pVc
lxn1GXN26l8mZ1fwg5h9przjWVQT5hy0uNmtW6GVSJG58yx/eyfmXBT/MM22
oIuwdfu1/1lUP+Y8qW2nWMzBfmJb2VjV0q+8JMM5I2G8XrcCL/lsf8qB/O2C
JMN5vd3A6vh2flJIbXlVtoAoyXAWa/96zLZAiFzypp18FiVGMpxTL9PJbYmi
ZGH6G4dVspKYs6vV1c+XD4qR7ScUeEu/SmHOIs2Hhec5S5AKrp7JDjdlMOeP
efoK3QpSpIXeU/f87bKY87S4a/ffHpMmNwiIStvMlsecD+4caxXfLkOGlDtl
ZQsoYM5bxzW58EgdshC2NLngn3wVc15WcifxsjVNzBZf3fKquBpz9nqvpnLZ
uogIdXjn/Kq4FXO+96R1c73nR2K34vbnt5/3Ys7d7759umRdRejtEJV8VcxL
Mpyjs60PWDrVEVNWOr94YiOEOZum31Ov96wnlM3u7Lj9fBTmXHl7bN6ZfU2E
zMR+tRh9CczZ4t3z9EvWLYTg4cRfucVSmPMY2+2jfBa3EQc7F2UTY8Zizt+y
1NdYOnUQfZu6Lz+xkcOcH5p9fDDWvYvwq4jbpXd4HOZ8MO0kX71nD9G60Mb+
9nNFzHnJDGLFsx29hDfVMlmtRwlzVr3dlnRmXz/xXS968LK+KuZ87Prvs3xS
hzgHR8n7sTmvPRVNxVrTFF9x+ns252/+Uiax1kXUEnkdMzbns1qOZxo9P1IT
5+0/y+Yct7WgLca6igqYtbE1l8V5T66vipVTHeXuMOYym7ODqrRdo2c9Zbcp
zYrNWXNPyu7wfU2UfpDr78sszgc33ymKsW6hTtvx57M5N0Xs37htcRvF61ge
z+bs9MK+f65TB7Xb/c5uNuecZpVwefcu6pf3ATs25xmKLVMaPXso1z3LVNmc
Y6xfPOfs6KU+HJ7SMYnFWWhn+LLwff2U1dm+12zO3UUl2eX1URz9jCev7Vi6
Ub3m+90FBWXU1e28s9i6kRV3pRnoBrV6/BRbtm7Y2Xjw9Si0Uh2cH6Zs3XhM
9p22K+iiZrXMep/B0g2lWecUYg/2U3RY7uMSlm5kXzz/AegGvV6rZfAtSze6
I1zHJbTz00JZCnZs3dA5p+VqVyBE33KeG5nB0g230x3X2hNF6cQA4xYnlm5E
hlINMQfF6O55byNLWLqRd/SErrWzBG0r7TabrRtD9O0MoBv0pa8dVW9ZuqFA
hK3JPyZNN90OPTafpRv6z3fzJLTL0Gb+Kjps3bD+/IYD8iDHT+adoT8rD058
E+AI8iClkRg2aMfKg9oLrPNBHqQ+6q/qsGXlwZfJi5tBHqQcRFMNTVh5cMYp
neMgD9IGAea+tqw8GEgkR4E8SJ/sqCm5x8qDeW1GN0EepAN1prQZs/LguMSM
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
+Sf4mL6igZ4GW9W7s8+f7pc5iesPODUdS8tZ85e6Odufm+caxs27Gs+av63G
lGNc39biutWPl6UDO9zzarn+Y9XZrMAw1npnxjfC8ZyR4x3geArnUzSfTDgf
PF4GzecnnA/OC3Loevvh9eLx6uh6D8HrxeM/KglJsHji8Qellx5j8cTjq9H9
ioX3C4+3RfdLCd4vPL4dxcMfGA94fLcVjIftMB7weCbe3N7f58Ybh4m3VUg/
HaB+Yj6/frwdeDo1i0h6Mv0orzsIyptZP38sSSH0FXZcVZ2tSu5QknR9rNFE
XG1ZZ/LyPB/RgMbXwPEUM14PjS+D4ylm/O4NQ4fviF+zuFR7XeWOznZ8f4fM
d6albVUl/a8t3xQXUWDBjC8pjNLTss0itNunatYDnWDOv3bivIWB+arkWrOq
+c9uNeH5M+MXG7+cAsZbMOPd0fi/s4fH4/jZieZTDufDGTmfWhPBzWA+HGY+
n97XGnBKPhOr9+05n53zliiOKxx8xnlMhOiP3snD00IUPZ14aLHKFQvPwFrr
9b3JRNmn/arPS5qIvG4yNCunkmB+/33z61oenh5CPemW07MLiRYPa7Z3z3lx
n1j7/XD46bhOouPjuuvniusI5vdbEqs0eHh4SLftWS2LVO5bPLu/9MfKtJtE
yRrbyMySfoLPeLJAVk4jwfz+OS9LiYdHgCyM3WrV+uGRhe0BvZq1SVcJdS/h
/E4BPjLkTbveX+dWgvld4piODA+PCNnEt1fy2YU0i2tCY4uDdl0i1k7ZYn86
TpCU7ClxP1fcQTC/W1peEOXhESNHbT72+YhzhsXaMIstu+LOEbuQP9FEzxNv
IH8SXZtfqG4qSkZppJ3TWthDMOOLkW9UQc/FmPEllYZ9Q0NSpHr0YlOxVtrC
6Mzfwge/Awjh6W/qb5lIkomH97SuMh8imN+3PvXsGhqSIR+/XTGh9UOWhb78
mD1+170J9VN7b3UKSJPyn+5K/nXmJZnfhaKutA4NyZJzBlcLlaXkWNxvV9gg
+WQNYflr6hbLDzKk87ZYzXny/CTze/yu4qahIXny/Yx1TRkXci14pxrVUN0L
ibU2X7RPx8mSV4TPkOeKBUjm91lLReqHhhRIt/WbP8TteW3RuDFRe/UxU2J/
4pnGj97yZM2VIKcvZ4VI5vcPuua1Q0PjyT+RPk+OOOdZuO/Rlh8s0iCiBci7
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
QyJknvMk+2i5PszTE+ntwKT/9t8kMo8aiw0Ik2INRZLl5aNwHR2kULb0pY0Y
ucLSLjwXHBmeU3cIhO7aJElqS2kPZSwRx/Wdey4xg1s/J/Q3K+wAusvwHL35
pfxaQ1lyuk5PtLX8GFzfSWn7zFqSKk/KbN84x+StOK7v7Ce7rL+b/oKQWKxb
UU59xTx/K5kvsgNxWTOz8hM3ThmevLeTd3u61hCUpt7aJTpdmGekVe0eCtTJ
tj8U9J8DfWV48vpQ/vNXtRPbB8iJkw/x4v7Pa4FW/8uAY2X63OXWgCvDc+cO
fv5fBjzk3vSKsa2lQrgvwXMH+oQxI/psQ02SMfG/24nEvX/m1i/41/95sFdD
XgnE5aOVbuXcOGV4PlW2FTlZxkPus3s9027ZWMzz4UUlJ26dPPteQDxXX3F9
4X1YZu4UUXJ+dXPl/hdymCdvVaW2EeC4LfR+NZcrw1O/cN34ym2p1C/ecW5z
T/3rp50Ri9r75FYm9fz6oQ1B+f/6aYF+0a96jqdSC8zr2lZ0/eunJaw89WcR
0NkBSaijDM/LqTuez2t9QZRcLVBt6/7XT1u1tMPICqzzX6d153PXPe4/VM+2
epZVQ9gse7rk6aV//bRB//+8n4Z5PtdIqe1Qqaf2XLqUXsf5x/POhFnZ0r+q
qcjb6zcWfvvXT7tRfObhtcxiKqr21BO17n/9tKOxfxsygI5f8YM6yvBcdbzs
I7msnLjSvG/p8c5//TSzoclSe8E6/7O6Po+77hmeWlcrlPYd+UA53xRJGqtQ
gXnuclH9ulmomupRvNO2Zlwj5rlJenpJi8lPKuBLXtxa3k7M081MYuoLkO+J
mjNvMlnxWTRf2t4l9jfVeXL3xrl7+TBP1x/9y1tT/lAPtzbJzUwSwjyDydsV
Prx/KH+71b8qfo7CPH+jukxkRN8sxXKzsmipAG0sd3i+kYs45iky23cHn40g
rXbqjZHpH0nMs1nj3NoY8PunK397LC1lMM81Z57HhoF8b+wltZQdn5u8M2Ns
fvDTz1YpbVwpOA7zPPfZv7c6iI/+3FpEvNiqiHnOc3LcXcb7mZLJoYotOwsx
z/qr2fqu4xqpuhXKewBXzLPB1SW9MLydGqz5mJKW24h57gmd9p5b31ZfGWqI
Z+nn06iyk27FA5Tn2q4j65N6sX5uX+jW69fDQ0+12p8BjpineldC4NqbfLS/
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
7u8MeH/x+CUoTqxG7DP9P6v5w/g=
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
7G2wH1FwjFPOrr2fmdg7Z14X/bCtSt4z0Bq9JPM6XQ1/k3kNSm83j85/9c71
89hROx93nUiH6bl6pvT7JdE5iPR20+i5JA3fLDrflPZuFf1uH2YeO42b4p3y
BdW5lgTPV8035abVovNTxVBpRdUflW/tHZ1zySfNz+yX5As/z+wPVXPdkjkP
lZ8ekNlXa31vzrzGr4NHZq59KS7Lp6suo7yvVPQ+oPK1mdH1NNUN+kQ/X7WO
IUV/e+X19aO/hbSs5sHc/P2r5u+pesUh0fsyqoccHr0XI3/+cXKdTvWNQ6P3
a05N1mnSEao/1IvOU1Qn6Rj9/opZw4r+PdWkx4qeE9I/mieaY6p9HRSdO6g+
UCl6Lh1I/7FF67Yvcx8h/6DnKG+S3pmn/59cG5U2UO4nXyxNonxP4646W4vo
76h62oHR+cshyRpV80R5r+alvrtqj6dG197lw0sU7Zc1J7URI7+m71siep7P
SM55pXdUq9La0LpQXWtRdI1Xeldzd37u9/5O9mWqUTSKzt1UH7stWn+qLtE4
Ov/amHkdag2qhlA6es9XObD01op8rLRvKL2jnGhZ9H6f9Kk0rvSt8qn7o3Wv
akp1o/NQ1WFqRu/NaX6NzOdYA/ofW/R8VW2kSXRuqO8+vGh/oXrUftF5rr7F
Ydifwt4quaYt7aa6UPXo/TX586OL9h3S6jWi9wflV/sX7WtUL9o3el9MYzui
6PWvPdnHsW8ouE5+R3StVXnNhOi6sXKiidF7N8opToie51szr1utWdXM74qu
2Sp/OTl6T0f7vw9F52jKOyZF74NMw16/6P0Y1dYqRO/BKRcbH10rVm4yOXpv
QnX45dF7Ftpffjg6J1XN55/Me3Oq+fydeT9O9clu0XuXqtuUid7HV4x4JXlf
U99C+/i/5O/zZnItW/vR2mPT99Vewz3RdctfM+c5+tbzFaN5/5cyx+h9io7r
2ke4N7oGqz3xR6LzZe0d3B1dF30yWMdpf017fCui81DVEJ6Ozse1P/5odD6u
vZ7WRe/ZqObwZHTO+GvwvNC30/7gE9E5uObnmjyH0nqcUHRupr2Vp6LzX/kJ
1cTkK5S3jo7ev1CeOzJ6j0a/cVfyPrd8hfymfKby2VHRezdZ5jH4uOBaxNjo
fQfN1fFF537KhcdE7+P8H8KxE2o=
          "]], Polygon3DBox[CompressedData["
1:eJwtmmPAdEfWRbvrVsfJF044sW3bdvK+wcS2bZszsW3btm1PbEw0mXxrZdeP
fp5at27r3jrn7LOrJ9lo+1W3K71e73D+VP7P3/V6DzM4sN/rDYWnhO+Et4QX
geeDH4IPgIfAB8L/hp+Az4cngm+FN4TnhheDH4GPgDeAz4K/gz+D74P3ht+H
H4TPhM+Gv4c/h++Hp4DvgLeAF4ZPgL+C34RvgDeBX4CvhA+Ct4FfhW+Ej4aP
h7+E34CvhzeHX4avgQ+FV+J7H8x4HcZf8ziO+S+Yf51j18Fbw6/AN8BHwXPA
D8B7wqvA28KvwTfBx8DX83pfMn6I8X95XAi/Dd/M+Dcem3H+S5x/NccOgTeF
X4Svgg+Gt4Nfh2+Gj4Vnh++H94BXhneG34bvhE+C/wV/Db8P3w7vCL8J3w6f
AI8L3wivDc8KjwffBK8DzwaPA98ArwXPAq8PPw1fDO8L7wS/Bd8Bnwj/A34S
vhDeG94Afga+BN4PHgO+Hl4dng4eHb4OXg2eFh4NvhZeFZ4G3gh+Dr4cPgAe
Fb4GXgWeGv4/+Gp4ZXgqeGx4Kq7pUHhmeCT4SuaXhyeHN4afh6+AD4SHhy+D
l4EngUeEr4CXgyeDR4Avh5eFJ4WHhcfh9ZeGJ4bXg59i/iJ4H3gd+An4Angv
uA9fCM8PjwNX+BJ4UXh8+BT4G/gD+A64gy+GF4bHgwt8EbwgPC78B+99Ljwr
PGbPJ/Be8Lzw2OCp8Lfwh/Cd8P84/zx4dngseELmb4E3gOeCB/Cl8OLwBPCv
nH8WPD08Grwr8+/Cd8P/hGdjflPGCzD+3OvP3PAcm5Zjo7qmGZ/DsZnhMYxP
xltz7Hx4T3gXXu8djt0Fnwz/ztzZ8Izw6PBezL8HPwCfAe8JH8k598OnwwfB
HzP/JHyBzP83mf+K8do8JmH+duY35vi88L7wh/DD8NnwlvDaA3JSyf2ZFx4B
3p75pVo8DTNIPjGf7QavA3/C+f+Cp4e7Qa6f+Ws2eABv3vKP+W9EeAd4afgQ
+B/w5zz/IngeeHh4O+aXhCeAf+fzrQhPCW8IPwtfCu8Pbw+/Ad8CH9fWl9fz
Ax5bw9N03kTeg/k5GE4HF3j9dn/ngoeFt4EXh+eGh4O3hZeA14KHwu/zervD
08J9eD3m5zQn8f8H5v5g/AKPK5n/ic/zK8efa/H3a1t/ru+x4JV5/osl8TEZ
vCr8CjwT/Av/n/bzu7b7iT/jafp2/0eBf+H15m7r2Xhbkec/V7IeXe8/Mz8n
88OBP3P8PxYouM/jCx7fwr9z6EHzEeOTOLYV4295LMTz1+T13uL4CvB58Ebw
d/At8Czw6vDr8ILwrHCFN+M1FoKXhR/j/U+AN4dPgjdg/mvOv7TlS/PPMi1f
LNXPtfiU8UQ8/s78f3n+Si1fHQV/Dr8EXwW/xf+vOP9Xxje19XZPzXpyfZ7X
z736jvEePI5k/jPmX+T4lfCJ8PqDvMaNvXx318r3vVyDfzF+hmOXeC94HMz5
n/D8pzh2IXwR/AP8Hfx4i5e9eM718JHwVPBdzG8FLwofAH8EPw6fBy/Cubsw
Xp7xlzxmZP4+5nfi2DLwOfCGg9yjB+AZ4HuZ37HFyz7wB/BD8Fnw4fBpnPs8
fDl8BPwp8y/AV/h9+f8O89/4WVt++6PVg6lbPfitJl+b37eA1+L9P+I5h8F3
wJsMsobegw+F14O/gE/rJa+59j7uJb89z3hJjk3I+BMeOzN+jWNfMF6Ox8Q8
/zbebyOOzwNfDP8Ifw8/0Yte+bOmPllPzYvmoh97yY/39vPe3ptTedzI+f/h
/D7HXodf4v8anDMD4894XMX8xoPE6PPwdcx9akx4rXjszvy6gxzz/k0O/4/X
G9Lqo/l++BaThtHCzI/E+bsyvyI8Pnwz568Lz97Ld/E7WVtuLdFiI9XcSzWZ
a9k1ba49syT3moPNXceW3Ltas1a9h661kWuujWvO2mUNMxYuL9GCI9ZoPTWh
Wmb4mlqpplHrDVez1tV8arlha7Sfmk6tNkyNtlOzWWtHqPn81lzX2v/a53XN
mfutAWqpxUu05x9d1qIa1LX+Zxct65o3969akxusAebelWpypznY3GsOXg1e
uiT3r1mTe7dr77daTe2w5lhbVq7J3dYYc88qNbnIHGTuMweaG0ctqYX9mti1
Jqq1FerWRjW3sV1qao8xbm39bxctbY01l49Ss3bM6eaSQc31N6dYK9aoqR3W
jFt57jLGC+NnOHY7vBz8S6sHV8ALud760e/Wi4UHuXfewwvheeD3+tGjZ8Jz
wK/1o6fV/3MOcq+8Z5fDC1p/4XvhS+D5jF/4LvhSeH7rOXx3L1pNzab2GK9E
21ljrC3jlmhdNa/abhp4opp6oM5X31/G3ALwx7zePS0fzjvIWnPN3QYvC/8M
PwtfAM8NvwvfBl8LL2L+hR9p8bvEIGvbNX4TvKTxCj8J3wAvbj5s+fYWeGn4
J/hp+GZ4KfhH+KmWr5Yf5F55z8avqVfmXfPt2DX1Vp2mPruO8xe1PnH+o/D1
8GLwN/Bj8BjWokHymvlsVHgF+Bn4I3gstfYgecd8cz7Pnwt+x7XQS27yO/rd
Hi7RDivWaBE1hLlu+ZpcY85TK3/apXdQM9vbfN2l17HHsXf4pIuWtoew1/is
S+9gz6G2/rhLb6HGtlf6pkuvZs9k7/Ztl9xuD2dv8nOXXsgexV7t+y69nz2b
vdRPLT/ZU9kb/adLL2OPpPZSg6nF9i/prX7pol3tsextPm/z9jj2lj906fXs
MdVyarod4B1Leo8vu/Si9iDGzhk1a8kYMrZOq7n3xphr7fSaWHPNeW+G4fmj
9HKPXAtn1sSea8K19s+ateSac6255t6AHylZS6fUrD3XlL3VF116IXsstfCQ
Gm2qJlbLDq3RHmoQa8NaNdrJGuFaPbVmbbpm7bW/6tKr2nPb+/7YpVe1B37c
9akGgDcu0VL/hrfoRVPZG/zapdewR7D3+K2L9rYHUUu8awz2oinURm930Q5+
PrXEO120hprCWrdcjfa05qm9lqnR2mowtcKyNVpMzaBWWKpGu6oZ1LZL1ORb
Na7aVI3q8yfk84/ZJX5eUMP2ouXV9K7/6Tl2Nzx1l9o5T0mv/l4Xb8Ce/UFr
hTEJL1XiHbyvZu7FQ7BXe7lLr2E9UFu82qW3UWPopbzSRWvoqdj7vGaO7KUH
etTc3V5vjRKv5s0u2k3Pxt7PHnBk+G8tP77YpffXE7D2qwGmgKcr8X4+VEP1
4gHp9XzQxQvS89HL+ajdXz0dteJb7fupGfVq3ujSW1nv9BpeatdHz8He2B55
JHNPSe9sDz08PHpJL2xPPIK5q+T+2IN4/yZq+uKIVt9OL7mfakDzz5Ql9dke
yfU9f0m9VWO7vhdo32/+tn5WLPl+87X1tULJ91us3b/VS663Padexqwl90cN
qJcxS7vfs7fvu0S7v3O0679kW//Ltuu3bsuf9mDqg/lK7q+emV7IzCV6wJ5E
bbZoyXq2p1BvzFCif/S0rP/nl+gjPTH1wQUlesuaZi27pUS/2MOuBC9Woges
2dbqe0r003FN75xXog+ObHrojKbPrNnW6mtL8r0ad2F4jpL4U3Oqj2Yv0V96
Huq/y0r0nB6VWv7Spif1+NRv15XEp5pePTRjW796jnpVc5XEh/Nq/ZlK1pfv
r7aes6R+6FltZz4rqT96NtvCGpvWGz2rbeBtS/L3Nq3+7FNSb/7queFtSvK9
ntb25puSerJ1q0d7l9QjPbxd4d1L8qEe5M7my5b/9aB2gncpyb96XDvCO5fU
Qz2/XeDdSuqZnuRu5ouSerVdq4f7lejXfVp+Pabp1b1b/Tm6RA8e2OrfSSX5
dNdWLw8ryZ/Tt/yyYEl+nbHll4VL8ukMLb8sVBLPU7X8MHerhzu3fH9ISTzr
IU4OT1uSz3dp9f3Qkvq6Y6s3B5Xo6QNavT2xRK8e3PL/P5u+PajV25NL6sm2
TT/sW6Jn92r1/KiSer9Tq68Hl2irk2u0jhpLL9MefVJ46pL3nnqQWn9iq6lL
qMP70T9nmJuYfxW+Fr6X+d8ZT2Bt6cXr0vPiX2+kEu/s19ZLjcCf071W+h+c
fw3HTnPtwi/DV8ND4Ynh4/vxE4bAE8HHwZvBH5b0/Pb6P/Sy1uzH1T6uOdfO
pGqEftaQfs4kg9RSa6remh4bh3sj8n9NBhMyfyzzm/biJeopcqg3sjWsxs/Q
l9aP1qvVs9UbnLzEq9Wz1bucrMRb1WPVW5ygxLvUwxwRHrPES9VT1ascv8Sr
NV/rFU1c4uXq6eptTlLi/eoB631OCk9Z0697Hfz+U9f4cR+bq1xjNf7aZ/DP
vXidep7DMB6lxBv1y+sVjQbPXOP36MPrv6/B3N/hY7gem1iD4dHhfeE14KXh
MeD94DVdk9YS/ah+/Ahz1yyD+BPmMD/HPYxP6eXzWIv0L+y1rEnHwjNw/mP9
+CUnwzPBz8KXwV+asxhf3IsHtAPzkzF/WT/+9/7WOvi2fvx7177+qFrWGDC2
Jh9Eyxlj+qdTDOLfuD/hdbuW8eG9XD/9lWkH8Vf1Ww+z1sD39eO3mvtnHKTX
tQYcba2DH4HP6aUW/t8gWsaauCg8Crx7Pz20tW2sQbSBNW4JeFR473564iXh
0eB94NXhZVwr8P797B/tB08J3wofb811LcJHwxvDq7h24MP72T86Bp4efhQ+
F14JHhs+FF4PXhH+G3wI/A94ZdcifBi8fi/adLxBtIsaZjXXOnwUvFEvvdSJ
Nb2dPZWBowe7OMN5S3rRo2t6U3tS/e91/c79eHDTwHv4HfvxaGaHZ6vJJX/y
mIrxVq7BfjyhSeDl4ZH78bgmh9f2mvfjAf4dXtB468cDHxeeGR6+H0/KXvaY
mt7YnnZMxn9jfph+PEm9rzmMkX48sNEZD8d87cfzsle3Zzd/3sT8QsZ3zdoe
i3MWZjxdTa4Yp5/4fqrVY/X0VfDIXnM/a4vvZ5o+co/H/PFkF33pHo39+mMt
P+uh2s8/3qVfdw/GfPJEqy/u0eglzlDj9+op6oXNUuNX64nNyPhc10g/58wJ
32nM9/OdZ4Wv9h738xx7W3tc7+8NPH8Rrz3HdutHI5mbh7T6vkVJbjBHmEvX
Klnrrnlz+TolsWBM/LW2Sta2a9zcvnZJrjHnmHuGlsSSMeVaXq0kNowR1/qQ
klxhzrD3vqikH9Oz+2stl6x9Y8Bac3ZJ7BrDeivnluQec5C17JwSP8o9CXPd
siV+j3sEf8ViyXf3Ghg7q5TkyjWantmsJBZXb3pm05LasmbTL5uX1LahTb9s
WVKbrFHuNWzV8v/TXfSte3rGsjGtvtqwJDaNUfXbBiX9qXs25uLlSmLVmLW/
3qikX1WvmzuWL4l9c4B6b/2S2DcHqPfWK8nl5nS9m4tL+qFHXB+97IlZzx5q
9c49OfciFquJjb/2JBg/2kUr/Nv1Az/fxUsZcP48xluNFzOcOY/nj1MTm/rG
CzD+rkttG435+eFJa/YqRrEGcf4ENbHtPpd7K0vWxK77CvOqt2q8nxH62cuZ
rCY3uE8wBJ64Jnfok8+nXq7xukbi/LkZv97F2xnWnOM9gV/qResYu8bwCv3E
6J8cOx+eq5+YnrSLP/RySc+pN6FH8Wxp17BLD3pky6fLdflMfpYtWr7VEzit
n3toL2xPvFc/PeuCxnaXWjUGxxbock28Fvag9tb22Fv302PO1OUae231CNyf
/I3xh73sOemX6KG9x/ipEq9Sz1L/5a6mF+5v+sR+X+9855pcrYeu16fnp5d2
Y0l/+kDTL+7x2p8+2PSLe7ZeK6/ZsH6WEn1yX8uH7smqH+9p+sg9U/cmd6jJ
/e4LqN/u7uJnukeqXru36S33gNWbd3XxN91D0//Rj3Ov4KGmf/UYX4MfLPH+
9ABfhR9o9UoPVf/m9hKv0/5Q/+jmEu9VD1b/6c4SL9f+UL/p7pL6omeqX3VH
Sf/+cBe96B63Xqie6MvwfSX+lh7y2/DjJfVUj/IV+P4SP0xP+V34yRJ/SU/0
LfixEj9MD/Yd+IkSP0uP9E340RItpibTW77E/M3nmalG643XT35dt0abqFne
LYk3f9/h7zzUJmoUa/2aLT+vX5MP1YTm4/VqtIuaxXy+YU0+UrOYL9eu6c+t
Geb/dWpqh5pIr1vPWy/76lYvNqrJV2ok8+tWNfleTWp+3bLm86h5rDcb1ORr
Nan1aJua+mPPYL7dtqa+2FOY7zZWg/SieczPW9fUG3sAtY0ax95hk5aft6up
X/YQak81qNrrgBItpiZT+x1Xoi13qdlbUmOqPXeq0apqULXqbjXPV7Paa+1e
o13tuaxH+9RoNTWx9WrfGm2s5nQv4NCa+uWegL3YwTX1zZ7MXsqeSr11Rbv/
B9RoczW5vZE9kp9np5bv96/R2mp4e7ODanqxV9r9OaSmPronYb3dr2ZvV41u
Pdmkpt6qKa1Pm9bUx8Na/dqspt6rSd1LdE/R57v3aq/ibwL0M+0VzC/u0bnX
6G+s7G38zYH+tVrdvVz3dC/qpTcw/7vHrp85RYn3OGarV3r41if3zCeGxy7J
5+rLh3r53ZF7J+6h6P/e1vLBSTX57Jump9yjdT/tmxb/x9bshbgHY748rmb9
ftri+wRjvpc9D/PD8TV7P+752Eu6R+7e+oVNn7ln+QD8fUkv5h68z7++1Str
hLn97ZaPjqyJ5/dbvK7QxY9xb99+/oUufpC/UVK/HVbzfu5RqA82r9FTanr1
7BE19d49KHudPWqu/32tfqpPrE3vldQaa4615I2S/OyeuOt9z5LedIumZ+xR
3UvyNwbGm3tK1iJrkrXx1ZJaac3UK3ZPxb0bf3Ogn+4ejns3/mbC/b7Zmp7b
uybe7Gk2afXLvZ+fSuLNns94OrDk+9jDub5PafFpD2gvd0RJPNpDGm/Hl/R+
9oDGy6kl8aknYvydUBJveiDe/6tK4kVPw37iyvb8PWte//4Wr/qB3v9rSvyD
59r39Tdf+gfPdvFL/c2X9fTwGj3rHpq9pT2m8XgWz/9/fOoP1Q==
          "]], 
         Polygon3DBox[CompressedData["
1:eJwt13nAVWMeB/D3vb1vITW0MG2S0rRoX5QiKqVdu3btSnuqQaRVe1TaZWnV
PlpRWVopMqFIYeyTIbsGMZ/fnPvH973n9zm/c9977jnneZ5botfQNkNSGRkZ
hyRb9mVlZLST2+D9mRkZ90kdO6aznewT9afSJEdGRi/Whc1R93NsY3Yn68Rm
sT6sEevB7mAzWW92K+vOOrIZrBe7jfVkndls1pcVUReWG233Ze/ZV1VdRb63
/RXbZ19JxzZj1Vk/dhMrrf6OP2x7c3xm+zawhnKV7ZashdTU8y9pxAaqG+gv
pm6qryLrET2sKGvCKrDurAYryBqz0qwjq8RKseasBuvP6rEC6kZyLevAKrKR
+n6RiWw9m8hWqfPo28E+Zi+wFqw3687msbtZfdaVtWUPsx6sFevL7mSPscHs
MnZUrmZ1WSGWKzu5vo3Z3WyQTNFzL1vI3lSv1TeZ/Z0tYMfYmjhf9Xu8ru0+
7B378qiPSFHb1dkV9p1Pf8/F2PWsluTXc0xKsvrqovouV78uJdhNrDDboM7r
2L3sLHuF1WOd2O1sEuvKbmFdWBs2hXVn1Vjb+N9sDGsV97W6m3Rg09k0aamv
D+vB5sd3oO9m1pm1ZpNZN1abdWTN2IOsPbuetWdN2FjWltViHVhT9gBrx/Ky
W1lx1oqVZjewO1hzNo51YFVYa1afjYp7kpVlLVkdNpg1ZCXUV8sZNoF1ZsXj
Xo73s30PO23fo469iD1t+yhbad8dbAgbyJ5go1lHNpgNYMvZKNaWDWB92RI2
nM1hOdmT7DX2NHuE5WJPsSNsBftEPUpms4PsgDyobzSbww6pl+trxwayfmwp
G8Has7tZf7aMjWQd2CB2F3uc3cMWsIvZGnacrWfH1ENlBFsb96k8ri8328xO
qZ/VV959fx9bmko+W3zG6fqy2RK2P47T9zf1MLmXbWFTWVXHjmfPsLfjvpeF
jr2ErWVvqTfom8ay2GK2jy1jg9kPMpatZA/E+6nb6GvARsf9yCrG2CLn2Gm2
jQ3S973cz1awsXEe6ttjTGRDWSN2O+vHerIFbAhrzfqzXmwhG8peje9T+rDF
bJGU09eK1WVD1Lfq26NuITekkvEhxol8+t6Qa9jN6iL6asY4Jz+xX9lxVkPP
R3HvswGsPmum/izGLDaedYp73HEj5WH2YnyfbISen2UCW8cmsIbqT6Udu5e1
iXEtO3mm26eS+Snmqbv0fBtjVvoeH6NvjPoefVPZS3G+LF9873Ila8yKs2H6
RrDxbBebw0ax/8pktpFNjmdMfV4mxVzCJrFTjhsuD7GdbIeM0zOGPcIOq5/Q
N4T9KA+wVfFssJT6FcnH6rBL2KXq16RIzHWsIPvN9u6437yWZzYzdvqz2P94
jeWUM2wXW8KOqHPJB+w5tpQdVV8kH7J/sHlsn/pP73eSbWFz2SvsD3aC/ZiV
zPu72A/se1mtbwZ7jv2oPhLzK3uUvcwuxPPBdrBF7FWWHfd0zBnsP3FN0s9+
POfPqufr2x+LEHnXyza2gB1S54hnmM2K7449ET2O3cx6sC9jbEvPeXHfz4xn
Td9ydpJtYr3ZVzIyPa7FmNNX/bWMSo85Mb48FesFx25l38QYwbazhewwy5L3
2Qo2jW1Xf6vvMHuaTWXb2LnMZD31s/oxOchSkhlzuL5xbFVcC3079a1hM9nz
7Cd2lD3DZrPd7Bf2BqusrhT/1/YZ9p199+v7Xabb3spm2jde/WdcE/Y8m8vG
qi/EtWPb2Cx2nfcqL6ttv8G+iflLzx/xeWxvZ7Pty6/nn6xCjNXxnNtXjuWI
82Cvs7OsdHYyB8xKJc9BPA8THZfJ5sU9rJ6vfy2bxV5gP7PX45mO682vijUj
O2ZfKVZSPop5jQ2wb52eOWwPOx99rD87F89cei6L+W2T+hF9L7Hf2dvsgu29
/FKvlTKT9W4/9TcxT6XnmZgHu6u/iPkxvT6ItdSV3uuKrGTtFmu4E/aVUf8W
9yrby75g3dSfx9yVStZrsbYokp2Mu71Tyfoj1iEF9LwppVhDdTF9d6r/LUPT
43iM2TNi/Hfs4+wE28gqsDNyE+vJarM4mRiza7OusX6Rp2JdIZelkjVYrMUq
Oe5DuZn1VteJuUf9gdRjvdgNrK76Y2nBhrMmMTeq35frWWdWjZVRn5ZarAur
zgr5n3+Vk6lknRjrxaF6fpIH2eoYI1lp9SmpyTqxqnHts5Nn5kAqGW9i3Cms
5y0py5qpS+n7JX1uf2E1WE3J1POyXM5qqy/Wd4n6sBRiFVl+llv9qhRmleNa
sBzqfZKf3chyx1eqPiAF2S0sT5yb+riUYU1ZSZZTfVCuYA1YXpal3i8FWD12
adwH6relHGvOrmVns5J1ybJUsq6I9UXJ7GROGZdK1jOxrvlNfVs8r6nkd0v8
flka8xPbxL5Uv+j9FrOJbAP7nO1hE2LCYHPZC2yecknMY2wj+4LtZddkJ2up
4alkbRBrhJ76zsqw9DpimL65cR31rYw5JuY8Np89FGMJ+4jtYk+yKexZ9jU7
wCaxFJvP9rDHWDF1UTnFRrJm7NusZM21LpX83ozfnb/HMY7P7bVC5v9PKaOE
+qRUYW1ZeXa1+oRUZm1ijRNrZfU7Uom1ZmXZjepPpCUbwZqy0epf43OzTWxK
fC/qd6Uqa8euY3/EuoXl8VqF5Yy5In2Nrkslz188h3/G2kNfXq/V1Ln0LVJP
0LeefcZ2s+UxLrEtMcewrex/WFDlNQ==
          "]]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwl0rlSk1EYgOHzk42sBJcICjruOE4EB0HAJMo4VFJRRis7LbTVK9ArkKGi
0s5OKkq5AgHZUcfxGmDcwnO0+HifLzM/yTnJ+cfP554lIYQFcwWiL/jzXX92
hVDVtL07FcI5znKNb/Bk2uv2Jk9xgWf5Dpf4ITe4wk+5qo88+5KPxdf4NZ/g
FzzPNX6n9zzXx0s8zad5hW9xR4fsq3pJB8wvs2b/rev6Rz/rX93Qjm5qcKYt
SbTLbHNKd+I5dVczuhfPqvua0y/arV/1QBP/75r5Zr+sg2bZGT7Zz/B7/sj9
vMgf+BS/1bvOcJLfcIuP8ytucm+8C+7RtueecDneK7e5yC1+wHke4QZPeDZn
r/NtzvBZ7uUfetXeoxc1ZWZMxX5fy/GOtRQ/mxbjZ9FC/C41H7/r+BvQcR0z
OR7VrN7UjA6rtwv1+B56Pfl33eEw3nXy//d1BP4pM9c=
       "]]}, {}, {}, 
     {GrayLevel[0.2], 
      Line3DBox[{299, 522, 1180, 300, 536, 328, 1274, 550, 343, 1278, 564, 
       358, 1284, 578, 373, 1292, 592, 388, 1302, 606, 403, 620, 1226, 418, 
       634, 433, 1317, 648, 448, 1321, 662, 463, 1327, 676, 478, 1335, 690, 
       493, 1345, 704, 508}], 
      Line3DBox[{301, 523, 1181, 302, 537, 1192, 329, 551, 344, 1279, 565, 
       359, 1285, 579, 374, 1293, 593, 389, 1303, 607, 404, 621, 1227, 419, 
       635, 1238, 434, 649, 449, 1322, 663, 464, 1328, 677, 479, 1336, 691, 
       494, 1346, 705, 509}], 
      Line3DBox[{303, 524, 1182, 304, 538, 1193, 330, 552, 1202, 345, 566, 
       1210, 360, 1286, 580, 375, 1294, 594, 390, 1304, 608, 405, 622, 1228, 
       420, 636, 1239, 435, 650, 1248, 450, 664, 465, 1329, 678, 480, 1337, 
       692, 495, 1347, 706, 510}], 
      Line3DBox[{305, 525, 1183, 306, 539, 1194, 331, 553, 1203, 346, 567, 
       1211, 361, 581, 1217, 376, 1295, 595, 391, 1305, 609, 406, 623, 1229, 
       421, 637, 1240, 436, 651, 1249, 451, 665, 1256, 466, 679, 1262, 481, 
       1338, 693, 496, 1348, 707, 511}], 
      Line3DBox[{307, 526, 1184, 308, 540, 1195, 332, 554, 1204, 347, 568, 
       1212, 362, 582, 1218, 377, 596, 1222, 392, 1306, 610, 407, 624, 1230, 
       422, 638, 1241, 437, 652, 1250, 452, 666, 1257, 467, 680, 1263, 482, 
       694, 1267, 497, 1349, 708, 512}], 
      Line3DBox[{309, 527, 1185, 311, 541, 1196, 333, 555, 1205, 348, 569, 
       1213, 363, 583, 1219, 378, 597, 1223, 393, 611, 1225, 408, 625, 1231, 
       423, 639, 1242, 438, 653, 1251, 453, 667, 1258, 468, 681, 1264, 483, 
       695, 1268, 498, 709, 1270, 513}], 
      Line3DBox[{313, 529, 1186, 314, 1273, 543, 335, 1276, 557, 350, 1281, 
       571, 365, 1288, 585, 380, 1297, 599, 395, 1308, 613, 410, 627, 1232, 
       425, 1316, 641, 440, 1319, 655, 455, 1324, 669, 470, 1331, 683, 485, 
       1340, 697, 500, 1351, 711, 515}], 
      Line3DBox[{315, 530, 1187, 316, 544, 1197, 336, 1277, 558, 351, 1282, 
       572, 366, 1289, 586, 381, 1298, 600, 396, 1309, 614, 411, 628, 1233, 
       426, 642, 1243, 441, 1320, 656, 456, 1325, 670, 471, 1332, 684, 486, 
       1341, 698, 501, 1352, 712, 516}], 
      Line3DBox[{317, 531, 1188, 318, 545, 1198, 337, 559, 1206, 352, 1283, 
       573, 367, 1290, 587, 382, 1299, 601, 397, 1310, 615, 412, 629, 1234, 
       427, 643, 1244, 442, 657, 1252, 457, 1326, 671, 472, 1333, 685, 487, 
       1342, 699, 502, 1353, 713, 517}], 
      Line3DBox[{319, 532, 1189, 320, 546, 1199, 338, 560, 1207, 353, 574, 
       1214, 368, 1291, 588, 383, 1300, 602, 398, 1311, 616, 413, 630, 1235, 
       428, 644, 1245, 443, 658, 1253, 458, 672, 1259, 473, 1334, 686, 488, 
       1343, 700, 503, 1354, 714, 518}], 
      Line3DBox[{321, 533, 1190, 322, 547, 1200, 339, 561, 1208, 354, 575, 
       1215, 369, 589, 1220, 384, 1301, 603, 399, 1312, 617, 414, 631, 1236, 
       429, 645, 1246, 444, 659, 1254, 459, 673, 1260, 474, 687, 1265, 489, 
       1344, 701, 504, 1355, 715, 519}], 
      Line3DBox[{323, 534, 1191, 324, 548, 1201, 340, 562, 1209, 355, 576, 
       1216, 370, 590, 1221, 385, 604, 1224, 400, 1313, 618, 415, 632, 1237, 
       430, 646, 1247, 445, 660, 1255, 460, 674, 1261, 475, 688, 1266, 490, 
       702, 1269, 505, 1356, 716, 520}], 
      Line3DBox[{325, 718, 1357, 719, 326, 721, 1359, 722, 341, 724, 1361, 
       725, 356, 727, 1363, 728, 371, 730, 1365, 731, 386, 733, 1367, 734, 
       401, 736, 1368, 737, 416, 739, 1369, 740, 431, 742, 1371, 743, 446, 
       745, 1373, 746, 461, 748, 1375, 749, 476, 751, 1377, 752, 491, 754, 
       1379, 755, 506, 757, 1380, 758, 759}], 
      Line3DBox[{507, 703, 756, 492, 689, 1378, 753, 477, 675, 1376, 750, 462,
        661, 1374, 747, 447, 647, 1372, 744, 432, 633, 1370, 741, 417, 619, 
       738, 402, 605, 735, 387, 591, 1366, 732, 372, 577, 1364, 729, 357, 563,
        1362, 726, 342, 549, 1360, 723, 327, 535, 1358, 720, 298, 521, 717, 
       760}], Line3DBox[{514, 710, 1350, 499, 696, 1339, 484, 682, 1330, 469, 
       668, 1323, 454, 654, 1318, 439, 640, 1315, 424, 626, 1314, 409, 612, 
       1307, 394, 598, 1296, 379, 584, 1287, 364, 570, 1280, 349, 556, 1275, 
       334, 542, 1272, 312, 528, 1271, 310}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{762, 1039, 521, 761, 1180, 956, 763, 1181, 957, 764, 1182, 
       958, 765, 1183, 959, 766, 1184, 960, 767, 1185, 1090, 1271, 768, 1186, 
       961, 769, 1187, 962, 770, 1188, 963, 771, 1189, 964, 772, 1190, 965, 
       773, 1191, 966, 774, 1357, 1040, 967, 1041}], 
      Line3DBox[{776, 1042, 1091, 1358, 775, 536, 777, 1192, 968, 778, 1193, 
       969, 779, 1194, 970, 780, 1195, 971, 781, 1196, 1092, 1272, 782, 1093, 
       1273, 783, 1197, 972, 784, 1198, 973, 785, 1199, 974, 786, 1200, 975, 
       787, 1201, 976, 788, 1359, 1043, 977, 1079}], 
      Line3DBox[{790, 1044, 1094, 1360, 789, 1095, 1274, 791, 551, 792, 1202, 
       978, 793, 1203, 979, 794, 1204, 980, 795, 1205, 1096, 1275, 796, 1097, 
       1276, 797, 1098, 1277, 798, 1206, 981, 799, 1207, 982, 800, 1208, 983, 
       801, 1209, 984, 802, 1361, 1045, 985, 1080}], 
      Line3DBox[{816, 1049, 1048, 1363, 815, 991, 1216, 814, 990, 1215, 813, 
       989, 1214, 812, 1283, 1104, 811, 1282, 1103, 810, 1281, 1102, 809, 
       1280, 1101, 1213, 808, 988, 1212, 807, 987, 1211, 806, 986, 1210, 805, 
       1279, 1100, 804, 1278, 1099, 803, 1362, 1047, 1046, 1081}], 
      Line3DBox[{830, 1053, 1052, 1365, 829, 995, 1221, 828, 994, 1220, 827, 
       1291, 1112, 826, 1290, 1111, 825, 1289, 1110, 824, 1288, 1109, 823, 
       1287, 1108, 1219, 822, 993, 1218, 821, 992, 1217, 820, 1286, 1107, 819,
        1285, 1106, 818, 1284, 1105, 817, 1364, 1051, 1050, 1082}], 
      Line3DBox[{844, 1057, 1056, 1367, 843, 997, 1224, 842, 1301, 1122, 841, 
       1300, 1121, 840, 1299, 1120, 839, 1298, 1119, 838, 1297, 1118, 837, 
       1296, 1117, 1223, 836, 996, 1222, 835, 1295, 1116, 834, 1294, 1115, 
       833, 1293, 1114, 832, 1292, 1113, 831, 1366, 1055, 1054, 1083}], 
      Line3DBox[{106, 402, 107, 403, 108, 404, 109, 405, 110, 406, 111, 407, 
       112, 408, 409, 113, 410, 114, 411, 115, 412, 116, 413, 117, 414, 118, 
       415, 119, 416, 120}], 
      Line3DBox[{858, 1060, 1059, 1368, 857, 1313, 1134, 856, 1312, 1133, 855,
        1311, 1132, 854, 1310, 1131, 853, 1309, 1130, 852, 1308, 1129, 851, 
       1307, 1128, 1225, 850, 1306, 1127, 849, 1305, 1126, 848, 1304, 1125, 
       847, 1303, 1124, 846, 1302, 1123, 845, 735, 1058, 1084}], 
      Line3DBox[{860, 1061, 619, 859, 1226, 998, 861, 1227, 999, 862, 1228, 
       1000, 863, 1229, 1001, 864, 1230, 1002, 865, 1231, 1135, 1314, 866, 
       1232, 1003, 867, 1233, 1004, 868, 1234, 1005, 869, 1235, 1006, 870, 
       1236, 1007, 871, 1237, 1008, 872, 1369, 1062, 1009, 1085}], 
      Line3DBox[{874, 1063, 1136, 1370, 873, 634, 875, 1238, 1010, 876, 1239, 
       1011, 877, 1240, 1012, 878, 1241, 1013, 879, 1242, 1137, 1315, 880, 
       1138, 1316, 881, 1243, 1014, 882, 1244, 1015, 883, 1245, 1016, 884, 
       1246, 1017, 885, 1247, 1018, 886, 1371, 1064, 1019, 1086}], 
      Line3DBox[{888, 1065, 1139, 1372, 887, 1140, 1317, 889, 649, 890, 1248, 
       1020, 891, 1249, 1021, 892, 1250, 1022, 893, 1251, 1141, 1318, 894, 
       1142, 1319, 895, 1143, 1320, 896, 1252, 1023, 897, 1253, 1024, 898, 
       1254, 1025, 899, 1255, 1026, 900, 1373, 1066, 1027, 1087}], 
      Line3DBox[{278, 248, 1374, 901, 1144, 1321, 902, 1145, 1322, 903, 664, 
       904, 1256, 1028, 905, 1257, 1029, 906, 1258, 1146, 1323, 907, 1147, 
       1324, 908, 1148, 1325, 909, 1149, 1326, 910, 1259, 1030, 911, 1260, 
       1031, 912, 1261, 1032, 913, 1375, 249, 279}], 
      Line3DBox[{927, 1070, 1069, 1377, 926, 1036, 1266, 925, 1035, 1265, 924,
        1334, 1157, 923, 1333, 1156, 922, 1332, 1155, 921, 1331, 1154, 920, 
       1330, 1153, 1264, 919, 1034, 1263, 918, 1033, 1262, 917, 1329, 1152, 
       916, 1328, 1151, 915, 1327, 1150, 914, 1376, 1068, 1067, 1088}], 
      Line3DBox[{941, 1074, 1073, 1379, 940, 1038, 1269, 939, 1344, 1167, 938,
        1343, 1166, 937, 1342, 1165, 936, 1341, 1164, 935, 1340, 1163, 934, 
       1339, 1162, 1268, 933, 1037, 1267, 932, 1338, 1161, 931, 1337, 1160, 
       930, 1336, 1159, 929, 1335, 1158, 928, 1378, 1072, 1071, 1089}], 
      Line3DBox[{955, 1078, 1077, 1380, 954, 1356, 1179, 953, 1355, 1178, 952,
        1354, 1177, 951, 1353, 1176, 950, 1352, 1175, 949, 1351, 1174, 948, 
       1350, 1173, 1270, 947, 1349, 1172, 946, 1348, 1171, 945, 1347, 1170, 
       944, 1346, 1169, 943, 1345, 1168, 942, 756, 1075, 1076}]}}},
   VertexNormals->CompressedData["
1:eJx0nHk0Vt37xkmlMisyz1KKyiyxTaVIZZ5lFpI5Y5nnmVCvUCqUBjSTZzdK
SpQmilIKTVLGUL+97fO0/Frr+/7TWnud9zjP59z7uq77Pud5xF38TN3nMTAw
uC1gYGBC/zrM/EH/GWjJMzCILVk5vpFh9r/vQFEjfGGsTRI4k1VsUOmqrHVh
+zmR+D9DoCZQa82+u/mg1HK8YvKzrtaarU/Yw38PASZRhX1c8oeAMn/aYKy9
gdaNpzngyswQcPnw6bP2hkNg7Qj/BFxroKVvlzp8Ea0v515m1Th5ELwpdFMf
rNfTUtEe/2WAznPugJj9Bq4ccOObwdURFqC1UzWiYwat8yl8v8rJngTEfuh/
91ygrFWbuNYtCV3PsFT0y6PmkUD6DvP4jIys1lho9M7HaN35ufCxg9f2gkPX
Nm75JCqsxSrRD4bRul1z7rFi/12Avef4m6t5bFo1aSmS02i9nEdg1NbWGMi9
VtjyYP60pn734ZV/0Hroju9KcqzqYE/GSQF+xQHNXYP3X+L1ygXL7K5mS4L/
tHt/Lb39RPOh54JfeN156ZPCsRkWsEzhmgzHuXrNeKGNf/B6SYvzhsyyTVqe
nAesczuUtOicfWdu7fogkQDyd464f3cLAsrehPOP3bu+qbbnAovvOX1rVsYC
RS3C+b7Y07vs9wtAwBp78/SpBMBTSzhnHc0yXvy0APjwbt0psjARnNxKOGey
j5eOf8gD+7al7qlRjANCZwjnaq6BmHs/M4DXK5pA1btIkE1xFpIJLvraEw88
Rc0ehUsGAYWjhHNb8X11WlkY6Ja2ORR0xRMkU5zX3b5pduKcD7hTcVky5pQt
WE1x7gu8rZZuZg8eS8i4m20xAvcpzoH+fl8VAg3B2gsWH6+EqYNNFOfyh3fK
VueqgAWLR922XJcGDhRnU2ev3Idl4sB3HBimTXKCBxRnSaaQ39vVFoPv1g+X
uxtOaNE5X3k2Hu//VVNrr8LJT3m3dbV+4/JG68mXItMO9USC+NdPHmiHx4If
1oSzKkOzV2plCjj4jYt7z6cskGVNOFs2Flx6tyIL7Lqk4lvUnwf+lBHOIktS
S5epZAHm98LbRYbzQGUG4Xwq6+vkT5k0sGfhQLqGRw6onRqb5XyLeWpUcHEC
OCCkr3JRNBUoAMKZ1W8mMikmEqj0KnRs0ooF68oJ5zW6K/jMlgQAsdTnGWsd
Q8CfIML56Ov7gYIrXcELGOiRvWA3qKM4Xz8nzqH+nxl4mxwkVHXQGhikE873
PtqqiRrrgqusC9nGfmwGMhRn5x8tZZ0aa0HgwsMyWgWKYDfFeWFEQl2iGx/o
LV4Y41oo8pdznfUR5f4gRnB/5hst/90CEEdx/rOtiaXaXlrrkO4pwVF3g7/1
bHTP8tCRPldwvHLbR7aWRDBgTDhbyGamihwOAAmO6VHZm/OBqR/hnJp4X+5M
YggIX6/U25NXhPZh7iznnramqwk5IYB7c5PkjdIi9P8TzlvPrxOPrw4EETu5
/ggGHQRLpUg9M5y7+Vr9vz1Aa83Ty4rm2aB8HeEc7aO1JPSYK8gS7m+OjUkE
ZscJZ06HrNf5ZtaAoe7ZHuWTEWBiL+Fc3+ngOt/GCGx/s/b9rhFf8FqUcE5g
4Vj3dUoDLKs+Ldle4QjUqXoWvxj1wF1MFtQINyWPlGwDayjOCtaTLI5GvKBw
4DSLl48asKM4y4qk/NrixQgKg7cfkeWWBC0U5/d1vHe2fRrQMjHvNNxmyALo
9VwbvO7rWXtp2jHvguGROZwX33TaXNbnCmuL5tEwZwdbwnlLzPGfYocDoKrm
I1vM2UqJcD5p4rn0fGII9LXLuoo5f2wi9czqFFeVnBMCzQRCRiHizP6QcM69
Enk6sToQSnL1vMCcOaMIZ0bVfTc0/9sDs/drxGDOr9kIZ/WpvNrwY66wcGDe
Mcw55Dzh/HQqWa7IzBpCk2Q1zPlpJOHslreXb5GNEby2vvYU5jxN1XPz0t7p
71MasOm+1mAb4vyZ4ly3otnaS0wWKv0ZtcCc2SnOAWpaXM5GvHAi5Wn3bsSZ
rs+2nyrNjbwY4clbLWGYM12fA8J7xHd+GqCBNVp8cznnWzHVBnzVpIHs4sC5
usF3mvXY4Z5IGNCo4Ih1Y8s2wvmg95BTWmUKvGFet80H6UarPeFcet9m8P2K
LLj9e87PQqQbKaGEs9ndsw94VLLgOoE3z4SRbizKJ5x3u11hHJVJg5r37khi
3djbSXSjLdrgltDiBGgp9Dj/AtINoE44P/a8mpscEwl/r3vvjnWjp4BwHrkd
fwfpBvRkKpyHdUNsH+FccnqRitBKV3jRuOVRFtKNU1Q954a/e4J0A7q8HIit
RLrxi+K8/lPSMNINGCwws28U6YYuxbnVRbmzS2MtrNlYcU4T6Qad88twztNJ
bnxwgdKPSy5zdOMQ8+M+pBuQs2uhMtYNOudLE2FZyAdpMQ91p7KRD9I5C3E8
PYd8EG6sPSE7hHwwy5BwXjW8QkGtPReaiD+8vxr54Goqb5hOLODjuF8AIxlF
x1KRD25hJ7qx22D8GPJByFYq+10I+aCQLeH8KIx7EPkgHFRn1DmPfFDEmdSz
t+ipL8gHYfHBvTsqkA9ecSKcLd4Vvkc+CDN51uWFIR/koHzwcjj/f8gHIe+H
ooWByAefhxHOnpILG5EPwuIL370PIB/8QtWzTrt/OfJBWHh/8ykT5INslD6v
t4o0Uww0hN8MCg0uIx+k67NYT+dP5IPwqXDW783IB90ozlfH9Z8jH4RKGbsV
UpEP0nXjk//rXTvUFsNvv14muc7xwVmsfwxoKs/C5XpFL1ync9bQns11sKaE
/fuZMz8a66hcJxU6m+vgNW/1htWJDDQ653ip2VwH1/WoF69Xmk+DVK57/mk2
18FwRgF1J635ND0q19XzzuY62OvQsuCEHQNNmcp1FnGzuQ4KSi15cK3zVyM9
1/Wnyl9GuQ7q8u2f/J0x3Mh3gnDmXz2b66DWPL54secfG8epvLGxezbXwaoV
tLs/Hj9vZKE472ybzXWwapp5cXNCcyM9120Qms11sG3o2afg5iuNehTnlRaz
uQ5OB4Z03/t6opFez1xLZnMdHA4PT2pdk9VI141K/tlcBxO2cK44sHlfI90H
/7NeloTr2VNcRCSnQ4lG55z05E0FrufCTWeNUD1Dej3bxcquwfUs+PBxH6pn
WKpCOJuDRC5czw1umkJpUwmw+jDhLHyi6jCuZ6bjp7mFFyZCQaqe570Z6MX1
PANuOKJ6hqJUPbs/9H2H63mh9JEDqJ6h607C+VP3l1e4ns1859eheob0elbJ
k8/B9Sy9tHktqmdIr2cxe4sLuJ75e1ceRvUMz4gTzj7bNx/B9XxorKET1TN8
nko47xPX2ozreV7oSz9Uz9CS4sx52vAbrmcTw3Ypg+vS0JbifOt31yNcz5oP
crajeoZ03ZAXUrTE9fzs6cQ5VM80ej2zr23Nw/r8MajyANJnGt0H7TW6ErA+
n/jt74X0GW6l9Llf/oAh1uf7zZ9ckD7DcX7C+bTikSasz/Ff+maQPsMn04Qz
92PHs1ifmd6N9CJ9hnR9nj7e924E6bNIq+sapM+w1YRw1mxkOY/1OU62rwLp
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
mc9Lvgvn50p99jDM2aqecPZctZLhPcrPUy/S7mHO858QzkeujCr9Qvk5Q/2n
OuZscobU85CW4V2cn3+FF0Rjzqo/a2c5T7yfXlCB8nNtTOh2zJmeny/917YT
5+fjUW6ymPM3TlLPTl9KDaRQft7wxYoT5Wf4TotwjqCe3/FQz+/o+Xl09ybx
WJSf5/WEfMCcD7ARzlJ7Ry7h/OzvpKmJOTtQ+Tn86ONknJ+dJo4kYs70/DxY
+iEO5+fIs+d3Yc76FGd74ZBsnJ/5N2xNx5wtKc4hFXafcX6WFL66HOVnKEdx
1nO3DsX5eddt1qq5nJOZrVRwP2hi/rka64bIVcK5N0GsEfeD214VCqN+EII6
wjnnyWor3A/avN1kj3XD7SvhPN+LqwX3gyfUx9qxboxuIPUssUzuymw/qNNa
inUjjcp1ojkP0nA/yHuZ6zjWDf2dhPNx3r6juB/0ObbMH/WDcK8J4fyGen63
8Z/nd3bLFl3A/eBO3W/OqB+E1yndiHIrDsD94E+WgFtYN9ZTnBtKwjmRboDa
M/Ai1o17coRzmuAMC9INwC2efB7rRt8o4fylYf58pBvgFw+fL9aNVRTnj1X3
OZBugNjolDasG9IU54JI0XTcD94rt1NB/SCk5w2VGl5fPC/KVBatskE+mEH5
oIB+JivyQXC/qiIiA/lg+BHCWbeERRzPf24ttM8xRD5YcJNwflBwnxvPea70
GlU/RT4YuZ5wPtiiboLnOZ8MNONUkA9yUZzz9C0U8dzm3G6DE4LIB8NkCOel
oyZX8RzmfPDKiDvIB+lzmF3U87uJf57fVaox7sfzlqkDY9/ckA/S5y1LX+Vy
4blKq+Zli1fIBw9uJpylXJ+cxPOTBZF/QmWRD56hct3Mn7oMPCdJyci5ZoV8
kD4n6dkZuAzPQ9Q4pPfeQD6oSXG+w2ZgiucejzrywzyRD9J1Y9cS3QN4vmH0
pk7Eeo4PyjL7iB46EQ/OJIHBwuh1NIaj5qllaL2dmssV7404p/mfJo2e67yz
yfytO724wmBY92+uO/YfmbOtbpH1bbTW/5vrLlLztKOmH1K8rfVo9HlaKjU3
Y/SPDzMu16bR52bN6mQ+tuutyrjOlDqNPh+rpeZjNtTzO/p8rIuad703eln5
s2EljT7vEtInc61NnmGyywZFaPRcV0LNr6oCslbG/eai0XNdLTWnqmSQH+IP
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
SOdp7/HBHNcJj0v6O3z8k2By/O+jVkMtE67g6JioO7ov0G6C3JcBHdaLuH5K
9Tr2zD3PQ6YwNez7nF8ZT83VAW01dWtct5qPFkzg6/ekrt9Bfumb/OF9YKbr
lktIVRjsSCD3pbZkYhH6XODoqZ/BqJ4hvZ4t7tzpw7ko06fXRmaOTj5IWVyP
91dDxsR5LcTzOcWTv9R+NX6Opck0eVt3zvzwMfX8N+ef579Nrk1LcM5c9DzX
2nWO77g2POPB/c7zW22/5s6BWb8GXsF9ZceWofq583ZGBqfZ3yWzon6XjP53
j/RmbMXX8Vzjkv7c52ts9elNeB73/t66KOk5zzGXrxDyxXOl8mswSWfO8+Jv
qb/+r647j8aq+x4AniJUSCoKIRQJGSKFTRoUnigpZVZkyBAhZCrz9BhTaCBK
k5Sigd2ApKLeBpoUqSgqpTLmd65737X6Pev7/nvWXce+5977uffss88jkZrH
mtu8yZ7+13xBrLi0gJqPTQpT8/x7XiZxulWemldYtZ32+nv+q7Z2hSDV7ymW
QMzf+asKkUAzKo5K70U//84TvleRUXF2jQYtjeRXAugDNXc6v4ZQ77spFxuo
6zirT8qfXEeojqev4+YvcqJKyZHgz+M9XcgjAgavnj7gTX3nc1cv1KkIgHWF
i8RjmvxhWoXLuRrK29e8d6j7jeV/woNyoGuIvt/Cw3r49f12A279knWnKAWq
+4J29BNvVzitfWepuBs+eksM67+KAWnYs9WRHD/vWFxv3FJP0PxdVDyctReM
TGc3X6eu467n8ScFHGG46WhCmb0vdDtKHugk7VWaG6ZH5LIw/ca33xeVUmDZ
DI1IcdJeeerBkSfbAGfmyKQ1eGZB0S/Bc5rk76oG99qm9RrChxdJB1zdE6DZ
YMMyC3L8iObNjaWtehCbbrgz3S0Sqh0Lhy6SdsXVXW1SrMVgpxlTU06db+7d
Rx2k3dV56VKxywvgm87cmx2FLlDEH/edei5E+JV6NS4F4asr0ddXa8VDZ+uR
7qXU/Vx/YW9EYwTW+/vNHy+bAZNKsqRMSDxlqWVtUoJk/hxzItn4WRbE8zul
PyLfCd3ldcpeBn4I1tNXTZySADJ+utpA+vm+vFetbIobdl7+fHXENxK2Z46X
OEV9DyzV7rFKt8W+FjUulsJumPtree5b0j7/4uBJi3vrULSxoS/X0hVcn0yM
+kXaD/ie/8TSBrRub1F/uHsTzNKuyKOeO63ckqSirftQ4KGuCu/2SGisvXDK
irSPRgVsWemUjMbj312r8UqCuk264+yo+ZdsCf/x22xUv7yDFd7IhtVVkp5U
XiWsT/XNQwE2pgWFbbUKYUPFvUfJ1L7FnB+/ZHL+7MOyfIejerrRYMOns06J
9K9qfdF+S30wRjnzbd/6JBQMbixZQtVjnL/jUpmp54O8bTKeumW+sDwl/sdL
av71xFcittMRMfFS2flKZ5iQ5dHVR7UHp/f0cq1H8RdDC/h5LWGP1tEF1HnF
T3gbMpJogNIB7WnDacthsb7Vduo5ytaeNvwtNQZrbH+WWvX7QOsd52te1PO1
0UZ+KDcdy9cZ+m8k8/c9f4bW7STnq2a7d62+aDbyKNtrku95WCDdXETlPa7d
+G1SX5mFQl7KbeR7HpI/hIZS86Ndi6Lbtiem4wHNCJsQMn9/bmpXtINaR2b2
HZRw7DuQ2y1taCO2D10On5aeTJ7T7yarzTNI+7TG/jmOgYHofKqZTa0HcRXl
v3hG2pfpSqx+oeqOvMGsLmo9aKv1ZYUfo9T/NcgfwsNbsFkrI55aD+IbeX+G
ynuY+0neLi03xlOqV6Oo9aCAGTbGY3Vcl/SGufo1cbT/3hxqPShcvrV1bD33
1SR3Z6qO2mlyyRT0wTUNtBvTT1aEUO/lav9pj8h7GQsY/9/NMkwmbuCpP3oH
BD0iUPUC7caZFf23iBu4UI47MLrJHzMYN/p/1utR3w+TPRfJU+8pecYNowct
t8FvN8p5dK8lbuCyR7Qb6iZmylaKu3F59qNS4gYu0afdWLtT5UjCUk/MX3Ny
OXEDJxvRbvzRv7OvRMARl7RFmRE3MIBx46pcYM6uXBb0BilPKFdKQeGltBs8
nbeDz20D+HykOIu4gScaaDdEvofI5/caor+vVBpxA6cspN14IpR8tbpVD899
+OpC3EBje9oNhWxPI0XWYsz76HeduIEzD9Bu5Da8NJt7eQFu5Xp/mbiBwXy0
G3rhzonql4Lg+7f1M4y14jHwIe3GCdN7buGNEcBSeONI3MDcIdqN0l+BZ+cI
RsFjk9wm4gYWnHAcc2PNzYQrngZ+YNQ+HEfcwOhE2o2vBtIGpVPcIMgttJO4
gYVJtBtnKr4fsky3hfJvBkuIG/iwh3ZjwuvtIuvurYNyN7VFeZauqPIP7cat
LTHrTbUBUlzSPIkbWKRFu/EmsmEqcQMsC5QriRs4mXHjU1oGe4VTMlyT9U6p
9SL3uy7txisHu9TC28QLbeFa4gaKKM8Zc2PzSVt34gb8eVbaRNzA3aG0GzfV
BuMO/NkHslxSqvq60ag1k3ZDVGIp27o+GCIts2RtnoTi/HrajVzTmiXEDRhU
bXhL3ED7VNqNwrxWdkynI8yJFVEvq3TGCZm0GwkTcx2IG6DfqHuOuIE1i2k3
Wks+/xpONAAfMaNJI2nLUZZx48KREiRuwP0Lm3o39ftgLuOG+Ejnt8HcdOgr
s9lP5QHS3tJuiPNf5iduQIqQha+UTRQWfXs25sbAw0uTiBuwJaJvJrW+qddC
uzFs71FC3ICYmVU7974IR3N12o0NTP3tD4H/X39rOcmbh7gB8RO7FlHP6R/G
jWV3+Z46BAZCWGrDWypfynOcdqP6mHHvc1V38D3hZUPlS39spd1oKXt7grgB
R73GcVP50gfDtBuL2DN3ETfg2MmyNipfmsy4Yc02v0LcgDcLp5hQ+dJQxo28
qpykgQlssDy2eVuvQijIz7P4/IDEfzDl6QbvhEywiVVbvcY1EkycVpkKUvus
b3tYLRbPhtVbjs10c4yC2uLu2lvUftgmNiuDNwu8a4vrA60i4WDucMIglTcr
FuLxE0iHJ8YDzyyu7IXDdjNeRJF+tKqnzeHXToJiXePZfqxAyHZT5RYl8YQw
edFrHHnRE4u6rk566wNJ1alqo93WMHxwbwaVN7jol/Tgd54z1EWIZ/50ZIGT
w/6Z1Lx7wlKb/D7FjSAiOa7I7KABDCctHqLuk3s9R6fmS60EpxM29SVNi0BG
524YNQ62OlVhS300QPFOi3+VmxSsOBQ7Nq/cuP/qLp+nKfD9S0TLp/pU4O7I
LZtB4k/vmbiprIYN4xcGffj2iA2jz0afUPmQJllP8fMT2fCqrgClbqfCcLxz
x3gqH2i5zIUVnwgx0toecssSwVIvnieetL8QsO66GBwNqacXT/m1KRqs+dm3
ZpO/68HkRTM58qJzNg40VbXZQdjHWb1n+WxglbObJnW+/kLewldSzMGs8unK
jiwWrPg8ODavD5ks/G66qwGI3tz00bZbH8J/9EeMzZd33LEW+aEMd+6ZlEs0
L4RpQiNj51tpw/NVZnIUdE3zfVvckgX1Ez6upLwqXCIlmx4TCR05P5Q2nc2E
msTeXF4S/wdT/ewTamFwnB1+S+R6Gryp/x1IrSfG+qjejXYNBIUN4iWz6hJh
0PXLRwlqnsXkRdkceVGvsIHMgAoj+NhxbOdMTUv4PrVgIhX/BaPZE35O14CY
VYfnV1mtAG3Hx5FUnLnx0x7OH5IG/1tK/Pvb1SHGSfM91f7Pf+Q/B45/f61l
pwbqsxXTAryy4eXe42V81L7sh7fvXt2jBr/PRZ/vMsiAeg97tWRqX4MH+3xc
rwwYTk0UvjcrBRa8WOMvSfrvk/3f+39X12xdJBg0Eaaz5eKo/b97ojaPxSn2
YFWVu/Jn/b7rvELU/t/jmcpjcd7g2J/7b160J2d45KFOKLoUiB291p8GUidv
qFHrjOYG/jEvtwWghODzCkfuJIi1KHClxvM4ky+dxpEvtbB6Jri4WRwzPNW8
VI9ogH9R59j1lWTypbs48qX54/Zv0ZCJxorfCfMW1UdD9r7+m7PI8UuZPKoL
Rx417z++i/oHnJB4ghLGf3K+KoTiYgnaEwvZA+nEE5QodZE2do1Eh420J7eN
X+YQT3BqTsYzV8cofHmK9uRVVmUy8QTd3j/OCbCKRPlo2pMv2aLLiCcoduXN
43VX9uIpHdoTPp06b+IJtqz6GOPLCkSFCNqTIibvKsaRd21cmNxFPMHq9GzT
kW5rfMJ4ImiYwN2f54wNzh92/HBk4RF72hO5wbctxBM8d3NCiOlBA2xkPLnr
cNOEeIIteRPzTjYtwvmMJ0pi4RXEExQQV1l7zU0KlzOecLtv3ez7NAWfbY3+
3VWfitt488Y8OY13m4gneIE3cSfxBKd20Z68s+1KIp5g8YGg5jm3U3HXNdqT
047+C9bFJ2Ka7I7jsssSMXM57Ql7KXd0eXA0wqUHu35uisaCD6ljnogzeVd3
jrxrxJqsg9VtdrhqpH068QRfO9Ge9NyuDSeeoNmOVVveZbFQmPHEe2WhxQxX
A8wfkR2y6dbHaMaTOo9vCtN/KOPWC/NaxZsXojDjyafF3xRlJ0dhRXF4HvEE
1++jPUm7EGCaEROJR4Vud1udzUS7DNqThX8+p5WohWHsn5gk4gnOuEN7cshA
bUusayAmPXOyIp5g4jrakw4m7zrAkXdthyeXAiuM0DAzYx7xBCcJ05743k+a
92u6Bq54O7/tutUKNGM8yX7f+VphSBq/dDTc29eujrGMJ7bX7Yfs7NTwqY99
CnEDmwtpN9yn6+m93qOG6yKsSokbKM2i3XjVobG9ulcGO9fXCRE38NQz2o3Q
zv+9D47lIKohFjQRR51rQ6h9cJmMG7yL9LT2Kn+utheq5qV+r+kE40YKk3ft
4ci7TtrcP9yoEwp72hweEzewM4Z249yUip/PtwVAYI3URCfuJLzlTrvBNYXO
xw5y5GOrZwS9VW8Wh/x1ikeIG7ibcUOMyccOcORjv/J3VanLRINOeEIVcQMz
kmk3vJg87SeOPK31f3wX7Wfq5Cdx1MmHMPXeohz13mUC91T8H/uDar1nbdIH
P4hh35C9T9qbpxi8Z8kEwWJbUflfimxw6UXzZyROXabOuZujzrmtY4O356gL
1Ik/inJiBYOWx7hQqp+TE3OfKDvYgUVgiMYKTR/4dEV0mHpeLK9/nBGXq4/t
Vqte6aqkQe5oaUYLtS7w+0HsuURt3G/Wwtr4KwtcDkgESZL2p4NNIVSdsDxH
nbBoed+5rFZJ0FeZufji+VB4d2d1AvV3DYrcDkmw5GFLTN5t6vco4uam/6T+
7lOn+L1pfHJQqlQw9nsU85uXLabu80qFr963MkJw5KDQEr/wVGiyWOdBxRMr
sV9ExDQSax76l4tqZYK20/piCdJ+6+NpzweCUfgPn0tFTXMWQI+DCfU8xjD1
txc46m8Fuv0GnplvxzSfYZ2pl4Ph4rFsFhXnBY/rp89lWCPfsMUWpXofUHY5
2zzmiYZrcrK/KV4WHP/d9owzvDN0V6TiVL1+wabZWg+ltvWGPHXfCH/O+Y9S
fqYF9BrcrYjDqzzhHwol4yBYPr/5KYmzfMd3pUm7UlEiKPB6GncqFClbaImR
9kJhc+OEWjbuVw7ib3vIhoAw01eUk+2t3tmvD6ZifvCo8CC57r1x7Vxc5Pg4
pg5WjqMO1kQreFegvj8uSHxsZ3/MH8w7u+up90JrQpnwO2431FW3yZrK6w5H
wtwKqPPKtym50HjfBjV+e8/+edwO7u0KFqXO68Us7l+CDSyU8Bwd1bthDqtE
3Aap83rQbXTaJ0gf66alYG+3AWh7bhl7L6wZVnbQkWJjh+8VkX0mwfDk7KGW
h9T+x5L77m45mSg2rir6VXcEGDjMVphK2sM+vzawIe/H9ca+ljMcoqAwyOUe
9X5Meiltu2IkEw9tWjN6+3wk6G8xkx8g7ROlFqzsGEnDQc9yiQ93w0DF4eUE
qg5EgKlfjeGoX4WWWTNkXgTjqp+nTuxOd4GjV9YONFDXt/R+pORVH7zPf7e2
JNoG2vzrNlLjUJwTNuy+0xnZNa9Njj8yh7M7PUep35U6+n3zhqd9ltjTfWDh
PfflMFOJr48aB13JT77Gn1bglvU1TwcL1KHF/ksoNQ6ae++bPAcNbLx5658H
NjKgFC9D/+4EU/95laP+05SpY9zDUcfYeuliNXEAw8UMVYgD2JtGO9AvIFBp
LhOESoINgz8V2filnnZgIVO/V8tRv7chy7Jn56gLXu7oXEQcQC4X2oEErYZi
VQc7nPpac8RI0wd1GAd0r9euccvVB0O3tlbiAH4UPz/mgAq3fFhsojasV1VY
TxzApiDaAZ7w42P1b7Ec9W8TPpdU1bdK4tXz5zWIAzh0g3YgvufoyYUseXTW
17tB7bN2kqIdOOc2+cYhPjm0LXlXQu2z3v6MdsBSTK30RkYIWFYkHCQOYJAt
7YByUUKvsGkkzJ+zqZc4gOPSaAfa8tcvuS8YBTN5sweIA/g4knYgi6k3c+eo
N9tZ1hP21Hw71PXtiSMOYO0B2gGFDw8encmwhhAudjxxAOscaQfmyyU6JPqb
wmPzX/PszjijsQHtgNlRuZEn1now2ltURhzAy4wD7uNuZdVXxIGkcG32cck4
LBGnHeCWem7KvysV+Iuy89K5U3GvGe3A1rf9jfG1bLAWnhxJHED5UtqBnKcu
518dTAXho037iANoZEM70MPUfflz1H0ZGc5rDdD3h4yLkt+IAzjEONBkoLKp
ndsNZhkeNhbmdccixoHuwp0vHty3AZHVz7uIA9jgSzuwfpsWP3EA2qbz+Ojf
MMeX02gHjqzRuOIdpA/yjWtUvncb4HzGgSk4Q504AF+ivF7vNwnGM7m0A2mt
ZqrEASj/yHXmdXcEHlxCO+A2uX10K5l3a+9+xJ7pEIWCm2gHxE6GziEOQFp3
4YLa85E4tJp2oHQjlxBxAD6n7Z7TeTcM7xnRDtxg6rUectRrqV04XSP9Ihh4
ltfND0x3weJK2gGFMzws4gB8nNF+7HS0DQoE0g4MbbuLxAHIfZtgX/TIHNd5
0Q60+M2dRhwAadH9Vvfdl+MUxgH/hcEqxAE49cBgdKhAHTsYB3j1DwkSByDW
zOxDo40MKjIOfGDWbeU41m2NxIfmjvsZDIHzfn+8/zIEjIW+Tisg7SKuFjeD
VomBbWV067weMRhyWjl2/OiRFY1RbZ6gcF1/e/3LSBgZrlxWSNq/2WJdOd8k
aBc6WvOJRxoe5mwYO/5MXIOq3Lu51fI5p2Zx6+yD5j/Fh6njSy66DLhMulkV
rOizndqH67Vx89jxhi/7uKLbPHFKM+9Cqn/pUbr/632Xbl3mm4Qnw7JSqf4f
Mf13bAjg4voZjFcLMkWo+NV56Pin6qck7FklhvfVPEX/jj+aWffU4Vj3DGHW
MQ9yrGOmLlD4TMYHN/PYKZL+cS833X9UQ/Nuqv/ximZKpH/8t38Pq/n395P4
VYbi1Uj8GPGHjt81+HEKFf9Xo8ZMEj/+G/9+49nS7flzqkcXuFPjg8u5ToyN
zywH7tCvZteqvk9zocYH/x2ftASvifvI+O8wHrWn+lcYoPu/vOzQIDX+g9f6
q//u//J6vaXU9XUy2fCEit+MGR+HxqnPx67vMos7f8ffxqwzHuZYZ/w/0X8i
WA==
    "]],
  AutomaticImageSize->True,
  Axes->True,
  BoxRatios->NCache[{2, 2, GoldenRatio^(-1)}, {2, 2, 0.6180339887498948}],
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{350.87472014095454`, 191.95012502155555`},
  Method->{},
  PlotRange->{{-5, 5}, {-5, 5}, All},
  PlotRangePadding->{Automatic, Automatic, Automatic},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{1.3663191279893325`, -2.83516126199192, 1.2429934267689644`},
  ViewVertical->{0.12514975378762086`, -0.22107773747097204`, 
   3.1299020843612495`}]], "Output",
 CellChangeTimes->{
  3.686398997045024*^9, {3.686399058990326*^9, 3.686399122226255*^9}, 
   3.687537993895133*^9, 3.693912392695331*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RevolutionPlot3D", "[", 
  RowBox[{
   RowBox[{"Normal2revonepass", "[", 
    RowBox[{"x", ",", "2", ",", "3"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "8"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", "All"}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"{", "\"\<50% probability removed for r<2\>\"", "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.686399132511777*^9, 3.6863991404191504`*^9}, {
  3.686405262529681*^9, 3.686405287997344*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJx1nHk4F9/7/+1LkS1ElsoSUrKXMKMklNImSaJSiWglFZVWrYhEhBbtiwol
vWZCKiFlK1psFaHsZP2el3PmNG+/z88/c12v61zjzGPu87yf9z1zZuJavyWe
fDw8POsFeXj4wTHE6Xb6cd0rlgvLG8UbRi+xiHn1Zsv0NVeJ9bqWMRp2NcSj
Q6Ev64zDLaeqjZGKO3OFSP7xaUjdro2YM0vHuM44yfKLmceKWIckYnz6WMP0
LX3E3cdnhcuKblrePv94SZZpHPE6e/IjdTs+Uiy6t6nWOMVynGj8nSCjKIJP
92X+lkoh8sXSqWWuh1Itde96+5usOU1YRK79kbZlNOkv6U6VFj21rFdUW7aK
iiAC+ofAnwQ5pSDixkIVjmXc9Kdh68ccJVY+LDylbidNtuTUvK41fmG55aps
qt6vAMJ/Q7yCXcRYcr7aPotE12zLnpudcenfNxLnFH2St1TKkdcOyj50PfTS
MmnUfCdRPifiQaGZYYS6AslTdU9T4dYry9dpk32/3J1NFIaI0mlbxpMulrYX
S4veWNYrZxZ9mzGVaDT5uKAyTZlMjauWiOh+a1mny6v9W1KWEGpM/jQ0pEqK
9+05vFCl0FJXQbq5a6DPkvqgccDPJskyy7Nzxu4rYZYM58T4TMXwwCri7t+s
3wsy3xEM54SJoWFhgS2Ekv/JuvmZ3wiGs2/Ho3POaT3Ew/SKGzMKfhIM54R1
fvPDAnlIp8d+a+Zn/iEYzkIFAg4d0QJkkDPf6Pul7QTD2dckdqFzmgj5rmzB
hhkF3QTDuSxBzzGzRIycuDz6xYucPoLhnHC4RissUJLcUVytND9ziGA4L515
VzvruDRZoyVn/usTL8lwFvodoNMRPZYcvelZw71SfpLhnHF59hTN63Kk0XX3
6B3vBUmGs+8KcV3ntHHk6h+Cc2cUCJMM50liH3VPvFQkj2rcbut/LUoynEvo
y1MzS5TIu+sdE1/kjCYZzlPbx9aU1UdbxujT++b3xWPOXo9iS+0LyohJv1Lq
MqM/Y87O/Uvl7At+ELPOlHc8i27CnIMXNbt3K7QSj2VuP8vf1ok5FyU+SLMr
6CLs3H/texbdjzlPatshFnegn9haNla19CsvyXDOSBqv363ASz7b93h//jZB
kuG8zn5gVWI7PymktqwqW0CUZDiLtX89alcgRC5+004+ixYjGc6pF+mUtmRR
sjD9jeNKWUnM2c368ueLB8TI9hMKvKVfpTBnkeZDwnNdJEgFN68UxxsymPPH
PAOFbgUp0lL/qUf+NlnMeWrClXtvj0qT6wVEpW1nyWPOB3aMtU5slyGPlztn
ZQsoYM5bxjW58kgdtBS2Mj0fkHIZc15acjv5og1NzBJf1fKquBpz9n6vpnLR
pogIdXzn8qq4FXO++6R1U73XR2KX4rbnt573Ys7d7759irWpIvS3i0q+KuYl
Gc4x2Tb7rZzriMkrXF48sRXCnM3S76rXe9UTyua3t996Pgpzrrw1Nu/M3iZC
ZmK/WpyBBOZs+e55eqxNCyF4KPlXbrEU5jzGbtso30VtxIHOhdnEmLGY87cs
9dVWzh1E38bui09s5TDnB+Yf74/16CL8KxJ26h8ahzkfSDvJV+/VQ7QusHW4
9VwRc148nVj+bHsv4UO1aKj1KGHOqrfarp/Z2098148ZvGigijkfvfr7LJ/U
Qc6BUfL+bM5rTsVQ8TY0xVec/p7N+VuAlGm8TRG1WF7XnM35rLbTmUavj9TE
ufvOsjknbCloi7OpogJnbmjNZXHeneunYu1cR3k4jrnI5uyoKm3f6FVP2W9M
s2Zz1tr9eFfE3ibKINjt90UW5wObbhfF2bRQp+3589mcmyL3bdi6qI3idSpP
ZHN2fuHQP8e5g9rlcXsXm3NOs0qEvEcX9ctnvz2b83TFlsmNXj2U2+6lqmzO
cTYvnnO291IfDk3umMTiLLQjYmnE3n7K+mzfazbn7qKS7PL6aI5BxpPX9izd
qF79/c78gjLq8jbemWzdyEq41Ax0g1o1frIdWzfsbT35ehRaqQ7ODzO2bjwi
+07bF3RRM1tmvs9g6YbSzHCF+AP9FB2W+6iEpRvZF859ALpBr9NuGXzL0o3u
SLdxSe38tFCWgj1bN3TDtd3sC4Tomy5zojJYuuF+uuNKe7IonRxo0uLM0o2o
UKoh7oAY3T33bVQJSzfyjpzQs3GRoO2k3WexdWOIvpUBdIOO/dpR9ZalGwpE
2Or8o9J0063Qo/NYumHwfBdPUrsMbR6gosvWDZvPbzggD3L8Zd4ZBbDy4MQ3
gU4gD1KayWGD9qw8qDPfJh/kQeqjwcoOO1YefJmyqBnkQcpRNNXIlJUHp5/S
PQbyIG0YaOFnx8qDQURKNMiD9MmOmpK7rDyY12Z8A+RBOkh3cpsJKw+OS854
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
73R4f/H4xShOrEfsM/0/H+6keA==
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
7G2wH1FwjFPOrr2fmdg7Z14X/bCtSt4z0Bq9JPM6XQ1/k3kNSm83j85/9c71
89hROx93nUiH6bl6pvT7JdE5iPR20+i5JA3fLDrflPZuFf1uH2YeO42b4p3y
BdW5lgTPV8035abVovNTxVBpRdUflW/tHZ1zySfNz+yX5As/z+wPVXPdkjkP
lZ8ekNlXa31vzrzGr4NHZq59KS7Lp6suo7yvVPQ+oPK1mdH1NNUN+kQ/X7WO
IUV/e+X19aO/hbSs5sHc/P2r5u+pesUh0fsyqoccHr0XI3/+cXKdTvWNQ6P3
a05N1mnSEao/1IvOU1Qn6Rj9/opZw4r+PdWkx4qeE9I/mieaY6p9HRSdO6g+
UCl6Lh1I/7FF67Yvcx8h/6DnKG+S3pmn/59cG5U2UO4nXyxNonxP4646W4vo
76h62oHR+cshyRpV80R5r+alvrtqj6dG197lw0sU7Zc1J7URI7+m71siep7P
SM55pXdUq9La0LpQXWtRdI1Xeldzd37u9/5O9mWqUTSKzt1UH7stWn+qLtE4
Ov/amHkdag2qhlA6es9XObD01op8rLRvKL2jnGhZ9H6f9Kk0rvSt8qn7o3Wv
akp1o/NQ1WFqRu/NaX6NzOdYA/ofW/R8VW2kSXRuqO8+vGh/oXrUftF5rr7F
Ydifwt4quaYt7aa6UPXo/TX586OL9h3S6jWi9wflV/sX7WtUL9o3el9MYzui
6PWvPdnHsW8ouE5+R3StVXnNhOi6sXKiidF7N8opToie51szr1utWdXM74qu
2Sp/OTl6T0f7vw9F52jKOyZF74NMw16/6P0Y1dYqRO/BKRcbH10rVm4yOXpv
QnX45dF7Ftpffjg6J1XN55/Me3Oq+fydeT9O9clu0XuXqtuUid7HV4x4JXlf
U99C+/i/5O/zZnItW/vR2mPT99Vewz3RdctfM+c5+tbzFaN5/5cyx+h9io7r
2ke4N7oGqz3xR6LzZe0d3B1dF30yWMdpf017fCui81DVEJ6Ozse1P/5odD6u
vZ7WRe/ZqObwZHTO+GvwvNC30/7gE9E5uObnmjyH0nqcUHRupr2Vp6LzX/kJ
1cTkK5S3jo7ev1CeOzJ6j0a/cVfyPrd8hfymfKby2VHRezdZ5jH4uOBaxNjo
fQfN1fFF537KhcdE7+P8H8KxE2o=
          "]], Polygon3DBox[CompressedData["
1:eJwtmmPAdEfWRbvrVsfJF044sW3bdvK+wcS2bZszsW3btm1PbEw0mXxrZdeP
fp5at27r3jrn7LOrJ9lo+1W3K71e73D+VP7P3/V6DzM4sN/rDYWnhO+Et4QX
geeDH4IPgIfAB8L/hp+Az4cngm+FN4TnhheDH4GPgDeAz4K/gz+D74P3ht+H
H4TPhM+Gv4c/h++Hp4DvgLeAF4ZPgL+C34RvgDeBX4CvhA+Ct4FfhW+Ej4aP
h7+E34CvhzeHX4avgQ+FV+J7H8x4HcZf8ziO+S+Yf51j18Fbw6/AN8BHwXPA
D8B7wqvA28KvwTfBx8DX83pfMn6I8X95XAi/Dd/M+Dcem3H+S5x/NccOgTeF
X4Svgg+Gt4Nfh2+Gj4Vnh++H94BXhneG34bvhE+C/wV/Db8P3w7vCL8J3w6f
AI8L3wivDc8KjwffBK8DzwaPA98ArwXPAq8PPw1fDO8L7wS/Bd8Bnwj/A34S
vhDeG94Afga+BN4PHgO+Hl4dng4eHb4OXg2eFh4NvhZeFZ4G3gh+Dr4cPgAe
Fb4GXgWeGv4/+Gp4ZXgqeGx4Kq7pUHhmeCT4SuaXhyeHN4afh6+AD4SHhy+D
l4EngUeEr4CXgyeDR4Avh5eFJ4WHhcfh9ZeGJ4bXg59i/iJ4H3gd+An4Angv
uA9fCM8PjwNX+BJ4UXh8+BT4G/gD+A64gy+GF4bHgwt8EbwgPC78B+99Ljwr
PGbPJ/Be8Lzw2OCp8Lfwh/Cd8P84/zx4dngseELmb4E3gOeCB/Cl8OLwBPCv
nH8WPD08Grwr8+/Cd8P/hGdjflPGCzD+3OvP3PAcm5Zjo7qmGZ/DsZnhMYxP
xltz7Hx4T3gXXu8djt0Fnwz/ztzZ8Izw6PBezL8HPwCfAe8JH8k598OnwwfB
HzP/JHyBzP83mf+K8do8JmH+duY35vi88L7wh/DD8NnwlvDaA3JSyf2ZFx4B
3p75pVo8DTNIPjGf7QavA3/C+f+Cp4e7Qa6f+Ws2eABv3vKP+W9EeAd4afgQ
+B/w5zz/IngeeHh4O+aXhCeAf+fzrQhPCW8IPwtfCu8Pbw+/Ad8CH9fWl9fz
Ax5bw9N03kTeg/k5GE4HF3j9dn/ngoeFt4EXh+eGh4O3hZeA14KHwu/zervD
08J9eD3m5zQn8f8H5v5g/AKPK5n/ic/zK8efa/H3a1t/ru+x4JV5/osl8TEZ
vCr8CjwT/Av/n/bzu7b7iT/jafp2/0eBf+H15m7r2Xhbkec/V7IeXe8/Mz8n
88OBP3P8PxYouM/jCx7fwr9z6EHzEeOTOLYV4295LMTz1+T13uL4CvB58Ebw
d/At8Czw6vDr8ILwrHCFN+M1FoKXhR/j/U+AN4dPgjdg/mvOv7TlS/PPMi1f
LNXPtfiU8UQ8/s78f3n+Si1fHQV/Dr8EXwW/xf+vOP9Xxje19XZPzXpyfZ7X
z736jvEePI5k/jPmX+T4lfCJ8PqDvMaNvXx318r3vVyDfzF+hmOXeC94HMz5
n/D8pzh2IXwR/AP8Hfx4i5e9eM718JHwVPBdzG8FLwofAH8EPw6fBy/Cubsw
Xp7xlzxmZP4+5nfi2DLwOfCGg9yjB+AZ4HuZ37HFyz7wB/BD8Fnw4fBpnPs8
fDl8BPwp8y/AV/h9+f8O89/4WVt++6PVg6lbPfitJl+b37eA1+L9P+I5h8F3
wJsMsobegw+F14O/gE/rJa+59j7uJb89z3hJjk3I+BMeOzN+jWNfMF6Ox8Q8
/zbebyOOzwNfDP8Ifw8/0Yte+bOmPllPzYvmoh97yY/39vPe3ptTedzI+f/h
/D7HXodf4v8anDMD4894XMX8xoPE6PPwdcx9akx4rXjszvy6gxzz/k0O/4/X
G9Lqo/l++BaThtHCzI/E+bsyvyI8Pnwz568Lz97Ld/E7WVtuLdFiI9XcSzWZ
a9k1ba49syT3moPNXceW3Ltas1a9h661kWuujWvO2mUNMxYuL9GCI9ZoPTWh
Wmb4mlqpplHrDVez1tV8arlha7Sfmk6tNkyNtlOzWWtHqPn81lzX2v/a53XN
mfutAWqpxUu05x9d1qIa1LX+Zxct65o3969akxusAebelWpypznY3GsOXg1e
uiT3r1mTe7dr77daTe2w5lhbVq7J3dYYc88qNbnIHGTuMweaG0ctqYX9mti1
Jqq1FerWRjW3sV1qao8xbm39bxctbY01l49Ss3bM6eaSQc31N6dYK9aoqR3W
jFt57jLGC+NnOHY7vBz8S6sHV8ALud760e/Wi4UHuXfewwvheeD3+tGjZ8Jz
wK/1o6fV/3MOcq+8Z5fDC1p/4XvhS+D5jF/4LvhSeH7rOXx3L1pNzab2GK9E
21ljrC3jlmhdNa/abhp4opp6oM5X31/G3ALwx7zePS0fzjvIWnPN3QYvC/8M
PwtfAM8NvwvfBl8LL2L+hR9p8bvEIGvbNX4TvKTxCj8J3wAvbj5s+fYWeGn4
J/hp+GZ4KfhH+KmWr5Yf5F55z8avqVfmXfPt2DX1Vp2mPruO8xe1PnH+o/D1
8GLwN/Bj8BjWokHymvlsVHgF+Bn4I3gstfYgecd8cz7Pnwt+x7XQS27yO/rd
Hi7RDivWaBE1hLlu+ZpcY85TK3/apXdQM9vbfN2l17HHsXf4pIuWtoew1/is
S+9gz6G2/rhLb6HGtlf6pkuvZs9k7/Ztl9xuD2dv8nOXXsgexV7t+y69nz2b
vdRPLT/ZU9kb/adLL2OPpPZSg6nF9i/prX7pol3tsextPm/z9jj2lj906fXs
MdVyarod4B1Leo8vu/Si9iDGzhk1a8kYMrZOq7n3xphr7fSaWHPNeW+G4fmj
9HKPXAtn1sSea8K19s+ateSac6255t6AHylZS6fUrD3XlL3VF116IXsstfCQ
Gm2qJlbLDq3RHmoQa8NaNdrJGuFaPbVmbbpm7bW/6tKr2nPb+/7YpVe1B37c
9akGgDcu0VL/hrfoRVPZG/zapdewR7D3+K2L9rYHUUu8awz2oinURm930Q5+
PrXEO120hprCWrdcjfa05qm9lqnR2mowtcKyNVpMzaBWWKpGu6oZ1LZL1ORb
Na7aVI3q8yfk84/ZJX5eUMP2ouXV9K7/6Tl2Nzx1l9o5T0mv/l4Xb8Ce/UFr
hTEJL1XiHbyvZu7FQ7BXe7lLr2E9UFu82qW3UWPopbzSRWvoqdj7vGaO7KUH
etTc3V5vjRKv5s0u2k3Pxt7PHnBk+G8tP77YpffXE7D2qwGmgKcr8X4+VEP1
4gHp9XzQxQvS89HL+ajdXz0dteJb7fupGfVq3ujSW1nv9BpeatdHz8He2B55
JHNPSe9sDz08PHpJL2xPPIK5q+T+2IN4/yZq+uKIVt9OL7mfakDzz5Ql9dke
yfU9f0m9VWO7vhdo32/+tn5WLPl+87X1tULJ91us3b/VS663Padexqwl90cN
qJcxS7vfs7fvu0S7v3O0679kW//Ltuu3bsuf9mDqg/lK7q+emV7IzCV6wJ5E
bbZoyXq2p1BvzFCif/S0rP/nl+gjPTH1wQUlesuaZi27pUS/2MOuBC9Woges
2dbqe0r003FN75xXog+ObHrojKbPrNnW6mtL8r0ad2F4jpL4U3Oqj2Yv0V96
Huq/y0r0nB6VWv7Spif1+NRv15XEp5pePTRjW796jnpVc5XEh/Nq/ZlK1pfv
r7aes6R+6FltZz4rqT96NtvCGpvWGz2rbeBtS/L3Nq3+7FNSb/7queFtSvK9
ntb25puSerJ1q0d7l9QjPbxd4d1L8qEe5M7my5b/9aB2gncpyb96XDvCO5fU
Qz2/XeDdSuqZnuRu5ouSerVdq4f7lejXfVp+Pabp1b1b/Tm6RA8e2OrfSSX5
dNdWLw8ryZ/Tt/yyYEl+nbHll4VL8ukMLb8sVBLPU7X8MHerhzu3fH9ISTzr
IU4OT1uSz3dp9f3Qkvq6Y6s3B5Xo6QNavT2xRK8e3PL/P5u+PajV25NL6sm2
TT/sW6Jn92r1/KiSer9Tq68Hl2irk2u0jhpLL9MefVJ46pL3nnqQWn9iq6lL
qMP70T9nmJuYfxW+Fr6X+d8ZT2Bt6cXr0vPiX2+kEu/s19ZLjcCf071W+h+c
fw3HTnPtwi/DV8ND4Ynh4/vxE4bAE8HHwZvBH5b0/Pb6P/Sy1uzH1T6uOdfO
pGqEftaQfs4kg9RSa6remh4bh3sj8n9NBhMyfyzzm/biJeopcqg3sjWsxs/Q
l9aP1qvVs9UbnLzEq9Wz1bucrMRb1WPVW5ygxLvUwxwRHrPES9VT1ascv8Sr
NV/rFU1c4uXq6eptTlLi/eoB631OCk9Z0697Hfz+U9f4cR+bq1xjNf7aZ/DP
vXidep7DMB6lxBv1y+sVjQbPXOP36MPrv6/B3N/hY7gem1iD4dHhfeE14KXh
MeD94DVdk9YS/ah+/Ahz1yyD+BPmMD/HPYxP6eXzWIv0L+y1rEnHwjNw/mP9
+CUnwzPBz8KXwV+asxhf3IsHtAPzkzF/WT/+9/7WOvi2fvx7177+qFrWGDC2
Jh9Eyxlj+qdTDOLfuD/hdbuW8eG9XD/9lWkH8Vf1Ww+z1sD39eO3mvtnHKTX
tQYcba2DH4HP6aUW/t8gWsaauCg8Crx7Pz20tW2sQbSBNW4JeFR473564iXh
0eB94NXhZVwr8P797B/tB08J3wofb811LcJHwxvDq7h24MP72T86Bp4efhQ+
F14JHhs+FF4PXhH+G3wI/A94ZdcifBi8fi/adLxBtIsaZjXXOnwUvFEvvdSJ
Nb2dPZWBowe7OMN5S3rRo2t6U3tS/e91/c79eHDTwHv4HfvxaGaHZ6vJJX/y
mIrxVq7BfjyhSeDl4ZH78bgmh9f2mvfjAf4dXtB468cDHxeeGR6+H0/KXvaY
mt7YnnZMxn9jfph+PEm9rzmMkX48sNEZD8d87cfzsle3Zzd/3sT8QsZ3zdoe
i3MWZjxdTa4Yp5/4fqrVY/X0VfDIXnM/a4vvZ5o+co/H/PFkF33pHo39+mMt
P+uh2s8/3qVfdw/GfPJEqy/u0eglzlDj9+op6oXNUuNX64nNyPhc10g/58wJ
32nM9/OdZ4Wv9h738xx7W3tc7+8NPH8Rrz3HdutHI5mbh7T6vkVJbjBHmEvX
Klnrrnlz+TolsWBM/LW2Sta2a9zcvnZJrjHnmHuGlsSSMeVaXq0kNowR1/qQ
klxhzrD3vqikH9Oz+2stl6x9Y8Bac3ZJ7BrDeivnluQec5C17JwSP8o9CXPd
siV+j3sEf8ViyXf3Ghg7q5TkyjWantmsJBZXb3pm05LasmbTL5uX1LahTb9s
WVKbrFHuNWzV8v/TXfSte3rGsjGtvtqwJDaNUfXbBiX9qXs25uLlSmLVmLW/
3qikX1WvmzuWL4l9c4B6b/2S2DcHqPfWK8nl5nS9m4tL+qFHXB+97IlZzx5q
9c49OfciFquJjb/2JBg/2kUr/Nv1Az/fxUsZcP48xluNFzOcOY/nj1MTm/rG
CzD+rkttG435+eFJa/YqRrEGcf4ENbHtPpd7K0vWxK77CvOqt2q8nxH62cuZ
rCY3uE8wBJ64Jnfok8+nXq7xukbi/LkZv97F2xnWnOM9gV/qResYu8bwCv3E
6J8cOx+eq5+YnrSLP/RySc+pN6FH8Wxp17BLD3pky6fLdflMfpYtWr7VEzit
n3toL2xPvFc/PeuCxnaXWjUGxxbock28Fvag9tb22Fv302PO1OUae231CNyf
/I3xh73sOemX6KG9x/ipEq9Sz1L/5a6mF+5v+sR+X+9855pcrYeu16fnp5d2
Y0l/+kDTL+7x2p8+2PSLe7ZeK6/ZsH6WEn1yX8uH7smqH+9p+sg9U/cmd6jJ
/e4LqN/u7uJnukeqXru36S33gNWbd3XxN91D0//Rj3Ov4KGmf/UYX4MfLPH+
9ABfhR9o9UoPVf/m9hKv0/5Q/+jmEu9VD1b/6c4SL9f+UL/p7pL6omeqX3VH
Sf/+cBe96B63Xqie6MvwfSX+lh7y2/DjJfVUj/IV+P4SP0xP+V34yRJ/SU/0
LfixEj9MD/Yd+IkSP0uP9E340RItpibTW77E/M3nmalG643XT35dt0abqFne
LYk3f9/h7zzUJmoUa/2aLT+vX5MP1YTm4/VqtIuaxXy+YU0+UrOYL9eu6c+t
Geb/dWpqh5pIr1vPWy/76lYvNqrJV2ok8+tWNfleTWp+3bLm86h5rDcb1ORr
Nan1aJua+mPPYL7dtqa+2FOY7zZWg/SieczPW9fUG3sAtY0ax95hk5aft6up
X/YQak81qNrrgBItpiZT+x1Xoi13qdlbUmOqPXeq0apqULXqbjXPV7Paa+1e
o13tuaxH+9RoNTWx9WrfGm2s5nQv4NCa+uWegL3YwTX1zZ7MXsqeSr11Rbv/
B9RoczW5vZE9kp9np5bv96/R2mp4e7ODanqxV9r9OaSmPronYb3dr2ZvV41u
Pdmkpt6qKa1Pm9bUx8Na/dqspt6rSd1LdE/R57v3aq/ibwL0M+0VzC/u0bnX
6G+s7G38zYH+tVrdvVz3dC/qpTcw/7vHrp85RYn3OGarV3r41if3zCeGxy7J
5+rLh3r53ZF7J+6h6P/e1vLBSTX57Jump9yjdT/tmxb/x9bshbgHY748rmb9
ftri+wRjvpc9D/PD8TV7P+752Eu6R+7e+oVNn7ln+QD8fUkv5h68z7++1Str
hLn97ZaPjqyJ5/dbvK7QxY9xb99+/oUufpC/UVK/HVbzfu5RqA82r9FTanr1
7BE19d49KHudPWqu/32tfqpPrE3vldQaa4615I2S/OyeuOt9z5LedIumZ+xR
3UvyNwbGm3tK1iJrkrXx1ZJaac3UK3ZPxb0bf3Ogn+4ejns3/mbC/b7Zmp7b
uybe7Gk2afXLvZ+fSuLNns94OrDk+9jDub5PafFpD2gvd0RJPNpDGm/Hl/R+
9oDGy6kl8aknYvydUBJveiDe/6tK4kVPw37iyvb8PWte//4Wr/qB3v9rSvyD
59r39Tdf+gfPdvFL/c2X9fTwGj3rHpq9pT2m8XgWz/9/fOoP1Q==
          "]], 
         Polygon3DBox[CompressedData["
1:eJwt13nAVWMeB/D3vb1vITW0MG2S0rRoX5QiKqVdu3btSnuqQaRVe1TaZWnV
PlpRWVopMqFIYeyTIbsGMZ/fnPvH973n9zm/c9977jnneZ5botfQNkNSGRkZ
hyRb9mVlZLST2+D9mRkZ90kdO6aznewT9afSJEdGRi/Whc1R93NsY3Yn68Rm
sT6sEevB7mAzWW92K+vOOrIZrBe7jfVkndls1pcVUReWG233Ze/ZV1VdRb63
/RXbZ19JxzZj1Vk/dhMrrf6OP2x7c3xm+zawhnKV7ZashdTU8y9pxAaqG+gv
pm6qryLrET2sKGvCKrDurAYryBqz0qwjq8RKseasBuvP6rEC6kZyLevAKrKR
+n6RiWw9m8hWqfPo28E+Zi+wFqw3687msbtZfdaVtWUPsx6sFevL7mSPscHs
MnZUrmZ1WSGWKzu5vo3Z3WyQTNFzL1vI3lSv1TeZ/Z0tYMfYmjhf9Xu8ru0+
7B378qiPSFHb1dkV9p1Pf8/F2PWsluTXc0xKsvrqovouV78uJdhNrDDboM7r
2L3sLHuF1WOd2O1sEuvKbmFdWBs2hXVn1Vjb+N9sDGsV97W6m3Rg09k0aamv
D+vB5sd3oO9m1pm1ZpNZN1abdWTN2IOsPbuetWdN2FjWltViHVhT9gBrx/Ky
W1lx1oqVZjewO1hzNo51YFVYa1afjYp7kpVlLVkdNpg1ZCXUV8sZNoF1ZsXj
Xo73s30PO23fo469iD1t+yhbad8dbAgbyJ5go1lHNpgNYMvZKNaWDWB92RI2
nM1hOdmT7DX2NHuE5WJPsSNsBftEPUpms4PsgDyobzSbww6pl+trxwayfmwp
G8Has7tZf7aMjWQd2CB2F3uc3cMWsIvZGnacrWfH1ENlBFsb96k8ri8328xO
qZ/VV959fx9bmko+W3zG6fqy2RK2P47T9zf1MLmXbWFTWVXHjmfPsLfjvpeF
jr2ErWVvqTfom8ay2GK2jy1jg9kPMpatZA/E+6nb6GvARsf9yCrG2CLn2Gm2
jQ3S973cz1awsXEe6ttjTGRDWSN2O+vHerIFbAhrzfqzXmwhG8peje9T+rDF
bJGU09eK1WVD1Lfq26NuITekkvEhxol8+t6Qa9jN6iL6asY4Jz+xX9lxVkPP
R3HvswGsPmum/izGLDaedYp73HEj5WH2YnyfbISen2UCW8cmsIbqT6Udu5e1
iXEtO3mm26eS+Snmqbv0fBtjVvoeH6NvjPoefVPZS3G+LF9873Ila8yKs2H6
RrDxbBebw0ax/8pktpFNjmdMfV4mxVzCJrFTjhsuD7GdbIeM0zOGPcIOq5/Q
N4T9KA+wVfFssJT6FcnH6rBL2KXq16RIzHWsIPvN9u6437yWZzYzdvqz2P94
jeWUM2wXW8KOqHPJB+w5tpQdVV8kH7J/sHlsn/pP73eSbWFz2SvsD3aC/ZiV
zPu72A/se1mtbwZ7jv2oPhLzK3uUvcwuxPPBdrBF7FWWHfd0zBnsP3FN0s9+
POfPqufr2x+LEHnXyza2gB1S54hnmM2K7449ET2O3cx6sC9jbEvPeXHfz4xn
Td9ydpJtYr3ZVzIyPa7FmNNX/bWMSo85Mb48FesFx25l38QYwbazhewwy5L3
2Qo2jW1Xf6vvMHuaTWXb2LnMZD31s/oxOchSkhlzuL5xbFVcC3079a1hM9nz
7Cd2lD3DZrPd7Bf2BqusrhT/1/YZ9p199+v7Xabb3spm2jde/WdcE/Y8m8vG
qi/EtWPb2Cx2nfcqL6ttv8G+iflLzx/xeWxvZ7Pty6/nn6xCjNXxnNtXjuWI
82Cvs7OsdHYyB8xKJc9BPA8THZfJ5sU9rJ6vfy2bxV5gP7PX45mO682vijUj
O2ZfKVZSPop5jQ2wb52eOWwPOx99rD87F89cei6L+W2T+hF9L7Hf2dvsgu29
/FKvlTKT9W4/9TcxT6XnmZgHu6u/iPkxvT6ItdSV3uuKrGTtFmu4E/aVUf8W
9yrby75g3dSfx9yVStZrsbYokp2Mu71Tyfoj1iEF9LwppVhDdTF9d6r/LUPT
43iM2TNi/Hfs4+wE28gqsDNyE+vJarM4mRiza7OusX6Rp2JdIZelkjVYrMUq
Oe5DuZn1VteJuUf9gdRjvdgNrK76Y2nBhrMmMTeq35frWWdWjZVRn5ZarAur
zgr5n3+Vk6lknRjrxaF6fpIH2eoYI1lp9SmpyTqxqnHts5Nn5kAqGW9i3Cms
5y0py5qpS+n7JX1uf2E1WE3J1POyXM5qqy/Wd4n6sBRiFVl+llv9qhRmleNa
sBzqfZKf3chyx1eqPiAF2S0sT5yb+riUYU1ZSZZTfVCuYA1YXpal3i8FWD12
adwH6relHGvOrmVns5J1ybJUsq6I9UXJ7GROGZdK1jOxrvlNfVs8r6nkd0v8
flka8xPbxL5Uv+j9FrOJbAP7nO1hE2LCYHPZC2yecknMY2wj+4LtZddkJ2up
4alkbRBrhJ76zsqw9DpimL65cR31rYw5JuY8Np89FGMJ+4jtYk+yKexZ9jU7
wCaxFJvP9rDHWDF1UTnFRrJm7NusZM21LpX83ozfnb/HMY7P7bVC5v9PKaOE
+qRUYW1ZeXa1+oRUZm1ijRNrZfU7Uom1ZmXZjepPpCUbwZqy0epf43OzTWxK
fC/qd6Uqa8euY3/EuoXl8VqF5Yy5In2Nrkslz188h3/G2kNfXq/V1Ln0LVJP
0LeefcZ2s+UxLrEtMcewrex/WFDlNQ==
          "]]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwl0rlSk1EYgOHzk42sBJcICjruOE4EB0HAJMo4VFJRRis7LbTVK9ArkKGi
0s5OKkq5AgHZUcfxGmDcwnO0+HifLzM/yTnJ+cfP554lIYQFcwWiL/jzXX92
hVDVtL07FcI5znKNb/Bk2uv2Jk9xgWf5Dpf4ITe4wk+5qo88+5KPxdf4NZ/g
FzzPNX6n9zzXx0s8zad5hW9xR4fsq3pJB8wvs2b/rev6Rz/rX93Qjm5qcKYt
SbTLbHNKd+I5dVczuhfPqvua0y/arV/1QBP/75r5Zr+sg2bZGT7Zz/B7/sj9
vMgf+BS/1bvOcJLfcIuP8ytucm+8C+7RtueecDneK7e5yC1+wHke4QZPeDZn
r/NtzvBZ7uUfetXeoxc1ZWZMxX5fy/GOtRQ/mxbjZ9FC/C41H7/r+BvQcR0z
OR7VrN7UjA6rtwv1+B56Pfl33eEw3nXy//d1BP4pM9c=
       "]]}, {}, {}, 
     {GrayLevel[0.2], 
      Line3DBox[{299, 522, 1180, 300, 536, 328, 1274, 550, 343, 1278, 564, 
       358, 1284, 578, 373, 1292, 592, 388, 1302, 606, 403, 620, 1226, 418, 
       634, 433, 1317, 648, 448, 1321, 662, 463, 1327, 676, 478, 1335, 690, 
       493, 1345, 704, 508}], 
      Line3DBox[{301, 523, 1181, 302, 537, 1192, 329, 551, 344, 1279, 565, 
       359, 1285, 579, 374, 1293, 593, 389, 1303, 607, 404, 621, 1227, 419, 
       635, 1238, 434, 649, 449, 1322, 663, 464, 1328, 677, 479, 1336, 691, 
       494, 1346, 705, 509}], 
      Line3DBox[{303, 524, 1182, 304, 538, 1193, 330, 552, 1202, 345, 566, 
       1210, 360, 1286, 580, 375, 1294, 594, 390, 1304, 608, 405, 622, 1228, 
       420, 636, 1239, 435, 650, 1248, 450, 664, 465, 1329, 678, 480, 1337, 
       692, 495, 1347, 706, 510}], 
      Line3DBox[{305, 525, 1183, 306, 539, 1194, 331, 553, 1203, 346, 567, 
       1211, 361, 581, 1217, 376, 1295, 595, 391, 1305, 609, 406, 623, 1229, 
       421, 637, 1240, 436, 651, 1249, 451, 665, 1256, 466, 679, 1262, 481, 
       1338, 693, 496, 1348, 707, 511}], 
      Line3DBox[{307, 526, 1184, 308, 540, 1195, 332, 554, 1204, 347, 568, 
       1212, 362, 582, 1218, 377, 596, 1222, 392, 1306, 610, 407, 624, 1230, 
       422, 638, 1241, 437, 652, 1250, 452, 666, 1257, 467, 680, 1263, 482, 
       694, 1267, 497, 1349, 708, 512}], 
      Line3DBox[{309, 527, 1185, 311, 541, 1196, 333, 555, 1205, 348, 569, 
       1213, 363, 583, 1219, 378, 597, 1223, 393, 611, 1225, 408, 625, 1231, 
       423, 639, 1242, 438, 653, 1251, 453, 667, 1258, 468, 681, 1264, 483, 
       695, 1268, 498, 709, 1270, 513}], 
      Line3DBox[{313, 529, 1186, 314, 1273, 543, 335, 1276, 557, 350, 1281, 
       571, 365, 1288, 585, 380, 1297, 599, 395, 1308, 613, 410, 627, 1232, 
       425, 1316, 641, 440, 1319, 655, 455, 1324, 669, 470, 1331, 683, 485, 
       1340, 697, 500, 1351, 711, 515}], 
      Line3DBox[{315, 530, 1187, 316, 544, 1197, 336, 1277, 558, 351, 1282, 
       572, 366, 1289, 586, 381, 1298, 600, 396, 1309, 614, 411, 628, 1233, 
       426, 642, 1243, 441, 1320, 656, 456, 1325, 670, 471, 1332, 684, 486, 
       1341, 698, 501, 1352, 712, 516}], 
      Line3DBox[{317, 531, 1188, 318, 545, 1198, 337, 559, 1206, 352, 1283, 
       573, 367, 1290, 587, 382, 1299, 601, 397, 1310, 615, 412, 629, 1234, 
       427, 643, 1244, 442, 657, 1252, 457, 1326, 671, 472, 1333, 685, 487, 
       1342, 699, 502, 1353, 713, 517}], 
      Line3DBox[{319, 532, 1189, 320, 546, 1199, 338, 560, 1207, 353, 574, 
       1214, 368, 1291, 588, 383, 1300, 602, 398, 1311, 616, 413, 630, 1235, 
       428, 644, 1245, 443, 658, 1253, 458, 672, 1259, 473, 1334, 686, 488, 
       1343, 700, 503, 1354, 714, 518}], 
      Line3DBox[{321, 533, 1190, 322, 547, 1200, 339, 561, 1208, 354, 575, 
       1215, 369, 589, 1220, 384, 1301, 603, 399, 1312, 617, 414, 631, 1236, 
       429, 645, 1246, 444, 659, 1254, 459, 673, 1260, 474, 687, 1265, 489, 
       1344, 701, 504, 1355, 715, 519}], 
      Line3DBox[{323, 534, 1191, 324, 548, 1201, 340, 562, 1209, 355, 576, 
       1216, 370, 590, 1221, 385, 604, 1224, 400, 1313, 618, 415, 632, 1237, 
       430, 646, 1247, 445, 660, 1255, 460, 674, 1261, 475, 688, 1266, 490, 
       702, 1269, 505, 1356, 716, 520}], 
      Line3DBox[{325, 718, 1357, 719, 326, 721, 1359, 722, 341, 724, 1361, 
       725, 356, 727, 1363, 728, 371, 730, 1365, 731, 386, 733, 1367, 734, 
       401, 736, 1368, 737, 416, 739, 1369, 740, 431, 742, 1371, 743, 446, 
       745, 1373, 746, 461, 748, 1375, 749, 476, 751, 1377, 752, 491, 754, 
       1379, 755, 506, 757, 1380, 758, 759}], 
      Line3DBox[{507, 703, 756, 492, 689, 1378, 753, 477, 675, 1376, 750, 462,
        661, 1374, 747, 447, 647, 1372, 744, 432, 633, 1370, 741, 417, 619, 
       738, 402, 605, 735, 387, 591, 1366, 732, 372, 577, 1364, 729, 357, 563,
        1362, 726, 342, 549, 1360, 723, 327, 535, 1358, 720, 298, 521, 717, 
       760}], Line3DBox[{514, 710, 1350, 499, 696, 1339, 484, 682, 1330, 469, 
       668, 1323, 454, 654, 1318, 439, 640, 1315, 424, 626, 1314, 409, 612, 
       1307, 394, 598, 1296, 379, 584, 1287, 364, 570, 1280, 349, 556, 1275, 
       334, 542, 1272, 312, 528, 1271, 310}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{762, 1039, 521, 761, 1180, 956, 763, 1181, 957, 764, 1182, 
       958, 765, 1183, 959, 766, 1184, 960, 767, 1185, 1090, 1271, 768, 1186, 
       961, 769, 1187, 962, 770, 1188, 963, 771, 1189, 964, 772, 1190, 965, 
       773, 1191, 966, 774, 1357, 1040, 967, 1041}], 
      Line3DBox[{776, 1042, 1091, 1358, 775, 536, 777, 1192, 968, 778, 1193, 
       969, 779, 1194, 970, 780, 1195, 971, 781, 1196, 1092, 1272, 782, 1093, 
       1273, 783, 1197, 972, 784, 1198, 973, 785, 1199, 974, 786, 1200, 975, 
       787, 1201, 976, 788, 1359, 1043, 977, 1079}], 
      Line3DBox[{790, 1044, 1094, 1360, 789, 1095, 1274, 791, 551, 792, 1202, 
       978, 793, 1203, 979, 794, 1204, 980, 795, 1205, 1096, 1275, 796, 1097, 
       1276, 797, 1098, 1277, 798, 1206, 981, 799, 1207, 982, 800, 1208, 983, 
       801, 1209, 984, 802, 1361, 1045, 985, 1080}], 
      Line3DBox[{816, 1049, 1048, 1363, 815, 991, 1216, 814, 990, 1215, 813, 
       989, 1214, 812, 1283, 1104, 811, 1282, 1103, 810, 1281, 1102, 809, 
       1280, 1101, 1213, 808, 988, 1212, 807, 987, 1211, 806, 986, 1210, 805, 
       1279, 1100, 804, 1278, 1099, 803, 1362, 1047, 1046, 1081}], 
      Line3DBox[{830, 1053, 1052, 1365, 829, 995, 1221, 828, 994, 1220, 827, 
       1291, 1112, 826, 1290, 1111, 825, 1289, 1110, 824, 1288, 1109, 823, 
       1287, 1108, 1219, 822, 993, 1218, 821, 992, 1217, 820, 1286, 1107, 819,
        1285, 1106, 818, 1284, 1105, 817, 1364, 1051, 1050, 1082}], 
      Line3DBox[{844, 1057, 1056, 1367, 843, 997, 1224, 842, 1301, 1122, 841, 
       1300, 1121, 840, 1299, 1120, 839, 1298, 1119, 838, 1297, 1118, 837, 
       1296, 1117, 1223, 836, 996, 1222, 835, 1295, 1116, 834, 1294, 1115, 
       833, 1293, 1114, 832, 1292, 1113, 831, 1366, 1055, 1054, 1083}], 
      Line3DBox[{106, 402, 107, 403, 108, 404, 109, 405, 110, 406, 111, 407, 
       112, 408, 409, 113, 410, 114, 411, 115, 412, 116, 413, 117, 414, 118, 
       415, 119, 416, 120}], 
      Line3DBox[{858, 1060, 1059, 1368, 857, 1313, 1134, 856, 1312, 1133, 855,
        1311, 1132, 854, 1310, 1131, 853, 1309, 1130, 852, 1308, 1129, 851, 
       1307, 1128, 1225, 850, 1306, 1127, 849, 1305, 1126, 848, 1304, 1125, 
       847, 1303, 1124, 846, 1302, 1123, 845, 735, 1058, 1084}], 
      Line3DBox[{860, 1061, 619, 859, 1226, 998, 861, 1227, 999, 862, 1228, 
       1000, 863, 1229, 1001, 864, 1230, 1002, 865, 1231, 1135, 1314, 866, 
       1232, 1003, 867, 1233, 1004, 868, 1234, 1005, 869, 1235, 1006, 870, 
       1236, 1007, 871, 1237, 1008, 872, 1369, 1062, 1009, 1085}], 
      Line3DBox[{874, 1063, 1136, 1370, 873, 634, 875, 1238, 1010, 876, 1239, 
       1011, 877, 1240, 1012, 878, 1241, 1013, 879, 1242, 1137, 1315, 880, 
       1138, 1316, 881, 1243, 1014, 882, 1244, 1015, 883, 1245, 1016, 884, 
       1246, 1017, 885, 1247, 1018, 886, 1371, 1064, 1019, 1086}], 
      Line3DBox[{888, 1065, 1139, 1372, 887, 1140, 1317, 889, 649, 890, 1248, 
       1020, 891, 1249, 1021, 892, 1250, 1022, 893, 1251, 1141, 1318, 894, 
       1142, 1319, 895, 1143, 1320, 896, 1252, 1023, 897, 1253, 1024, 898, 
       1254, 1025, 899, 1255, 1026, 900, 1373, 1066, 1027, 1087}], 
      Line3DBox[{278, 248, 1374, 901, 1144, 1321, 902, 1145, 1322, 903, 664, 
       904, 1256, 1028, 905, 1257, 1029, 906, 1258, 1146, 1323, 907, 1147, 
       1324, 908, 1148, 1325, 909, 1149, 1326, 910, 1259, 1030, 911, 1260, 
       1031, 912, 1261, 1032, 913, 1375, 249, 279}], 
      Line3DBox[{927, 1070, 1069, 1377, 926, 1036, 1266, 925, 1035, 1265, 924,
        1334, 1157, 923, 1333, 1156, 922, 1332, 1155, 921, 1331, 1154, 920, 
       1330, 1153, 1264, 919, 1034, 1263, 918, 1033, 1262, 917, 1329, 1152, 
       916, 1328, 1151, 915, 1327, 1150, 914, 1376, 1068, 1067, 1088}], 
      Line3DBox[{941, 1074, 1073, 1379, 940, 1038, 1269, 939, 1344, 1167, 938,
        1343, 1166, 937, 1342, 1165, 936, 1341, 1164, 935, 1340, 1163, 934, 
       1339, 1162, 1268, 933, 1037, 1267, 932, 1338, 1161, 931, 1337, 1160, 
       930, 1336, 1159, 929, 1335, 1158, 928, 1378, 1072, 1071, 1089}], 
      Line3DBox[{955, 1078, 1077, 1380, 954, 1356, 1179, 953, 1355, 1178, 952,
        1354, 1177, 951, 1353, 1176, 950, 1352, 1175, 949, 1351, 1174, 948, 
       1350, 1173, 1270, 947, 1349, 1172, 946, 1348, 1171, 945, 1347, 1170, 
       944, 1346, 1169, 943, 1345, 1168, 942, 756, 1075, 1076}]}}},
   VertexNormals->CompressedData["
1:eJx0nHk0Vd///w2JyJCMmeco81hyN1FClHlsMs8ZQ+aZyBxKGlQiJTQocnfv
BklJJZUSzRmKEpGp397OuS3f1u/z/qe19trrvs99nNd+Pp+v1zmuhOteKw8G
Ojo6dyY6Okb07465P+g/bYoSHZ046+ovG+gW/vsONh6kBN9y3Ac+vWt9/8lN
hvIxQfLe2z+jIC3NxmlNazI4482x/OxXNYoUZzjlGFrnvVg64KKcATzTXKVu
7dCm3JOTvROA1p20E21ydDMAV6Ey+x8VbYr5gWwVvJ4dYVB3aDoFaKRzN11u
VqdY3uWfykfrtXHiLutX5IGbI8bXxtkAZbv2/q65+VEgoPb9GhdHGhAfM/ru
xaRJqU9Vdk9D+39Ix788YRMNZO4wT87JKVB+RcRvf4LW9zwXOVl0PRCUXt+w
ZUhMhLJc8gv4gdad2/JPlgXtAhx9p/qvFbBT6g5kSM2i9QreVRNOTuZAsVdt
y4Mls3pGbw6v/oPWI7Z911Bcvg74Z59ZJag+oLdr8P5LvH6Wicf5Wq4UOKL/
bnrl7ad6D72YpvH6npVPi3/NsQEetetynLVNesnCG/7g9fL2PesPHtekeHHF
OeR3SVNonDd/WLldXCoM6HQaKch7uIHWdILzlJ7SmtePE0EgZ4RI++pg4L6c
4My/3dVjXXsq+F75fOzcbBh4JUpwPrQkv16zOxV8fZJVAZjDwadUgvMuv81Z
TZ+TwOmLzAr+GiHA/C3BuWbFQMK9n9nA5zV1VdX7aJBLchaWCyv51pcMvMSs
H0VJhQK1EwTnzrL766jHI8EbGcfS0EYvkE5yVrn9n/XpWj9wp/KqVEK1E1hD
cv4Yclsny9oFPJGU87DeYgbuk5xDgvZ+UwsxBcqXbD83Rq4Dm0jOFQ/vHF+T
rwWYlk24b7khA3aQnK32+OQ/PC4BAiaB6YHfXOAByVmKMXzeQmcZ+O7wkN/D
dIpC43y9ezI56JsiZa/amaGC22p/ORuvdRYZ6vMDQ/emv4dGBYOwZIJz6b1N
9n5VkWAVP+vu9OE4MMtNcO48tXFJwuo48NJsLPfIQBIoWkVwthEK2HVZOw6E
q0X9lhxLAmeLCc4H1/PdopffD6bWPKj/6JkAFC8TnG8xz0wILUsBccJGWpfF
MoEaIDgv3zsXnZYQDbTeqXVtoiQClQqC89qNsgLWrMFAPPN5tvLOcPAnlOB8
ovd+iNBqN/AChnjmMnmDBpLzjVoJznVHrMHb9FDhqiIHYJxFcL732UlHzHwj
uLZ8Kfuvsc1AjuS8Z6z9eI+uMghZeliOckgdeJOcl+5PaUh1FwDvypYmuBWL
/uXc4HBU80soPbg/N0ItfM8EkkjOf7a2stW48FJKN1YLTXho/+Wsk+v49PlH
a9D8UvWCeXs4qCd1o90kuAMe3gPY/rshpm+cDC4IEJxb31apdqV5gBlP3SWS
RemAQYfg7HGjIvpCvgcIdfNUYTqRDjjjCM6izwobDM+7gtteJ4ZHQlPAZirB
ma72v951R/wBZe2zq+o2uaBCheAc70dhjTjpBnJEvrQlJqQC61MEZ64dOb2F
1g6ArqHbX/MMum+BBOemnh1uSxzNgEW/8odd4wGgV4zgnMLGqfJtRhfw1JyT
ely5E6wj61nicswDD3EFUCfSmj5evhWsJTmrOfxm22nGB4oHzrH5+OkAZ5Kz
gmjG9BYfelAcZnFUgVsKtJOcPzTw3dk6NECxtOkx3WrKBmj1XB+m8u2CCy/1
pO+hH+OLOCs7+yX0fLSGCVu/pGDOnWQ9874s1751eA/USZ2fA4jz12UEZ+sD
gfzP0zzgptzC1xKI8zZpgnOnW5pfXb4HhLu5GTDnlEqC8+e+Kd3N513hkI/f
HczZ5BnBmV573029I/4wN1Y3AXPuZSc4r5spqI866QaLBxhOYs7hFwnOz2bS
FUusHSC0TNfBnJ9FE5zdCwIFWBzN4HXV+mrMeZas57aV72a/z+jC1vuUwU7E
eZjk3CDb5uAjrgA1/kzYYs4cJOdgHcqKPWZ8cCrj2RtvxJmmz05DZ23MfOjh
mVvtkZgzTZ+Do/oktg8NUMFaisBizkX2jPXB3xSp+rllIYt1I8phVH24zw/K
BTgmY90wIet5B8s+C/+qSJjkc+pIGtINNh6Cs4cxv07i6jioy7uZD+tGOBfB
eT1DRfYV7TjI/F09EeuGQSnBWbB16D6D/H7Yc++UCdaNshqCc2e88S3hZSnQ
TvhJ4SWkG2AdwfmJ17X89IRoOK/ywQPrRt8hgvP47eQ7SDegF2MxA9YN8X0E
5/JzLFrCq93gZfP2RzlIN6rJes6Pev8U6QZ0fTmQeBbpxjTJWXUo7QfSDRi2
am7fBNKNjSTnDlfNnle6yrBuQ2WtHtINGueXUVzn0twFIJPG2BXXRbpRyvzk
I9INyPVqqSbWDRrnq1OROcgHqYkPN87kLvJB62GZ48gHodOpHyNyyAdfxxOc
rytNBSIfhK3CVQz3kQ9Kknnjys7SRuSDcN3BtKJq5IMKWgTn0rXzTFrdqfCG
m9NGCvJBRjJvaP9070Y+CCtqQud9kQ9mdxCcfcWqvyIfhGVFgdsqkQ827iY4
274v/oB8EB7kVSmIRD7ISfrg1SjBI8gHId+nkqUhyAefRxKcvaSWtiAfhGWX
vvvGIR/8StazweOgCuSDsPj+5mpL5IPspD6r2kdbq4eYwhHjYuOryAdp+ize
1/MT+SB8JpIzvxn5oDvJ+dqk0XPkg1Aj21stE/kgTTeGgnp3bdNZBkemX6a5
LfJBgqsOVbs7SvGd2KkbNM5mBQu5Diq/Zzn84fz7lk9kPU8fWMh1UPynq+jt
1O8tNM5FlxdyHaxSEjq4WXO85S6Z6x5tWMh1sP9s6aN9YLxlK8lZJWYh18H1
XwKoW12+t2wnc51t0kKug0LSrA+u90y30HLdl0ylqyjXwY0Csb/ns3+0CJwm
OAuuWch1kMIgkCz+/HPLJJk3NrxZyHWwSpZ6d+zJ8xY2kvP2zoVcB6tmmZe1
pbS10HLdeuGFXAc7R7uHwtoaWwxJzqttF3IdnA0Jf3Pv2+kWWj2vYF3IdfBH
VFRax9qcFppunBVcyHUwZQuXbNzmfS00Hyxz4EnD9ewtISqa1yVNpXEOK1Et
wfXsUTrNudrDDdLq+VHujDeu5zOttSKonmEsK8FZKoO/Htezs8bZJlTPcF6A
4DzHd3EO5Tq437DXHdUzpNVzFqfuI1zPqR/Vhf00QiCtnj0eBrzH9bxU5mgc
qmfotp3gPPTm62tcz9YBSxpQPUNaPWsVKOXhepZZ2aaM6hnS6lncxfYSrmfB
d6sPo3qG5yUIzn4Wm4/iei791dyD6hk+zyQ475OgbMb1zBDxci+qZ2hHcuY6
ZzqC69nS9LG08Q0Z6ERyvjX/6hGuZ70HeRaoniFNN5SE1e1wPXc/m6pF9Uyl
1TOHckcB1ufPoWfjkD7/5axZcoMf67NhZ0kO0mdoStZzlcwSHazPZT29dUif
oTUjwZkxwp4X6/OI2xFxpM/woSrBud/fMhDr8+qdpgeRPkNA6vPPWL4arM87
pzZaIX2GV+8TnPVa2C5ifU5S+FiJ9BluYyU4jzCMhmN91smbDEL6DHtJfd45
1dGA9dm99AoX0mcoRurzyYdeElifP/FWvkb6DJ3Ier4+6AGxPu/jD81H+gxp
+ixQPvIG63NJZHka0mdI0+dZK/5rWJ8vnFa/hvQZ0nLd5LHkPKzP7S5W7Uif
Ia2erz8x7ML6nLFiqSHSZ0ir59i8khM4b+RYjk+gvPGX8wu5VwY4b4wFb89A
eQPqpRCceeRdpv9DeeOyLIUe5Tq4lexT7ruPPe5GeWPYnbsX5Q343pzgbG4g
JIvzhrkvy1KUN2AqmTeEXw392YTyhpl/ygOUN2BLLcF5QPqoC84b47wjqShv
wDdk3vhUJRKI80bPtt7TKG9AWt4I4sn9UIzyhqRV00aUN+BXL4JzTmreDWaU
Ny5tyb+M8gZsFCE4dy2dLMd5g/2DwwjKG3CO5Cy16e5vb5Q3lvldtUN5A1qS
nEXX+bXuRnnDL1PwPcobcDfJ+fREBx/OGyEP1sSgvPGXc8b9rZ3bUN5g2jYu
jPLGX86Vh/dZ4vwcbnyRf2IR5y2V/PwvUH5e+1a4GnMWTyQ4UzisuW6i/JxV
cl4Ic+YQIjiL8KXG4/wcaiXCiPIz7CDzxo7Wk09wfrZRjVuDOdPy8wbupVM4
P4/8qv6CORuT+VnXfL/hepSfd62/VIc5P9UgOIcK1pjj/MyhyXEXc6bl57ee
7zcWofx8w8DOC3N+FkBwtqv6dgfn58LmY28w5zdk3hB0O1OG83MKT7oIys9Q
h+R8PZxL3BPlZ1Nl4zjMeS/JeZAnwRHn55cXHzKi/Aw9SM6bbSY0TFB+/pny
tHQx53cnPwmZo/zcXf18E+ZM0w0n+Z4K3A9yctj2LdaNe3Np63A/OHVb+gvW
DS9SNyIkykJwP/hEStQM9YOwlPTBcZ/TUrgfLJ4/loB1Q0GT4KzS+DAe94PO
bNqjWDcOxhKc2dh+9eB+kOJ75DTWDdOnBOeqw8vYkW6Ax5wjkqgfhKJmBOcX
5QaHcT+oHZV+D+uGKtkPyn2pVcD9IFt3aCzWjfJwgjNV/30W7ge9+7wdUD8I
tUQJzkqfXWRxP1g7cGwF6gfhQ1KfjQvozHE/yNGfM4t1Q5bk/G1p+R3cD661
ixZD/SB0IDlrKmY9xv3gifM83qgf/KvP9pU2xrgfPOrTUbdYN7KPHTLE8w0O
nc1q+Yt8sMxTyAnPNwbPl7PLIx/8QPrgfyeXqOP5xrEVPH+wD95kJjizrM8O
wPON+7u9O84hH1y1muDM0e7RjOcbigWNUQD54AdyvgFnjQ7h+YbmqMByf+SD
k2TeiByKy8LzjU9H7oycRT5Im2847t15HM83xj6GXohCPqhO+mBLxOFNeL5R
+cPUKxT5IG2+0dMy6oTnG+EanD/jkQ8KyBKc951q2YjnG9djGnWtkQ/S5hvx
yu9+4flG02Vh2Ih8kDbfUJLccRbPN+aYbxtsQT5I0434l79L8Xyj402E4oFF
Pti3JYcF+SAIOvr6mzvyQRpnjnliXhfN9SN+l87Hv7nuHTmvC5qmqrXflaTS
ct2KdGJepzxztb+9TIVKy3Xt5LyuyXu6QN1Rg0rLdUw6xLyOgd5RaZ+TBpWW
65gjiXmdwG5/id7zqlRarpOLJ+Z15l7ifeHLdKmWJOdz5LzOSv3AkTslalTa
vK5BhpjX7Re/GFI4LkulzeukXxDzutM2126xDQpSafM6nvvEvM7XqCFJIZaV
Sst17nzEvM6vInc596OpFhpnte3EvE7kWNTnWe5PLTtJzkpLiXnd1bdfIxIS
HrfQOK/iIeZ1YVe1pHkON7bQdENQefZya4QnaEn86qabbAQ8GA9dmkTrew3X
9eE+3OBklP5FpN80/mKK5smKXPxgxVHq5E6OCQrznsdz+HOSwSw97jOrPR40
WyJ9ot1H/TuCd/OWuILQ88+2dtxwAdvJz084V6nRFscNpgKH5Zrj2QHtc1Sq
Z61y/1gDuudafMG33UEJuT+xtglqpi8BJlRLtS3bef/uL3wazSAXsZS6W3FZ
az2bF1Ag94usc042CGhs2XGkeIixih8sJfczKaeV5v2xhubhA21B6PM/MRD7
24L1lmunL4E87uLvjRd9vt2ZA9r5S1xhv5SV4kN0/f7k50cHva1G1w+nzrv8
vr7o+t12HO5DPKGkBEeaDuJ5iNx/3k2xBnGDSX4F9C6LuJX+oL7C+5+aH7qP
9sMicr/0b/mzeL8w64Ax2k+l7V+3585afD16S2VN0fVAJnJ/EHX7MXw9T52d
+Zri2SFt/xGB5/vw91U49fIx+r6QntxfKJc4rIW+r/NGhiH0ff/uP3Q0zlc+
jIF6hOAJ5cn99TPz58X6G1oqCJ5/9/tXPA3G9+v7g/Vc6H7BKpKnoDWlD9+v
nodTClsWff65g7VPcD3QjzQqoXqAc+T+fC5GA1wPr7feZ2hedP1nEvWacH2K
bTNahuoT2pPXc/No/Xtcn9H3JcdqUY6j1eeARF4Grs8QxsjSnYu4sZcQdbAn
8Qon68/bLbT1BHmibjS7bEKVOPgotO+bXEzsZ9qXkZqh26pH2/8+t1APz02M
ehi0QpDf/n2OILj8VwHq/3mTL2gNIN+g1f+WnXoeuP9/m1jagH2Dtv+xzGCX
K+pjL58YP4D1j3YeS9a3gp4vL27Y/yH0j7Z/bL1QgMjLmpYlAsQ5pn2+q2Bm
E+7H8hN9dy/+/BN8d/dgPaVGSa1Z/Pnb2g5dxvmAlT6bLXjR9Rdsk07APhf1
4kbyl0XXT6llWoZz2zx9gNX5RTpw25RTDeePgpQ8Ewt03mmfz1xxaQne714l
fez8ovuy/bOpIt4/xS1cjvb/1XnfnsQqfD1uNs/lcd9D2382XCAEX8+NT46H
cH6nff4qZ/0S/H1l9w96436Utr8z7Mh6/H1lb+dr4L6K9vk3euo3vBPrunGc
4Pl3v75Su3bc5soWB4Ln3/0zP4NT8f1aYfni3OLP13Bwmsb3K3m+IRF/Pu16
YEGiCa4HWMEvELLo+q+uclmK50EBUzqSA4uuX0qBqLf05/byG5xXUml6xaNG
Zcb6mWn+0Q7p599+MGKKz+LcSnuQ+ub+R/4OaWC94tLHObRu0SnWEiXBDa6q
xkvcsX9LkV11aR7vt7mjZYn3N3bHrkf7oSq5X+7VCBXvfzoCj922f0ul7be6
rMq7s0ebUpQQen1rPNPf+6v2cZ3dSwo3kD774XaG7396cuR+sOb4FNs6e+Cq
XbPGMpGRqkd+PtcG51NfHrOB9UKqZnXcPX+v/6gCsb/wd+PzgnVLKRRyP0i3
PIH38+d/kKzn7vlbP6W7b/Hj62nOtWJE1/OXZw15PR5nU6Uy71BbaNf/Zq7W
inosGOztNJpPndoN1I+GCgyg9eqwsqZXxxNBu7BAz8wbFcqs9pB9A1pPzfXa
xHMrHty69K01pjgQvNEh1lmX/Cc+nJ4Gbkzn33S4pEnZEd7Pm4jWpyqvtl3d
mgLez8vZah8MBX8CifVlM4XHwjUzgHfnttLdxtqUkVOu+3F+GPoTn9XYmQoM
7BpNJ+jDgWE5sW5oI5GpypgOtprVHWH8pEm5/kn1SDRat3QTGbrXnAIuPIu4
pjIVCjRHiPUiq3P38u+kA/frzc/bcrUom6fj74Sg9WaW9XX0vqng6N7hgfnj
YUB/RcLC+gedM5+H+nOAyMmDV2Qe6FEe6D46vwKti5H5RI58nthA5pOwC1y1
Sk+ygIwDPH2nfT84pU/slySfiwX881xsefGjuoKAWND9+eAnR+m1lAKeuv77
aN3nbl1QcvJ+4EJdJemR6QN28RHrFYZMgzedQoBUk5XhVLgEZanhnR9D2MfP
fGULzAwCm783Fbx+tQtwkeuCNxuH2xw8gGbetMxTeR5KhrL+uym0zveL4cRh
XTfwWkG1RCHNClSS61I1tTc/ctiDyN4rwbntTBSLX5ZfcV29i3BMtWq1AWHH
+V7aMxgBB3J9py/Xrv9YjRGvnI7C5b/0NqgZReP68aoWZS+9ZQSSOTYevDmv
DmjrOZWfxwV0NYGsnIDtlbiPevJLnn1YmOtSK8xeiauDh/YFxV7+koC27pfd
9F/7CQlwqPzH8ps9j/Us6WRmFuaWL6wiDmmKg6/8ddYO6ziBw9YfC3ms/Evr
RU43b9C2UiMspygQfCol6naMP11WZTocHA8KTmDKjQb5ukR9MhmcNYwSiAGN
3meOHihPBNZ7iTr8eOqt6iqVOLCV0nxn57ckEE/WoY32qzHVhhjgf+Xj5PBc
ImD4TNRVYODkJZtTscD/2JZfQoeSwJpvRF25cX84wKCfDHydw5MypFBdGxP1
wEs+v9tAPr+j9WsfZuWOr3IMAe37t4XM0kcArZXEfadrTbEFHzzBjcfVz4wu
+YMfG4n7+9tCcjTymBMQ7vJoOVCHzqkKcR/72fcOtd3cCjg2cF5fwWwFAsn7
dcbA4sPx5g3giNRAZDfjRqBB3hduQ7/voVEKoPq9yAubwypAmeQ/Jkjdq76X
D7gFqG69KSEM7EnOfPq283relmDi+TrlpStCQVsxwfnEheuPXu7aBV5Zfqlu
VkoEphSCs4nyn4qv7O7A5fZnPovJVPAxieBcxHXeTj/bAwxD+yMrj6SD72cI
zuJKXzQro93BDY7JTbF700Dea4Jz361igbtyHoD7NJPDkrXpAHVVC5w/3tr2
SSraD+S/Uea7KZgDdpDnNI18fneIfH5nQ84fsmvfXk1QdQJtR3SH6+piQD4H
wXlg//0IY7vtYNm5S/pjH4NBDiA4P71y1ECYzhB8SzmWebfTHeQrEZyZkya0
udI0gLOGhMen/XaAi+T8OoFz654kaXB7XUNB777NQInkLD02UH3xEzc4u4lD
9FmDBpAjOYfu3G8QwkgH3EwNarQPSPytZ1WBM3b63pbwV8kUG+a85jDBuS4w
UfDNrl2QwzI3C3M+q0lwDkr3cxpld4cdKc+/myPOosEEZ/brCQaG2R6w/mlP
IOZsVkdwtvN2/lMV7Q7Pn7dYhTmfnCU422vlTd2T84BuVybXYs7WfwjO205G
npSL9oNazQHvIOJsIE5wBuTzu6P/PL8rDcszTlF1gma/Yi9hzpeECM4Om0Yu
mthth005XKKYc4oRwTmzNqVblM4QGm3t2IM5/yZ1qce7nn5lmgY8pRuhizmv
JzlPFTrzuidJw+vjk76YsxTJeUWR+LqGT9zwIrPeZBfirEBytt1r5BfGSAcD
NQ8fWMx56FzGKS43b/j1mOPlg0g3osh6zvjUwqA6HQ6Nlsw+XoJ0g4XUDUlT
6u79AjFwU1LxGqwb730IzhI+Hq5CKnGwNfGWGdaN9ccJzpr0bNzqDTHw+6lz
qVg3Aj8QnN1M5vptT8XCXXo58Vg32j8SnG83029j1E+GPo2Vn9ORbuiTPvKC
fH7HoEo8v6PNh3nW1TsIOYbAzSsY+2aQbiiTPiJ1QZKi/8ETiio9EMG6UahP
cHYfHZyJOuYEP1vo2mDdkCM5/+y9y9p+cyt8WGm8GeuGF8n5oG4m08nmDXDV
0vAlWDd0Sc77Svynw6IU4NOU1r1YN2i63fTRzFpjLx/czPVfAUS6QePs39FX
gnIFtBt0HkpBuUKa5By19DUV5Qe4dNP7zv0oPxSRueLQ2hTexq0p8Krxai4t
lBOosQTnDWVP+lAegBYF+4Z/ojwwd47gbM51YX1bcwp08qL3V0a+/32A4MxO
+Y+BwTcVcq3yPjSH/P0rC+Hv1VNveJWfZMHgfJvhW8ivtd0Izs7k87vCf57f
XXD58wL5MnS7nxHqhny5lJ/g7GG03wz5LzzVsim+B/nvOOm/aveTBpDPwtEH
Kl7yyGe5SX1+K36pC/kpVDm0r8AO+akTyZmX/ZwL8k3YLPpiM0S+qUZyrpw3
L0T+CD+ta/f0RP64lqbPWseuIh+Ebp+/bLdDPkjT59Nbd/pk54TCAN4iVhP7
ty2jJOeTkQv5DQ6Yp915G/qthZbfZJct5DRYOLt1NLxrrMWFzGnJdEU4j0GJ
B/0Xdq4fb6HlMV/HhdwFOesfeBi3j7XQctcH+4V8BfXcz0bUzIy10PJVPZs5
zlHwB2dvjXTd7xYRA4LzCPn8bss/z++UVERxLoINh6yryncOtAiRnKnGC/kH
2igxdadn9LbQ8s/LOws5BzK8+TW5TudxCy3nGNUt5BmYo6zqlahxq4WWZ3L3
LuQWyC7IWtx3v6GFlk921yzkEyj+9g+UPHSyhVbPmV9zltTPScAIU+NrZQ+y
Wmj1vJ5xMA/Xs9BtQ2aUkyGtni0ZPlzC9XwjrZYuujgQ7tcgOG8d1uDE9dyg
KqaG6hm2+hKcpc/4vMD1fKP7Huc4fTh0P0pwNvr2QA3Xs3x1UzaqZ0ir5865
p9Mor8KWi8mNqJ7hFyaingU6x9lwPa/9Uyxwu30/jLElOH8nn985/vP8bud2
rw5czyasGcdRPUNaPe8GOzbhek76nX4V1TN8TuaNGs2f73E9d0WfS0f1DK+S
Pni0wKID1/PHxv8uo3qG7CTnhh8O1riesz6u9UL1DDeSnGMcNHNwPct9oEtH
9QxlSc7has8u4nq2sqpLQfUMaZy/U3oPYH0eeLi0DekzpOnzSknXEZTroOzl
fR+RPsPXygTn+xfLNmJ9Lp7U1EL6DOX2EZxNtN4YYH1Wfztph/QZDl8kOKsv
y/yphvS53TksD+kzfDxKcK5Q1YdYn/t92w8gfYZ1E0Q9574K2oD1OX7s+hTS
Z3hfgOA8ST6/o5DP796Q+qzy+9omrM8uD6W+IX2GNH3uE+uUwfo81xmvhPQZ
zpOclwUavsX63PptYAfSZ/S9CM4WsrHf7iN9nnwzbon0GdL0WUGn+/MJpM+R
dxi5kD5DA5LzuiD3PqzPLoe0IpE+Q1que/HkhS7WZx+58DNIn/9yfrTksxjO
G+yHxzlQ3oAJZN4oyp2+0IvyBr+yfw7KG9CX1I0RUw9+nDc6z+wYQ3kDOhwg
OLPyHpzZiPLGto08wShvwFV3Cc5PlEJbcN648DRYDOUNqPyN4DwvmtuA88YD
oUZ1lDdgYD/BuVe0xgDnje+Knz6jvAFpeWOYfH739p/ndwe2/Z5IRnnj+eju
FpQ34HcWMm/cmd2P88Zmh3pplDdg6AbSB428D+G8YRsb5YXyBqwm69m7OrqJ
G+WNbW4aFJQ34D6S85jW2AM3lDcUV+v5o7wBjUjOv3iNf9ejvCE22DuN8gak
5Y3GNflqOG9oP7p0EOWNv5w1yqLXU1B+Zok9uwZzFi0hONd81jXqQflZo9Ch
EnNm1yc4s8e1fMX5WXzgAg/Kz5AngOC8ru5wFc7PRUdtSjBnywKyngPqU3F+
Zkj1McCcafl541knT5yff+WnWGPO3WR+3v31mLE0ys/rv9pzofwM31MIzvvJ
53e85PM7Wn6e8N4kkYjyM0Nf+CfMOY6d4CwdOH4F5+eg3Xp6mPMOMj9HnXiS
jvPz7qmjqZgzLT8PHvuUhPNz9IWLuzBnI5Kzi0h4Ls7PgutNsjBnO5JzeKXz
MM7PUiLX+FF+hookZ0MPhwicn3fdXl61mDPHxoA23A8qZM25on4Q5pK6wVKa
TcH94IpJ00DUD8JV5LwicmfKHtwPlgnK5GLdcCbzxleb/yxxPyiZ8r0R64bR
aYLz2sFlXEg3wBrezK9YN2LJXLe2zPMJ7gfzMnK+YN2YIPPGKb6PJ3A/6HeS
Jwj1gzDQkuDcTz6/2/DP8ztnHpZLuB/cvnFkD+oH4Q1SN2Lcy4JxP/iTLfgW
1g1VknNzeRQX0g1Qfx5exrpxT5HgfEBojg3pBuCWSL+IdePjBMH5a/OSJUg3
wDSvQADWDXmS8+eq+5xIN0BifEYn1g0ZkvOhaLEs3A/eq3DWQv0gpOUNw4Jw
Zzwv+pyj9gn74BqS87OlNdZ4LsTirVwQg3ywSo3gHEP57zGe/6wf26GmjXzQ
M4TgfNI+vgjPebavLJaaQD746STBuesZ/Tie5+w4db1QBfngLpIz+/mdTXhu
s+Ne1L155IN9ZN5YOWF5Dc9hLoat3n8H+SBtDrOLfH439c/zu7M69LF43jIT
92vEHfkgbd6y8nX+CjxX6dC7avsa+WDRZoKztNvTM3h+whT9J0IB+eB5MtfN
/WnIxnOSjOy86/bIB2lzkr7tITx4HqLDKRN4E/mgHsn5DruxFZ57POoqjPRC
PkjTjV2sG+PwfMOsv0HUYZEPrllx5FPb6VDQfbbwLYwXp747O/XuC1qXCSfm
ci861FbIlilSabmunpy/3VyTN7t2TI1Km79dJ+ds/eUX3z5z1KDSct0bcp7m
mJR538VRnUrLdYrWxNysmKtfa+kSDSot17WtI+Zju95qTRrMrKPS5mP15HzM
kXx+R5uPvSLnXR/MXp792byaSpt3CRsRc61NXpEKPIOiVFquKyfnV1XBOauT
5ldQabmunpxTnaVTGhUMYaTSct00OY+ydpJrcQr7+TfXrTlLzJ2aDHe1mPe9
+5vrgkv1vlkOBoOYA4q1slW7wLnrV1kW/K7qYkS/XAIYHPj2Q73FB9Tminhc
xj6byJh+jSUVsHM2cvTq+oJzKUcq8PdqPp2WYsGQDnZGfurdxOwBuOcSm8PQ
+uXzrUG3ddOAyTD/3hoLZ8DfH5KA+Wsf/fl0aCoNbLny1P7qe2fQyHdxaRRa
v/qCczXrkRxQlHXeIUvKEMTkmSfz4noj54dO/8wPY2sfV5hzRoPKmsF76Tfd
gc6GjMQH+Nw5fdh4VgudR419RZJ/rMFKRcrwMFq/OXxm7tIud/A4eEZYi90A
rNcaXf8b57ddIh2vbOzAow1t75sj5QHPvALj/B/cj7zhrS/cDBJFBBrXm3MB
DfuMeMzNMpEtRmhOA7xPlt9V+Ps75VuRx8cFntpWczbePkBWDc63dQQAxkaC
5+drLKeF0yPAbdZZ/m3lUeB6CcGzrSspd25VArAX8t6ykjsOyJI8LbqdfrOH
JgHNLbli8UGxYANd0gJPf1m6monsJBDdL7P/WnAU2NZO8NSz45J1Uk4Ga/f9
ltTU3g9iVQieUdtz8lzYs0AgPX3M0JUYsOQQwVOCnL9p/jN/a7A5s731bSi4
dlpa8TVfOChdT/AMrTAYnLjgCzJZFPayjnmBFJLnwy5jzrrE3WB5wQH2/S6O
oJPkaUw3d4K9xQpcopdnOCNiAsRJnuXPObfMhhmCn46/zX0NtYEeyVNi/D2P
fKgaeP75QQuDuDSg8WwcLvyUOmyNfO+Wmfz3EHD4CsHzU3nta/Y17mBG+FDY
ydMJQPIIwXNWZY9S2dheINlxfvRWRgroLiJ4LnujzlQXGQaaaxIbbIxSgdk4
UZ/dc29nJdz2gbssDIFdScngcS/BU77A1HKFWgQ4LP2LQ18yBeQyEzwbAdt3
ZpkkUDOQz9BVkwHWlRI8q8k5W/4/c7asn/MGl1P2ADonmc1SJ6LBHi2C53PN
23SNZs7AhE1TR7UwCFxUIHieNbphG4K4Za/ZmKBd7AqESJ68lwTZNvdtBkq3
W7yfBFsDQPJkvPDiS8SkDhCprU6bG94IZEie8f3M7RHJq4GL/p8xdW5V8JPk
eXyifOmWF+awbi2dseq6UGBF1mcEV9324ABbSCkpP3dDKRFsziF5ptwyiPU1
g5lpDx5aTqaCtZkEzxlR6arIprvU9UcY3ggcSQdRK4n67LHvrOgYNAHbrio5
Je5NA6OPCZ4aff9dKvE1A6JrTj5lWZsOLEierlwfedsKPMEP9ZgLtwVzgFIu
wXPV/5inCTXb2rft3g6z2wQ1GupigIwBwTPWMuTc73oVWL228iqep4mvJXg6
PhnZ7KnAAr5n19XjedprTYJnnvTqncEvRMBaySZvPE+jzhE8i4ubv6zfKgBm
rgscxPO0NSTPJ9MPQBMfO9gxOSOI55bDJM/KwkMlUl5ekC0n8Ber114wdJng
GfaNf33FjVA4Nmu1Se9UDNJ9gmf9s9FH8rL7oBXz0S3Cy5PBWCzBUy8/5EdR
bBjUvBhGJ2eYCgSXETxPFx/LHs4Ogj1iY3+ODqWAXaR+pnJsk1VmCoaegcuk
B46lgjOyBM91leWpol/2Qtej0q+i8w8CtiCCZys5N1v6z9ysolS/QVIqCP5Y
l6adzR0JOCkEz83KV+IzvffA9j1p29vs9gIbkqf+sSYzvj2WUNiTfkhgyBX0
kfVp+XbCM1tGH6oXV+bKcNmCdWR9xs7rzFxiXQv5T6TZXM7ZBERInms0OqLO
PeGDBcnPusbXaYBRkmet9cqQYadgqKmtYRcp5Qq6SZ7xHTtvrdGMg0Xvb5b9
2hAM3uYRPFf86VCd1UuCNlJBJw2uRoK8QwRP91LNBBiWBOkOyH0A/rEge4w4
7w/yDRTG0hPg2kqbSMekOKD7luD5LWlTpONylDt/8f5gK4wHRWR9ZsMfy14z
pkBRobjw34rpoKSQ4El7v/3kP/Mxv9z5+FczkVBkruBG9a4A8E6P4Fn5Jv2N
3JYAmM68+0RVrTvIJ/VTiULtkF2GcupY2OG7B5wAHcmzzINrpNpnO4wV6Qno
HrMAIiTPO+ltsS/tAOSwGBRO2KMPtGk8mR2cXzxbA6O+pl5kj1f+q59RAwXH
zQpCofcq/RM6ydLgEKmfqnFeh5gdE2HK87EPCh6G4H0+wfOiS+Hg9wep0PM+
xyW1Fkdw9CDBM/bCSb1BhnR4pXvHxtpZdxDCTNTnEc5pY0pyKiwRuC2x0sQX
ND4neMZM9jbUa6bBkTjlW+cs/AC9GMHzSHbnMz7+bHjdbCjHzjMSHL5K8PxK
zsHo6Oi+LJ6D9UN1/wfvYuC6zj7X/SgPCJL1WXtN7lXGhWB4Uhy+Dm00BnYk
z1BVE7mLGu5QNbQrRuyPIcgleX6wYe9wSbCFkvDWV8stuoBC8vTy/V5WtW4T
lHBw//zhuTKQJ3m+3bJpycud6vCdzFWKprk4+EHydNTdKmc1GAyfrQ+9JF21
C9KTPIdrl1WivATTO1wk1Fp84Aipn6xPbK6ivASv37xX36PrC8eTCJ5aTYfO
obwE3+/L0TNk9oCupL+3hL7PRHkJZjNtD6i0cIZ+PQTPpfy2wygvwV3c+evq
3ztDcWGCJ+X3MRWUlyDn7Eq3WClDKETW5xg579r8z7zrbMW1bygvQUalaxvS
brpDSUDw/HytyRPlJRj78mql+B9ryE/ylHhGFb68yx2efr2vR53dADaR+nmS
0/IDykvQ2nNu6GqkPJQned5SKJZGeQmu+Vp/UtOcC6qTPDddv56M8hIcKPvQ
kfn7O5VWn3a/mbpsvX2g5NtnpigvwS/keZddvmunSHoEzLi2PdiiPAo6ZRI8
FX2WzqK8BC0GLXZwc8dBhhyC58pjI64coUlwZ/wW/rigWNg9T5z3SG7Dpb+y
k2B8+w+/xuAouO4FwVNYKjsN5SUorTfEpaG9H7LzEjyl45MmUF6Co/u7pgeu
xMCXZwiejIzEXEv7n7mWqxXfIMpL0G147ugrvnD4VJfgufqEb8mvC77QSePr
+WVjXvAcyfNbkoYvykuQTfCKZJSLIwwi67PBRWoW5SVYIAp+nxIxgfdIP0pS
enkY5SX4i0NmvY+hNjQieR7YenYHykvwSefvq/Ti0nCI5OndpcCQMWwNBx4H
yKG8BKNIf/8WMtnMucYdCt7xsUR5CfKT+jnrHre/fGwvVD3ddAXlJXjsKMFT
7IKLTn1kGNxTXemB8hLMJP1dYX0dj5TbPvhOw0kU5SX4ljzv35OXBnGrRcBV
LnzNQDIFZvEQPPvoBM+wyCTBgJSjCU9rMuB/pB8trybmV6//mV9Zd2d1XUnZ
AycPUFlQXoKHlAieDDx9vdfMnGGFVT0zykvwvDzBc4y+f08o4vbrVZYuykvw
NsnTh1FOwrhvMwws/82H8hKk5aW6edOpyEkdGMr5RgHlJUjTz+RUJmpk8mr4
6l1gGcpLkJaX3n0fu2P4whx8c1ntivISLCTPe+qK/qiAAFvQNG14A+UlqFBG
8Hx6sDQpFOWcw2u5X6G8BKdiCJ5jH5JMltbdpVgynsZ5Ce5fTvAU+zTU8GLQ
BF4PGN6K8hK0/UDwHLvbKlCBctd9/nOtKC/BYEaC584v+iEPCjzhWkONdJSX
oBfJ0/p/zKnCLi5Xvbt7O+BSWG6D8hKkahI8t+crV/6oVwElPqUQz6leriZ4
5p01NcpSYIEjNVl1eE71SoPgGT54MST6hQiczZRxwHMqC5Kn39HYz2CrADwQ
fDAcz6kMSJ5qIW79VD52aDTQOY/ngSMkT4Ou71clvbzAfcXxcjavvfAxed7/
23Ms8OSNUNCeeuMpykvwZAHBc2Xb/abVsvvA3DeNYpSXYFwJwZPOhP1uYWwY
eKCoa4byEswZJc57pmSW61B2ELBgG9MtH0J1+IzgebhEY0yRKRgoVANXlJfg
UfK8H38uuV7oy14w+vM/rpj8gzAjn+D5iJxH6f8zjxJp9WJCeQn5DNt5lJeg
ENlvOpfdrsjw3gMKn0h3orwEU0meqV8p+rx7LMGOPW4KgkOuUILUz847bhuy
ZPSBj6LyA5SX4EvyvHewsefVs64FdNbvklBegltInuKby9dVPeEDxm1BMygv
QZofrRjKVUV5CbgyuppHSbnCCyRPE2dpE5SXwNXuJSGTG4Lh92yC5xFT81cz
eklAI2XN2Y1XI6FqFsHzVulDXpSXwD1j5UF9/1jYvoSoT/0eNeqP9ATQfvmX
p1NSHLTsJHiuYvnDhPISEOrY8W55YTy0kyB47vF45vqKMQX0tPstmVZMhzGn
CJ6098aXfvq/c6ftVX/4UF4CXj/pJWt2BcBaMi/plyw3RnkJeIe8CqqudYdp
KgRPyW7mIJSXwEuxvXGtB5xgNMmzh+tsAspLoP9BkPPzMQvYRvJ88jS48IUd
AEq76nNQXoI0f985XRDz/NkaMBsjF8kRrwwHSZ6RPsxlKC+B24GD/KbJ0jCR
PO8C8q3ZKC8Bll6lE2oehrCJzEun5vm7UF4C0tOyOdotjvBsBsGTPb9MAOUl
MCkg11036w530RM851qdBFFeAt1H7NN5TXyhClmf/YN3klBeAkV9uzdcsPCD
H/gJnva3JBNQXgKMHI0SDp6R0Jbsjy6S8yV6urqyxfOl4KMyzigvgQaW/K4E
lAfYyLxkcZn5LspLIDw97WFEozE0Jf3o6b0EBpSXwEMOiWaJP4bQWZvgGXtD
vRzlJcBnlGFps0UXipLnPYGLyxXlJfAnin/j5+fKUIvk6d38pf3FTnXgcYre
Rstc/O95v0bZdQTz/C9R1mcryp8nSJ7HWZ+Pdx6UANeeqbAGcHRTvl5SXHiv
6eOJQpF+QXFg8iDNQkhgOaCtn74QsRrX+cOJCk9U50CgificL43RX9w5xcCZ
d23CYn5cf/eL71G35hvmA0o/lZhunVgFhsn1U5oT5Vh/Hmpp1CL9AVKkP94+
Mjdn2ssDPl1qO99rJPx3f7n6zzV3VBjAxbCTM1WT4n8/X+bpfXPsC978Oh64
j5Ynv1dn78ZV30SmKWcOngs5sVHi737tsl6XHyLTVOU2ZofF65RbyeuwX9OP
vpXC8w0j8noOtdRsbFVhgD+Tp54v/v+y/dR6Z9bLA0M4FenxddLW9x99M4Rz
VHOnixaeOy0jryf+qYIC/zAfZOnoMP4PcaDtp89a6e/BKQZ/R/LKiC7i9vse
VRHn28fvw6JQvgWDpJ4kO2jYofsCd0nPmwkuui83eZ7+RvcRNj+v2uq86D4O
HOFf6Dt+Xpk9tR6do0jyevaetVzYX8kvMOfC0U2l7Y8Kkt6OPx9qMcWjz4e0
9Zdmt31xP5jvfygE9YPwKHk9y6u5duLrF4rr0kPX/3f/UwMRHvx99/13xQl9
37/rV+LWxeE+vURxyzLsO5Pk5xy5O3Ef8yw5E8CNeP7dH68uuBzzt02LfYX4
/10fXXut1PiFOXzPkmuC80AReb8eSr/59h3d36c5eU7o/v7db6kploLrYeww
e9Di9V9zL8TThq2Bv+9PY5zT3Ek+9kyeu3C9tboKTi3+/17ntRZA1wn4l8yV
4uuk1afTllJedN/Bm8L1X3F+niW/F0tipz+u/yjdQyOYA22/csrwBD4v8gdy
GMQWcdPz9JvAc2DZzjcRsqivuU9+Tr/DgBQ+j3eeBPMLLbov5T5xE/j89h+e
mfJddB/fke8rDu6e1k5u6Wihva94gouY21dVSzJfeihJoc3tRy1rGSZ8wkBp
U0kWfh+m7Ktx2Dt8H6vspeRWaFH23QwY2mgq+ff94RcjrG5pnEmAxWZ2xo05
EMT+l+1yAvcFKYVMb/nSwIl3xUX8O0IAczDraBDW7QfLfjNIpoHtUi11jp4h
QHHDqZ143UjFaIe2fDIYn56ahK/3gpf3gFMRzsncP7dUOB4E65WlD9uj/rST
fdaXEa3H2Smc7pJOAWx98WLLYRD48jVzaSZaf/G12N75VyRoXJ1Cj/op0AE8
rJ/i+myRP8PA5Q8uVkse2m5jD1wVL+fjv8cp28njqNjoAoQlThqa9BuDVxZj
OvjvcTRzzMe0O02BdN4z6ZMmWkDcx0gRc+O9xNSV9VYLnHihlwmXSAH6nad6
8PrKdfWs7W8kQBWLkHnDZXbAkye78HzElsHhzc2pQHCyU8YminMvUPwxPop5
7m65B2TeqFAytnUxyKJ/aTwTWJ6r/ecZDQobIhRf748GJzJv9Z9E+/9wflX7
778EMMS3R3r5owQw4qavForWpfv3fVVvTwDmxp3sqc8TQMo9idP4Ocjj0Rhz
Se5YUP1a41G4XCzgcl7JUYzzjPaOlA7DNNBeUtwraZMGtlLifZjRetDPN1P9
uXGA61NdslllHOjL1xk4gPN5ofqX2tEQsFx9hXThXAiozLNa3oX97pklC9XE
Azy3ej3i7OgBlqyUfIh5SiunNxxsswWhI6xlGS9tQeRrvS2YZ3fCFQV3OyNg
FVKVtc3DCPhXHVZZ+DuFqLMpN5xUQbqMcE2Elypwqqe8WjhHam05pkJCYOOG
u2qKykJAClAWePrYMdQK1ewG8fsTvs+uCQOjOfLr3+P9jz2/6aO6ZG/ozcZ1
SuMZnp+T5x8XABLNG+cuvUwEr0T52irQ/lDOome2y0LAT//xnq6uVHBt772D
OA/Q+dZeCuAOAQXasku6+1JBayIzPV4v/NByPMh0L9D9VCzEMZoEXsUWrCxB
68fusDJzTUagfnTV7Ry6g0D5Nn3nMrSu8TIm41xIEPi87UJn7Zdk8FhQd1k2
9vG73gNv9riD2dPRH4vORYK63cbRmGfZ86qQz4N2oPqGxdanTX5A+ZHK6MLf
iw3OsnmEGAOj2TMm9LtdgKiynyXmWafZoD/5QRMkqjNJdseaAsWyw2qYzy2W
Jro/FySBmGvApECZFrD+ULbAs07r+ntVRXYgGtVjcvCsBJgK27rAM1Ut0zs3
iJca2JJVadEeDi7c+WSFeeraC+30spSiLgW7f280TgZJZum8p9B6bvr1A2pK
ctTrDxo2yRWlg16Z4/ThaN0h3T5fMl6OahonEsF6Ih1YStiEY25+5wLb15hJ
U3nvhluPhaIcOnrDF3PTC0++UieiTH1zz05M3yYXrKpJKmNF6++nOWOq1stQ
xX2bbqYmpILLNvk+mBtrhuXbR+mrqG1v9wLtM/uBV7XhCcyt6c2qkLQqdirL
4X3hu8cDgJ7b22nMTTlTLCjPc76lPsNOE/++zQ/T/TaY28SB0nJn368tQw+8
IvHvrvgaGKljDpfs+BnlFF62CDDp/sK/uzL9s2mBW0yey575x7dawlqvH8C/
u3JI1XKBG8p5/vjvdJjIv9Oh/V2DeWr/V+Ga3ZBhp2Ytrk+6PKI+zb9aPAyM
C4BJYuW3cR3a8xF1qP32ibL9shDoMTBUgOtQ3Juow5cXDnPu5Q6B3TX8Tc9Q
HVYdJupQ+FnMTIjpXug6ubSXHdXh+kyiDk+AgBcrJiOgugunO65Dw6tEHaaU
fbtTE4L681s3D+I6tBYj6jCUcS6kf487tA8ey8V1yOhL1GGUxgXFgUE7eNYt
YfQJqkPzTqIODWU7H3mGGEOBg0rDdKgOfck6zHvY9GXqgybMuHu8/dmiOmSP
+uJFVysJ6538LyyuQ1m+qzwaiuww0O42O67D32QdhrzKM+e1naCWnPTzfHRj
GaAb11vgmajyuPu/qUDY+LNvdyTSz66vhH7am4hx3PKMhkM9V61eIZ38Sepk
ludgE9JJaPbUtpwN6aT+LkInn/GnhWi0J8BV3IfSU5BOyj0kdFKoyU9HijsW
1lXyfAlDOnlqG6GTIkvSdR4ZpsGpFXbyWCf71xE6mXhBd/RtbhxcFVGXZ4p0
8nw6oZMrrhxMuDgaAouPrT5QgHSSsZDQSXZW7itIJ2GX7pLNWCdvcBE6aSt2
e1dOmy1801c5mo50kkLqpHasYCfSScjWafLFAulkEKmTvWc1OFucVGG7ymEp
rJO2pE76zfX5mgkJwdyV+rZrF+nknGJMg14NI1zr7OaC/gUK+ZQFnlFCfcbI
32FWar5pMvL3bZ8Jf2+sdD6GfBwe/a3Xsgf5uOpdwscZXyWZIx+HL6IfqfAh
H9dOJ3ycYje4kVEyDeY8PWvmgHx8DBA+bv9V9BjycWjy9mJpC/LxVY2Ejx/n
3XAW+Ti0Tm6/a4t8vFCb8HHmrKDPyMdhQs3pPlbk48t+ED4u/7S3Bvk4nNz4
2DcF+XiJPuHjjIWb6Bm5/GH2DufnFsjHWZUIHw9ekX0F+TiUvLc00Rj5uOg2
wsfpf5eY6XSawk/+Q3HHkY+zkT4uLFUqnP1WCx7tOy5MRT7OQvr4+h0/NiMf
h15SeTx1yMdXkj5eWuFbhOoS8jHbBfLYTlBo9TloOaC/wPOQtD/iCY1Inr8U
bnggH6IKKzmfMzCV/Pv3Te+PiB7GnL3SH44jznDHTYJzt8hTY8y5wk3HHnGG
7wMIzkqSp3Ux57X2g4GIM7QkOV8xelWCObcGjjxDnKEiyfmOwpZjmPPMi7YJ
xBkWrSY4V7Y292POzU3v5hFnKEhytjZWPoU5Xx3PLUKcYSnJuepj+xTKS7CE
IXHJNht7yEXmpe5+2TrMuTohpx5xhivIvDTtw6CPOduF8lUhzlCd5Hywu4kf
c07QtjVEnOGfHQRnt1Nh+pizwN095ogzpOWlM+MXb+DzPnNnPgqdd/gfed4j
dcavobxEXb7tfib+l8bzUI7ZNMpLUPColC/SAegRS+gARd/gPNYBC+meaqQD
cDCI0AEDAR4PrAM8Ur+KkA5AN1IHxnMaRbAOxCWEziAdgEGehA5sccqSwzpQ
yXdAD+kA3M1L6ADlaO5zrAOhYkbVSAfgHVIHyk+2B2Ed+GLz+TDSATheQOjA
HlXFU1gHevmDbJEOQCduQgd+cJdtwzrwWX0HPcpLcOoVoQNjE/wtWAeynFmn
kA7AGFIHBos86LEO2KdkKSMdgI6kDtxzobPBOvDJoMAP6QCk6YCYEHyE/Uhs
f85l5EewLpfwIzetZJmNuC5V1m7FdUrj6RSgcgj7VOy5zvvIp+CLFYRPsQrf
Xo596mWbYAnyKZicSfjU8FjmSCDyqY2vBf9DPgUvlRA+pf/4GRX71Emzhg/I
p+BoNOFTcloPq7FPtUu1BiKfgodOET4l6RlwBvvUTePtRcin4ANRwqfu9hdb
YJ+alD9WhnwKau0gfEpcPp4e+1TwG9EZ5FNQuoPwKb7ijArsU8WX1caRT8EQ
0qfUz9s3Y5/SXjv+GPkUtCZ9ytZwlRH2qcnE85eQT0E70qc41n18pY58qpCx
YSXyKUjzqX0SPe957FZQlZ9p4rwES+4SeelnhcO24hOi1A8zk1MoL8G924i8
ZGxbcDYwS5LKquSG8xJMlyfyUpZd5MrHpySpTIGn96G8BL/IEnkpfpswozwQ
p/ZxMtuivASf9BN5if30ktMC91dTTY+K4bwE99cSeelbnPTFEkYJakL1Ql6C
9WResrhL+eHJxEvVr7lvgPISLDhJ5CVvvbAw/hZm6itu0UiUl+B/u4m8dOzy
yY0HuadapNqfaODfM1lhRuQlzbrBpMqOzy3lB1jC8O+ZVJN5Kd+tQ9LRq6vl
p3fgOP7dmD9kXpK0luM7IEJtYbE+j/MSpOWlAkWORzi324gYDuE6nD5I1GHM
tdePcD7nmNCfxPUmIEbU27KiC1M4nyu4J3XhervgTtTbqvn6Vzifz27aMIfr
DYQT9VakzP4G5/NtRQo8KJ9DxQyi3pL279XB+ZxjNdM1XG9DnUS9FXpmVOF8
7h7xqQ3Xm68QUW9DaSZ8fSifC01vfo3rrWcXUW9HV06dwvl8xjLPEOVzOPqQ
qDdjCxaA87kXw00DlM9hhhJRb70VR31xPndVHORF+Rw6k/W2d/iWLM7nuS4R
o7jebMh664u7JaKG8nlMpZIhrjdaPr9UZ9C/EvlNnntLA/Yfmu+YVcRM4r4y
n06XgvpKKPON0Mlj+gZmuH/knlbkQ/0jnEkl9JBDq1kf9497HmvwoP4RikcS
epgzyjmD+8cfEoz0qH+EV64RejjC7+6O+8fjTN8bUP8Itf0IPeTpNS/F/eOn
puI2rIeHAaGHH/VauZEeAp9fkz6of4TBZP/4mJljCveP9B4e3Kh/hFdIPTx+
bFQY94/MM5Q+rIeuZC4alw5pxf2jblLLQayHTqQerlfN2YD7R8p3r/2of4Se
pB562rkU4f5R9eTxE1gPt5F6aB3GW437R59b5YKof4SSpB6OvO+RxXnI/1LK
IM5HtFwU/SmMDc893hmZBKQgHzchfZw3/bMPnm/cOJXV4ob8Wo5K+DWf+rXl
eL6xz6gjgB/59Zpowq9fTJ2iR34NrtrapTsiv1Yn5xtjowyeeL7x7ZZzM0R+
7V1H+PV1fm0rPN/w0zzta4/8umol4ddNdvw1eL7RbvBujg35ddo3wq9jO77u
wfMN448qj1ORX2eS843UqeAaPN+Q8pZ03478+pEK4de6Jp178HxjykpD0AT5
dT/p1zG8+dN4vsEMeGdPIL+WIv166fy5HjzfsOpTdYfIr5eQucjv5LYVeL7R
drBhRcMiv3ajOm/Bed0hauMbnN9p9SliPZS7YzYBjI98SHFHeXL52rh71Wh9
c9PE5euZqaBwrbscngtpPDo9tg/7qfmqFzHiaUBi/j89PBeKc07ci7ll9ubM
2uUng+2Zn0fxXIirnt03D63blKqKnx3PAnea36XhuRAluseDH62HkO8fXvrn
/cOXdfWnfrPvBX7DjqmWKDcyca99NIJ1tUHmCdTdDTLDHG7i+U9pxF7rGZwP
47OqV9JtA3sfGoTj+c+HmYbv8ws5pObnUV5d0Las7SGe/zSIJjxcmE/Gi1n0
1coA/+7xO3j+Y36nfRKvC03k01mFcICcZS9z3aInKb/vTyz8PfulcZ7Jp2nx
4PDWEzdyrRPA8WcPNsSj9Tf9f5jD7yUApfE+HbXuBJDnYdmKz2PFcPGFPZlx
YJOWbvia3lh0XRFzB9G6QiYdXdbNZPAisqPSWTQVuFC3jSuhddf/8X5g4plX
X+YOuICvthW9fYKOoNVpg/M0zpOhoZblH8zAJm/uw+YsW0DD29UX8PdVXW0q
lTWqAx5dfl4hzIH0zCiwBV//7K6ECeNAaeDouMov4os4kLFhnFh4H147u7NZ
hw1c3pwcKle/DLy7fnLh+y53b4toWh4C6qy6ocHrVDCoPauBdfvZgP/IDYVg
IOvoHbL5QzKYOWrXgHVj00n9oKMwBOiuZlAyaM4EUoov4ozQegn5Pl4G+T6e
MPl8+Zyp6WhT20bwUHdvtZC8FeDOntmBr19oyk3hmKYqeGKuIH1hgz7Qdyqq
wdezLuwTa/sbYZBvomloUqYA7Pgv/ljQZ0cBYfZxOrBvUvpivMdKoPsVLFz/
vBbxfp0u+X7dfvL5e6fVhPTWNXKgW0qle35ZGjgtcC4DP/eJPmSvMfbaECae
CykQ+ZgJWnP8mBzQuij5npvEP++59aRtOe07wQ6aBsoOPPMxAtm7x4rx/9dj
ifz9IMUZSoXecVkwrQJesT/6hteryPfQXvzzHtrnX+flL/eGwbH7wW9dNdLA
9LVlGT74vpPvfTH/895X6+8ExU4efug/pv1ovYQaaNLePYjXf5DvX6n88/6V
MPlek/0/7zXR083fRecdpqzoOuqKdLJNgTjvxy01JtF5hw4TwWO8SCfn7hPn
3efUZcFY8TSY7VE4Y4908swu4rxH/5DWts9H/WPuH4j7GpOTxHl/fy4tHJ13
2Lz6xRTuaxLyiPN+lHx/huuf92dmXltNovMO7e3V7+P+pXMFcd4Lf9bOovMO
hSJzJ3H/0rmPOO/LXfQn0XmHBcm+Lbh/mSLP+4jzbp1yXl0Y8DTNFPcvF8nz
Xjv0Phmdd8jgttsW9y+08/7xm4UNOu9w9j/D7j3Rk1Taeb+w48H7rrR4GKkv
Y4LOO/R5T5z3nP6kBHTeofCTKzdVuxPgS/K8J5p4JrlmxsHKvqRihd5YGNBP
nPf8gANl6LxDlu4Dgui8w1f5xHnn/B/vt2ScelE2f8AFhmdSV6DzDgPI8/5f
jdsfdN4h71qfJ1tZtsAS8ryvk3l0DZ13OOFc80OIQxO6kef90CxD0JZAaTia
/+35vi/ikHbePzOzZtzQYYPzra3nZeuXQdp55xXdd6l5eQiszj0cjc47dHAk
zjvHmOJyqkIwZNC7q4nOO7xVQJx3v4pD/eUwBO6QPz6s35wJXWWJ8/6OfJ/k
xz/vk8Q8vjbW3LYR0slPe6DzDsXI816WfXnlcU2UA6rufjy/QR+ak+ddMW88
9cEbYRhcXPh6S5kCtCfP+6lDJxQ5xungi+trQ9F5h7TzPlzsUBq6Rg76+Z94
gs41tJIizjWD4vnjn18bgg0ZJ46gcw3flRDnmjpAvI8x9M/7GHRdJddCJ9gh
s2BBNDrXsJw816474I5IxRnq4biXguhcw9fkuS4g35cw/ed9iY6VSV8besPA
qZdSa9000mBtDXGuu8j3E4at/u/7CdmyAvIdPPyAZXPlL3SuYTN5rqXI9wQE
/nlPYDv5/P01+fyd9v7S2Mq4gc6IzcBJ8Ts9fl5sO6Kz8PcLL8jnwnz/PBcO
NXcAOA9cH7RexrdoTuKSM/OocIkVENxZ+6rrxlbQUfVx4e8juFbc+1kZzAvu
yWseEK/hA2u2qs0u+Gl9q7DjH3Mg5LGnbK3MLhC3gdEWn9NRnZycJsgIYr+v
DDNLFQQHVFYu/F5THPn7YE7//D4YHd1jerzu+c86Pd3NJPy7Ya7k74bRfveJ
nk584ffEnP9ZZ5HnZXL+Yw7vP/CTw9cjSF7PzVdzdz9MWUMtt4T2GxG+wMrl
e9xPtB5MiRS9ARnh4EpF2cXXaThgZ4brrTXnvP9if6nM9DcoWmIFn5xe0/wU
8ekm+TzJ5Ybwhyf8YHzdpKrKGzz3n9mEdWzmp/y5s8G80GlTeo8Y4raW5PbW
ZvdRfB6fdRmXyC7y3+tuQtyPIzbDFae4pE3QfXQg72M4+Rx5zT/PkS9X5O7A
Ojawr/jMnkW55ci4Pgf+HLVvJV7ocyDtc/zJ58VZ/zwvZjCs1MLfa3X2nxfo
e8Fm8nulXCgrwdcfwjQ5hK4f0q7/CMPBp06Ic8wKG3XEGSqQnMszw341I55z
862KiCek8fxYw2yG6yTY1qsA75/SJfZD5QqL91PW4PAPAe6WCF9Y40zclwGD
5Zdx/Rwz7PJf/DkPGSN1sO9zfaOvXqwDB53yXuO6PX8k/waqW3idvH490+8c
6L4ADeG+b+i+wNPkfakvn2JB3wucqP4ZhuoZ0urZ9s6djzgXHfR75yi3SCdF
fOE3fL4Ke4zPmiGeNiRPgWMua/BzLD3G37c3LpofPiGf/+b98/y31a2VFedM
luf5Dm6LfMetuZsX9zvPb3VOL54DL/8W0oj7yq4to02L5+10dLv/v79LdvRd
tgm+jue6V4wWP19b3pTViudx7++pxMgseo4pICscgOdKFddhmsGi58UjmdNZ
uI/d7tJfzLOoXxCovFiB+zHWOFX/xX2ZcE2fDO4r7N7VBC7uf1VNjTjw556z
YE9bPL+6ujLCHF9H416VicVzwk9KEkpuXqlAS/1gLzsMAnfuDYzivyOjn8md
pqL7GLtd98//q+vOw6n61geA5xuRkDRQKYmSjEWK8JKSSlKkyCyzcJA5TuWY
khRSSWlQSZMKKXlTkhD1bSDK19CkqCQqqe5a9r6/5/7Oc++/73OeZe219/7s
td/1ro3eX61bmPO48aOitMru7RAiFDBhrC8XBq8XZAVQlwTLVXVLQmHNCc2p
8Q0hIFXicaGSxIXU1s2m19uI0FwZcr2R93vmektyfj71arA7FJ7VOXL8VAxE
RlpJl5P4UteVndbKW+FtgOyQ4Yt4mAERm1xIfPaxxN5EPT/Q/pZ3aihzG5iY
T2kso+cx6HnSGXEXGGrITS504kC3y7QsWg8QV/btgFeOIUoIPAV/1RgQa5Zr
rSLx4twrnlVeGjjbUuhF0RYecXycIp0/aET2OuztNYY3zSlZnj7J0GhktXgt
if/Srlh/sdUAEvYZb9nnvR3KXU78vELiysu72uUsFoCjdnzlVXq82fcfvSJx
Tzc9PZniufBZd2bFqxMekDc68Qt1VXvfsrqWIi+s135xulonAlIfby+tp/fL
0tT1xg2B2NIYV3lXYSdIRmhU7KPzFplk/TFjg9D/ffdJj0YeqF/psKXzhO6r
VWr+RsEIthNMR4klg3yw/kKgz6MlvfMKxbzxXfGH678428E94y/Zs3Q+oLew
x2afA35tmidgMWcrzBxYkk2/F6p0ZfDM2to1KF1f8zXb2hM8n4zaMUDfIziX
3lssBLTtaJr/cOsGmLyw5DC9rzO3z2ofbR+MNy+Vta1y58DFxPD8pyQ+oNV5
INhtG5bk9tU8DogGx8X9ETS/FPzFT2B7JRc3tT/75tDAhTty0yVpXkV0MCc8
U4KLU/Sf3FWO5sLo5ksH6fV2oG9A/sDvnViY45xroE/e10R016jQ82J7xcmu
OhJ3uIm4b3oSDUa3Fi06SuKX7nlcyzAIROF2eT/9Qg4sSU3qayHxoScc2YR3
Loi7igovXXODkZm+XV9pPHJfT6/AOpza/HPuaGFriNDJnUuPK2lkW9SvXUY4
I7Rj79DeJbDA0Mad3kdh+dIjVqaFYl3KLTNa7yGbMPICbb9zkvze84d34Iia
z/10Peh4tYtF9h9aR5ea5CETj3tME5HM50HjtHYrnbf3uPmJvCrlofLK2Bcb
6HpQi9sTeh6D05q7dFLjsD/P3bmiJQAqJzhup/Oo/ey+g3y+fQeKW2cY28vs
RI8jBTPGkPv0y6rllukkLlX/fbpLWBi6nW1Mo+tBAnk5zc9IfLG+7PJmDR8U
jrTooutBm2yL59D7rjgi5ycescNGnfQkuh4k8uv1OZr3sAyedufiVTM8q3F9
B10PCp1ob0bHYUyRwZDAd2388712Ol0Pip3V2krjO1+I+hA38KLrmHwxDMQV
NYwb18bsL6DP5eoTqvbU/yzW/87JxruJG3j2t0GWhC8XNS4zbpxb+v02cQNV
FQXDeA0hmM668TRyYg6dP8TJKP9N5g/oyLrxQ+bR06JgdxxvoGVF3MADHMaN
+atWq9kob8Ul+x9dJG7gIkPGjZVb1I8m6/lhzoozS4gbOMaEceO34b2d+eIu
uKh9x2riBoaybmiNq5bdlGMI2pulVhE30KSTceOGn4hxrpcG+LxPbiNu4BcR
xo3xX6Jm5fQaYwhHbi9xA8VUGTeejN19vbzVAC+8+eRB3EAzJ8aNOfv9TJQt
FuDht8FlxA2clMW4kV3Tsnpm8VzcJPC6mLiBkSKMG13vQz2ai7zAv75gxH2d
COxtYNwQ2p9tbNQQCMrCfb+JG1iym3Hj92sjEdGxQXBG/9Ub4gYWHmLcWFGR
XOpnFAwmHUOJxA3k7WLc+GQ0w+iimDeEe0e/I27giRTGjXMlXw5Z73OAq5+N
FhE38GEP48bIl+7j19Sugave8zQPW3ui+t+MG7ft4teZLwRI9djrR9zAPB3G
DUHeUnfiBkwyv+Rj7s7BGNaNP0++1we5bYNOs8ScJwHRmKnNuHHw6tQEbiUX
tprz/B0buHh9MePG9k93RxI3wGf1GL250VxcUMW4UTFvMDHr905QEJDTMNTn
oc4kxg1pWb002+pI2G6dqWD/JBqVqhk3ss0rFxE3YFCjpo24gU57GDdOHG5N
i3/nAtMTxs8vvOaGIzMYN5JHZTsTN8CwXv8CcQMrFzButOZ/GBjaZQSBMiai
v/YuQQXWjaCAC3dWpIXCtWdKyXR/vRjrRuBAgT1xAxTEZ4zaTPOlFYwb9R/u
mBE3QL8leYiub5pnM26YiCjd6yzlwcd5NlI0X+rYxLixJ6W8kLgBZQUKBXda
AtBcnHHDiq2/7RP///W31qIBQsQNSBrVpUnv09+sG4vvizx1DguDmD01bTRf
KnSScaP8mFnvcw0f4Jz2t6f50r5NjBtNhW2niRuQ6z9CkOZLHwwxbmimTQoi
bsCxM4XtNF+6m3XDNs2ylLgB/6iKraL50mjWjZOW6c9DBLkQ9X5+UJOyH9gM
QBi9L9Rr9/u67ooDp++KenJeHOhosE7eSfvp/0bXUTYeNlevjXJxDYLYn5qn
6PjUnz0xMlOEB1eLRs9cuYEDU1I5B2PoPL+6Qzj2HA9CEgXXB9kGQXuU3U66
rqRTLjV99MIUOKVvNiXYIgz2e2sI0jxJFJsXvcGXFz2t2XVdtC0QUsr3zPvT
bQtDB7el07zBleCUB98Ou0EVd2pGv4sFuDrHTaLv3SP17HO+Kq+H8dNG5K0+
aARDKQt+0uuktidXMkduGbietq/Ob9AEed37MXQcHHRvxugFaoHyvaaQm95y
sPRQwvB7ZXW5iu/DZzGgLAAvvWtiITP5nRuPxPfGCUWn3uXCRLv2aQ//5sJU
ruV7mg8RyPvrSJAwFxbbdrUcqowFO0GZS1wSPz/PpmCxKRccVrYZf6nggtDj
tvQwEm8Wt+26EsmDPQULxAY28MB2dNrtKX9onoHJi2bw5UWnr//RcLPdEWLe
Tu49L2IPpm7e2vR4Q8YGjCtNtYTV154ue5VpAUs/DA6/10eNGdc5wdMIpCs2
vHXoNoTYvu/c4boXr3u24/vU4F7tqquyjaogNfbX8PFqO5X/LSYWBFmnq23v
PudBRP0tU3qd1yR8t/JJ4MB3fU1r8wtx0D9zVit9378xsi7lZ0cgvFWwNVU8
zYO3PVID4SSeEKhxn+cZBnOspuZPrtoFg54f38qS+CE2L5rGlxf1j/mREVpi
Am9fHdsySdsavkgeH0X7f9lkysj+CVoQb3pE6abNUljo8ng77Wd2ktRDpZ8z
IOS2yui4jvkQ76r9msa//4/85/6hNr1QZ3mYva26iu4v1rtwQGEHPY+c3g3f
WrTw3DlxGK2aAGMKPufTPMOQb9qlxF55MJbcNa52cirMbV4RMo3Evyr89/2/
yys3aUqEj4IJaYqJdP9vxI6Nw/2UeWB600ftg+HXMuGxdP/vyQy14X7ms3nR
Jr686Gh1t6+75IJRxmnBnOXTeDA4PvLicN7DKCS+ZXMoyko8L3ERTIGEtcc9
6XieZPOlUnz50rU2zyQWNE7FdL95/hpHtSAk793w+f3E5kvV+PKlOSPi7LTk
eVjyLXm2ZjUP9u/8XjGZxPXYPKoHXx718P+YFxVpOoltFeTiQGXNqWfKftjc
x3jyw3vTWeIJFiWYj5/uxcHTdYwnH4Nso4knWKqntdjZNQh5Q4wn+8PqlxBP
MHvNnC9mGzi4LZHx5IfqtJXEEzKv+yDHsQ1CxWDGExHdqgDiCTaZvo3nWITh
HC7jSR6bd5Xhy7vWq+7uIp5g+b795r+6bfEJ64mEcbLg98NuWOP2xqvPxQKP
OjGeKA62NRFP8ELFyCjzg0ZYz3py37liFfEEmw6POnymQROVWE9UZGJLiCco
PlV95Q1vOVzCevLattHy0bMYfKCnO+RVE4v+6YwnL9LrvxJPMLS352TD31zM
jWM82TmZNzZYmIvCo672HayMxVJJxhOriixFfVMuRmYk1fVWcDG2gfEkTU+Q
dzWSh1D0IKh/Aw+Pv9kz7MlUNu/qw5d35a7IPFje7oimvzomEE/wpSvjSc+d
u7HEE1ztZWrXmWmB41hPApadWDvR0whzfin8tO82RB7rSZXv5zkT+tRw0+XZ
rVMbVXEc68k+5VJxCbEgHBH3eCLxBJ0/Mp7sq3TY5pvAQe+jQxOIJ/hCkfFE
d96Z20MdgXiq31iUeIJe7xlPDhnNs0vwDMOUZ642xBPctYbx5BWbd/3Bl3ft
gCdFYSUmaJyRPpt4gqLjGE84dSmzByZo4dI2pfYym6W4mvVk/+t3L+f8nIEf
X9XU7uyYjwmsJ7kqc+yOOMujasDvO3Sf3Y0Sxg3z0xdzO1q0QMyox4S4gX+d
Ytx48UrLvbxXHt+tqxpL3MCzzxg3ot/9931wFs7SWjLho/CP290oug8ug3VD
WNNAZ5vah3KnseXC9HtNp1k3Mti86yq+vOscs6SqZLlgaD/quoW4gTpjGDcu
iJX0P98cCmGVcqNcBVPwtg/jhoAYk48d5MvHlk8Mb5vfOBVy1igfJW7gVtaN
aWw+djxfPvbT6K6b8+V5oBubfJO4gem7GTf82Tzte748re3/mBfFsXXyonx1
8lFsvbc0X713oXitesjjENCo9rub8iYY4tNuKdTR+Wr4Iakv8l7g+y4iIGgu
F9T6atOKSFyfrXPu5qtzbn9lFeD3xwOqpj7a4WoRCTq+I6JpO2dGZT9Rc3aE
tWFRWku1A+F9qfQQvV+eLXrUyMlRx0cbS4/dVN8OSzKy5ItJfMqoe+8Ppyph
x4ku83XfyHgcfbI+gcSfDjZE0TrhWXx1wtJXv17IbJ0GhuqTFly5FA2d95Yn
079rlOd9SNZiFtjFH75Dv0eROHNfP/27T12Ttu0VUYSLKseHv0eh1Lh4Ab3O
fQ8tfJ6d4Yu+25xe2HNj4aM/V5r2x6ZKdNQrcw7CXs/83zpxINvrKE/7s7pl
Qce1sUEobrVMtLOJB2Un5czo/RjP1t9e5qu/Fe8O/vHM0h33Bg7pShZHwpVj
+y1oPy/7lhVcSLdFkaG1dirVgaDmcb5x2BMtz927Q8yxWOKvLw7n3KDT2EeZ
9lOj7LJ9o60Bym3ujXrqsx5+Xwj5Q/3sKcsIjb8WjlZmbfobpoeDmm98ED1f
ZrDUKDo4FldtTevsF4qFW0G6QsPz6t2ZKZ5VXJy1bd74W4+4sFtRsZs6aaG0
KNM6OxYNFCb8dZuc949/2S+kTiaydbCKfHWwq3Qig8IMQ3DurseOTsdCwPJd
dzV9LrQmF47rFPRG/fn2mZLCPnA0xvs4Pa4c+/zL9XX2qPUtYEr/SUeoDYqU
psfVPFlwQKLGAmX9/vwxuGUJpuO9B+lxPeg2KQgMN8QqqVTs7TaChX52w88F
EWltmyI5Li5cccxphbkP+B7Nn0/3A5ZE6Pk4HIzDzjLf3mM9gZC0YLNAHIkb
BBxR4pHno5rFqu3iLkGwrm7Pafp81LOYbb/sdxz+4yysfqKQA59/fAb6fFST
WOTR3MDDpqjad/kKHHj+dcpluo4pztavxvPVr0LT5InyzZFo2n/29NZ9HpBb
uvJHDT2/F+u2T7seiHWj79/N59lDe0jVejoOpw7EDPlsccO0yperTj6yhPNb
/P7Q70rlftlo9fSrNfZ0Z6nW+iyBSSoiX+k46E97zzF7vxTt1lU+HTw+H5qc
PkYPzzO31a16DlpYX3H77wf28qCSJD/swzm2/vM6X/2nOVvHGMFXx9hadKWc
OICxMsbqxAHs3cs4IHpw6+s+eS/EFJVlxAGU6GIcUGXr9+7y1e9ZZVr3bPnj
gcWv3mkSB1DAg3EgWafmlIazI0q+1P5loh2IuqwDKovviVrlqMPcNOuTxAG0
yWYcyFR3/GdrqhLof9a1JA7gvizGAaHYk8P1bwl89W8jP+TfrG6dhtcvXdIi
DuDPW4wDST25Z1QtZqGbocEtus/aVY5x4IL3mFuHRBTRIb8zn+6zdn/GOOAR
7ydzKMMXZFNeGjhwY/E5h3GgVl/wVYc5B86fN39DHMCHQ4wDFQN150vGBsHM
t+HmxAF8mcQ4kMnWm/nw1ZttKeyJeWrpDlVfIxKJA3g3i3FgzpsHj86l20KU
QFoScQCrXBgHlBR3Oe8KMYfHlgOzHc+5oZkR48DqXMVfT2wN4E9vXiFxAItZ
B1ptnGt518JhxxGVHuIAlnoxDjxomeESFRwL0bWldwaEYrEkknHgucCi8cQB
aAqpSSYO4A1NxgF/RcWLVtmxkJfXFUwcwFvfNg070MPWfYXw1X2ZGM9uDTUM
gfQr0z4TB/An60CDkfqGDkFvmGx8xGycsA/msQ50n9jS/KDOHsYvf95FHMAa
DuPAus06o4kD0D5BKNDwliW2SDEOHF2hVRoQbgiz6leof+k2QiXWgcPxU+YQ
B2D/7M3Kq8x9sO0Q48CeMaXqxAGI2FgufaInEI+oMA4cmX/0TRx5765TLLsp
4RKE3XcYB4TFY6cRByB3TaDtSZo/6WccaCsbVCYOgM5l5xkFChxc/p5x4BZb
r/WQr15r3uWCyhnNkSC0pEopbJ8HnrrGODDnnJAFcQDeTuw4VsCzR/EwxoGf
m+8jcQCy25Kd8h5Z4hp/xoGm4JlSxAGYIR1nU+ezBMVYB0JUI9WJA3D2gdGf
n8fn4yvWAWHDQxLEAUhYvfpNvb08KrMOvGHXbRX51m1PdN8zM+r3AcPKsqhx
L3xhTKtb3PD3bD3XVoSbyoDDNV7r7B4Z+Om6bPj3yx1ynara7aHl9aBBXwsH
FqYdqKe//+yAVVdFRKFjbG7le6EZ8PCA1fDvsy8NSK7tlCqXXtrUQvfnGtVZ
vx3+/x1XPH54iFbcjFQOdKf7cP3Xbxz+vX3n+vTqdnusD78jSNu/xbZf9rXo
drGIKJ6JydxD23/Etv+P5TIl434fXLZm42lJ0n9eC9N/ScPU5AhTGayb5yf9
n/3nseueunzrnlHsOuZBvnXMnM8DkrR9+TfyN0n7uJFtf0dN41ba/l/Kq1VI
+/h/4/NPggPtf3/+MlHSfzzA9t8z8nEq7f8nk/oM0n/8d//NFTlFc49IlE95
mkXHB1vY8ZnsLBj9afWNm1+kPOj44L/Hp+FxTRYd/yaPG4to+0v2MO0XLz40
SMd/8Mb38v9s/8RmUWd6fj1uy3iR84spbP+d6yWfD5/fxWvv/Wf/29l1xiN8
64z/Aq4ZdpE=
    "]],
  AutomaticImageSize->True,
  Axes->True,
  BoxRatios->NCache[{2, 2, GoldenRatio^(-1)}, {2, 2, 0.6180339887498948}],
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{348.4496928230519, 191.93781931263152`},
  Method->{},
  PlotLabel->FormBox[
    RowBox[{"{", "\"50% probability removed for r<2\"", "}"}], 
    TraditionalForm],
  PlotRange->{{-5, 5}, {-5, 5}, All},
  PlotRangePadding->{Automatic, Automatic, Automatic},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{0.7105562779528327, -3.219639591060007, 0.7609406544145038},
  ViewVertical->{0.18740577032085698`, -0.36422099381284834`, 
   2.9521421792193867`}]], "Output",
 CellChangeTimes->{{3.686399137562212*^9, 3.6863991408007298`*^9}, 
   3.686405255378016*^9, 3.6864052886063232`*^9, 
   3.6939124096362877`*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzFvQe8FdW5/r/v7H165xzg0MGUm/u7N7m5IdX0mGiaUWPsoqKCNVbsKEgR
LGCJigbF3iuI2LChotg79sQbe4maGI3GOP/3ectaa2av2eccNP/L57M2Z0/b
M7Pe73re911r1qw/ccrOk347ccouO0wcu94+E/faeZcd9h277p770KLyv5VK
/7Z1qVS6ZWwJf6f0p37wvwn40C99/D0e/5XTyZMn89J/l6Vf4f/q3GL7R99l
78/Ldv/J/5VffPPNN+9fvXo1Sinhz/I77733nu1WKutncDw5zmf7fxz8dl/H
4fOu5K9mfNFe4Xq/1+er79Iyd5fOkQVX17hBZ/d7k6HusLEL8yv4r2P6Pt6Q
GptUeF1DbJ3bJnYWR/7f/CwvS7Bo1v/NCSTuBGQ1r8S3DnxOwZLQIP5lp8CH
7MBfnW5ly7/4N4Nl48ePp2/02ZhevW1TmT6amyO71eOzC4s+kHPzpl3v/vK2
XMcbVTJnt3SbpkR+g36tjK/0G0u3bcIyFLpQ+vEkXYYP2oT+2q6ZNrlmu2Y7
TqnX3afH3G91yQl9KfKTfHvph/gnaR39Gf5iWX6QT4d+tYIfrMfvVdJrJzZ3
Rm5Dq7sNt9Wom87gjHh/vukNmTPhM2jGN/l9+sInUYeTqOAkcOkTm3EmKCU+
p3J63UQ64+u2l9MeV1TBfIuuiaxtl1P7YmQVW1QlvWqbpoo70wacVx3Oq4zz
SorOqyIVRudVn16Pk7thh+bhkd8Y5E7unL7vX+wk66ROrxLjoerEDYQpJYFB
6U0tNetdrT5xZ/X0ie/XSaGLoUuo4BLKuAQy++U7NKfLd2xJb9RyE8qkliS9
eVLLlyIn6EE5Qe6nt9DY9Sg8V4ENOZ2rYKNSMhe1dFu+nJKyQV/5DjTzCvnm
r1YOBXL0iuU6E1xknZiPVVOCS6QLz11kgqss4yrpHG+e3JLeEpRbUXZq+Xzk
gjyhMyNrwzvBaxp0o6smSLVJxdIn01Limrb6pL+bccUlvvpELtcaiphpJnrl
XLvbcyklkatPcPFlXHnZ1S39dOSqaXe67ore39t2bklv31ka629HrrbF2cI+
zhZq2HZjcC9w2bgXFTGNpbgh9Fdd2FgM5KLpeumKridjviEoy3dooS0zF1/i
Oudrl5aKbzBddJKu2Am2YBd9+y6t6R1UVu7aKtvctVsr7bxq91Z3QTG/LNYq
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
igFOPyT9JYQZ4H8KuOJLzxeg0/ndaI6VXOa1ouT+rpsU+sRu1PhJ3fiLvyX4
5LVlbJdgD2xy/CBnlJUs65IiJ+C7TM2d1x5i/n4W85K46Q0O83c85unb1M69
NQNoE+i0jcn3G6GPrjm1suL3IuFd0z/32i0+Ou35JBCXUuIYne6Vc8+rEG8d
COL5zNnKrGiXvGonzkNPAg8d1IFrT7RPUvvxXrGsdF6R8Y3HijUympIsu2jz
JhT6sQs3xzLClWHFFokCHehwCWE0vObLiM/LtpJy6VaKbbOwjOiadHixafF2
mjczZLenC3QpaqMWfT/cjSqOdysK0hFMq+oxF6OVvWwidZVq8L2qweJhtzOt
psG4UvauDwCtntTn8pGzkWoanCG1C5wiscwSi+D47dldIrVCKWxZ8shZShNg
Sv5OLUgJUFZWqGi3Vg4hx9glWVzLhuuJZAonccEmJ/WQFZzcQ0axoKeCv7DJ
yd1C9Ul8lJNk37LDmonuNqpLFv6RzOtJwTUA243VXMM7n6tcz6EGi6Am/Ey9
3y1W7xzW9embcaTFqKg2prYPhOrQI3dJtwKg7YIDmDXV1uBh3i0DM7Os1EKo
61io79jZiTVYLokLXudccECoONvQq/8X4ZNT6PVKJI5FVFqppBdsjoAXX4Gp
Q9XrqsDKLrU6WBf7iNnDOUHgXLJtACjBGWhqyRGqmuoJ/TJpaqsRKh6zJbGt
W3a3thresWjoo+oZQ0NxbqDy6SDmzXjGRKVpqFEJDQ2oTP8MGmdlaEz/Okd1
k2kclKWxkqcxAY5JlsNE/doTIJ5M5O+6fTEIK2CPiSsre6f0tKTpqeDxFHxd
0JNgLT66PYUJjmKkn9DNv2KSeuwgDHCdr80D58SUvkBRPX2dgC8BeyXvNxfT
15G+RULKvnOOvNcOc91STN3UWtS1VXdLNYXdUtXE7cVdUaWkkLp6ps4MFsSt
EuISiGfoGQM4Knqseh7wddtOUkCUQheyxqgNk5hU1A4/csFmTSh0IPosp+dv
Bk+WF3r0jLUKeKJKuljx0xNN2MvtcCRiMQSyUA1D2DLAfdMDN8mcWA/areqw
srOq8ncXEsh75J3VduesuhB0/yxoz+RAe34qYOuMSuCrgQT+WWUv45gSXAFg
6d+PUsc0JGzeoNqAVRSqHi6CgWLFCJUVplN7sOnvabPfD7ZCoC3Ex2mDK/iL
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
HE7KZL6NC5E1l5pv3MNw4GkNj18OOvaqcqhhKJDLFvXp0ywPGvYavXxqyGzH
ZTf0t869Wmd07Sgg/3i6DCtMzK7Dx/8W52zZ0jje5yhrQJLLnA7TzGk5bNCx
bMlQDPc1I740MgdLbHxVVRY1kx+iRl2GfmBsIv6H63/PztJpGnOyzc8ws1Y0
YbO9surFN9988/7Vq1ejlBL+LL/z3nvvuUPEhm7EGvKf1djOfl4mopC2PjTq
JrVnLINN24jfgzXMLXJYwkzo5dto45xL+eAN209qPxo7KzO7NAPal7MyJGvP
lwT2HAtrXcM8sqBhHl1gzxW2566qF5FG2+W8fx4+kbes1zs0RcZ8RpCPPFmn
yjqu0zk0VQ3y6OwMXVd6ew6nvsuMFzwtYs/xfKez5+e1b/qh3Zo50Ul/D4/Y
U3tkWX3/zbloJFKja6JjRtwkayVgDju5goTNBG2pkcGUFwZ8w/nxNqjjEOnv
yoy6wIA+PE2L9a5x3toP5FuuKf1V2sllXsYLh2XzltHO4LyXcZ4NR+uVHE1o
yMuGFwxaGpltnO8cpWlIM2PvXogZ98TdiyoTjoz0Dmff8akT11z3bcUuW/Lx
nA4JVsdkrTecGavIgmOD8qJjlLIWbIkYhJYrtpesY8yEO4pNmL2ISlF4+JPI
stagfVWLpG8wSWeONl6hGU1sgvdNi7P9X0Hj2ey6kfDADzxbPCV3/97t6WP7
+U5VcQa6ipMcfdmbebXccBbYmzWegTPAx7hLktbe5Ljl5Nx4aWjcE8ibXP45
5nDCp3y27jI3+aCO4WjP2VxX1uZ0xM14HRCAIc9Pk4P50O7N0rL2Zl/AYHYX
6U/te2xc1u7Qj/og5tWgLyMHZm9ji1rYJBKO/SiycZtrGaUdrAvbQTM8cgK2
hMe6BZvfFyv6LpRdvl7Hb//C34dpJhuPS8/TLDa1iq0SMypJJ/VUu5vnqoXh
WTSLm8IW7Vp73mxE7gmaoFUzCxOX01nZKN+wIb9ZFDLdsYYGdmkwu+W53gJ4
mRmYpYCPkXwWRkRiPToHMdpEW5uSvSryjA3r07N/7d+uXWVl1d2R2UdiclYW
JhFgZffvqr81ag3MjJu1Dmdc6xQdwqaYMSPa2oc/pTpnSHWBIdnwYJZX9RUh
r4h90D142sZNlt3DY/IZN7TRtCU0lHxzdNtI1xypoeDZPxjJqlH8eEYFpiEP
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\
\>"]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Let's assume the drone covers an area of size ",
 StyleBox["a",
  FontWeight->"Bold"],
 " every second, and that this area is cleared in concentric circles (a gross \
simplification)."
}], "Subsection",
 CellChangeTimes->{{3.686399296600697*^9, 3.686399337111062*^9}, {
   3.686399519106379*^9, 3.686399529369123*^9}, {3.6863996040128736`*^9, 
   3.686399670242578*^9}, 3.686402257180997*^9, {3.686405298289199*^9, 
   3.686405301664782*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       SqrtBox[
        RowBox[{"a", "*", 
         FractionBox["t", "\[Pi]"]}]], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"t", "<", "10"}], ",", 
         SqrtBox[
          RowBox[{"a", "*", 
           FractionBox["t", "\[Pi]"]}]], ",", 
         FractionBox[
          SqrtBox[
           RowBox[{"a", " ", 
            RowBox[{"(", 
             RowBox[{"20", "-", "t"}], ")"}]}]], 
          SqrtBox["\[Pi]"]]}], "]"}]}], "}"}], "/.", 
     RowBox[{"{", 
      RowBox[{"a", "\[Rule]", "1"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "20"}], "}"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", " ", "\"\<radius of path vs time\>\""}], 
   ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<time\>\"", ",", "\"\<radius\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<ever expand\>\"", ",", "\"\<double-back\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.686402294930725*^9, 3.686402339187564*^9}, {
   3.686402420575333*^9, 3.686402467087184*^9}, 3.686402541258041*^9, {
   3.6875379714559917`*^9, 3.687538015750847*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
YiSDwMoZg0WplETW2/XrPbcS+B9epT1v
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
9P77v/8Pq8yt5w==
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"time\"", TraditionalForm], 
       FormBox["\"radius\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotLabel -> FormBox["\"radius of path vs time\"", TraditionalForm], 
     PlotRange -> {{0, 20}, {0., 2.52313249627391}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"ever expand\"", "\"double-back\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.6864023137873163`*^9, 3.6864023397983227`*^9}, {
   3.6864024329601383`*^9, 3.686402467483728*^9}, 3.686402541803865*^9, {
   3.687537988422228*^9, 3.687538016393738*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"What", " ", "is", " ", 
    RowBox[{"r", "[", "t", "]"}]}], ",", " ", 
   RowBox[{
    RowBox[{
    "the", " ", "radius", " ", "of", " ", "the", " ", "area", " ", "cleared", 
     " ", "by", " ", "a", " ", "drone", " ", "as", " ", "a", " ", "function", 
     " ", "of", " ", 
     RowBox[{"time", "?", "\n", "AreaCleared"}]}], " ", "=", " ", 
    RowBox[{
     RowBox[{"a", "*", 
      RowBox[{"t", ".", "\n", "AreaCleared"}]}], " ", "=", " ", 
     RowBox[{"\[Pi]", " ", 
      SuperscriptBox["r", "2"]}]}]}]}], "Subsubsection"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"Current", " ", "Radius", " ", 
    RowBox[{"r", "[", "t", "]"}]}], " ", "=", " ", 
   SqrtBox[
    FractionBox[
     RowBox[{"a", "*", "t"}], "\[Pi]"]]}], "Subsubsection"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"Current", " ", "Radius", " ", "path", " ", "2", " ", 
    RowBox[{"r2", "[", "t", "]"}]}], " ", "=", " ", 
   RowBox[{
    SqrtBox[
     FractionBox[
      RowBox[{
       RowBox[{"10", "a"}], "-", 
       RowBox[{"a", "*", 
        RowBox[{"(", 
         RowBox[{"t", "-", "10"}], ")"}]}]}], "\[Pi]"]], "=", 
    FractionBox[
     SqrtBox[
      RowBox[{"a", " ", 
       RowBox[{"(", 
        RowBox[{"20", "-", "t"}], ")"}]}]], 
     SqrtBox["\[Pi]"]]}]}], "Subsubsection"]}], "Subsection",
 CellChangeTimes->{{3.6863996746676273`*^9, 3.68639970431586*^9}, {
  3.686399764147543*^9, 3.686399828262278*^9}, {3.686401654345715*^9, 
  3.686401684113081*^9}, {3.686401728473894*^9, 3.6864017978436527`*^9}, {
  3.68640226308637*^9, 3.686402265741952*^9}, {3.686402383188602*^9, 
  3.686402412573103*^9}, {3.686402475894783*^9, 3.686402502120221*^9}, {
  3.6864025331959457`*^9, 3.68640253562674*^9}, {3.686405307205236*^9, 
  3.686405331870875*^9}},
 EmphasizeSyntaxErrors->True],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Normal", " ", "probability", " ", "within", " ", "radius", " ", "of", " ",
     "r"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Clear", "[", "\[Sigma]", "]"}], "\[IndentingNewLine]", 
   RowBox[{"2", "\[Pi]", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", 
      RowBox[{"r", " "}]], " ", 
     RowBox[{"x", 
      RowBox[{"(", 
       RowBox[{
        FractionBox["1", 
         RowBox[{"2", "\[Pi]", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          FractionBox[
           RowBox[{"-", "1"}], 
           RowBox[{"2", 
            SuperscriptBox["\[Sigma]", "2"]}]], 
          RowBox[{"(", 
           SuperscriptBox["x", "2"], ")"}]}]]}], ")"}], 
      RowBox[{"\[DifferentialD]", "x"}]}]}]}]}]}]], "Input",
 CellChangeTimes->{
  3.6864047581826677`*^9, {3.686404809204997*^9, 3.686404821672842*^9}, {
   3.686404867451974*^9, 3.6864048690056553`*^9}}],

Cell[BoxData[
 RowBox[{"1", "-", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"-", 
    FractionBox[
     SuperscriptBox["r", "2"], 
     RowBox[{"2", " ", 
      SuperscriptBox["\[Sigma]", "2"]}]]}]]}]], "Output",
 CellChangeTimes->{
  3.6864047588072157`*^9, {3.686404810317169*^9, 3.686404822159957*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Normal", " ", "probability", " ", "collected", " ", "when", " ", 
    "spiralling", " ", "out"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{
    "T", ",", "a", ",", "\[Sigma]", ",", "KillFrac", ",", "rt1", ",", "rt2"}],
     "]"}], "\[IndentingNewLine]", 
   RowBox[{"KillFrac", " ", "2", "\[Pi]", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", 
      RowBox[{
       RowBox[{"rt1", "[", "t", "]"}], " "}]], " ", 
     RowBox[{"x", 
      RowBox[{"(", 
       RowBox[{
        FractionBox["1", 
         RowBox[{"2", "\[Pi]", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          FractionBox[
           RowBox[{"-", "1"}], 
           RowBox[{"2", 
            SuperscriptBox["\[Sigma]", "2"]}]], 
          RowBox[{"(", 
           SuperscriptBox["x", "2"], ")"}]}]]}], ")"}], 
      RowBox[{"\[DifferentialD]", "x"}]}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.686401851339493*^9, 3.686401881983006*^9}, 
   3.6864019986296577`*^9, {3.686402167802682*^9, 3.686402183921855*^9}, {
   3.6864033556036377`*^9, 3.686403362371015*^9}, {3.686403504719708*^9, 
   3.6864035050063562`*^9}, {3.686403602535604*^9, 3.68640360337735*^9}, {
   3.686404653214079*^9, 3.686404660048862*^9}, {3.686404695040163*^9, 
   3.686404695690193*^9}, {3.686404829438566*^9, 3.686404829874218*^9}, 
   3.6864048652310343`*^9, {3.686404899675797*^9, 3.686404903187693*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       FractionBox[
        SuperscriptBox[
         RowBox[{"rt1", "[", "t", "]"}], "2"], 
        RowBox[{"2", " ", 
         SuperscriptBox["\[Sigma]", "2"]}]]}]]}], ")"}]}], " ", 
  "KillFrac"}]], "Output",
 CellChangeTimes->{
  3.6864019993462563`*^9, 3.6864033632995033`*^9, 3.686403505523539*^9, 
   3.686403603994616*^9, {3.6864046887254*^9, 3.686404696204329*^9}, 
   3.6864048311061*^9, 3.686404905113348*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Normal", " ", "probability", " ", "collected", " ", "when", " ", 
     "spiralling", " ", "back", " ", "in", " ", "when", " ", "t"}], " ", "=", 
    " ", "T"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{
    "T", ",", "a", ",", "\[Sigma]", ",", "KillFrac", ",", "rt1", ",", "rt2"}],
     "]"}], "\[IndentingNewLine]", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"KillFrac", " ", "2", "\[Pi]", 
      RowBox[{
       SubsuperscriptBox["\[Integral]", "0", 
        RowBox[{
         RowBox[{"rt1", "[", "T", "]"}], " "}]], " ", 
       RowBox[{"x", 
        RowBox[{"(", 
         RowBox[{
          FractionBox["1", 
           RowBox[{"2", "\[Pi]", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]], 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            FractionBox[
             RowBox[{"-", "1"}], 
             RowBox[{"2", 
              SuperscriptBox["\[Sigma]", "2"]}]], 
            RowBox[{"(", 
             SuperscriptBox["x", "2"], ")"}]}]]}], ")"}], 
        RowBox[{"\[DifferentialD]", "x"}]}]}]}], "+", 
     RowBox[{"KillFrac", 
      RowBox[{"(", 
       RowBox[{"1", "-", "KillFrac"}], ")"}], "2", "\[Pi]", 
      RowBox[{
       SubsuperscriptBox["\[Integral]", 
        RowBox[{"rt2", "[", 
         RowBox[{"t", ",", "T"}], "]"}], 
        RowBox[{
         RowBox[{"rt1", "[", "T", "]"}], " "}]], 
       RowBox[{"x", " ", 
        RowBox[{"(", 
         RowBox[{
          FractionBox["1", 
           RowBox[{"2", "\[Pi]", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]], 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            FractionBox[
             RowBox[{"-", "1"}], 
             RowBox[{"2", 
              SuperscriptBox["\[Sigma]", "2"]}]], 
            RowBox[{"(", 
             SuperscriptBox["x", "2"], ")"}]}]]}], ")"}], 
        RowBox[{"\[DifferentialD]", "x"}]}]}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6864039739769173`*^9, 3.686404039143361*^9}, {
  3.68640416499229*^9, 3.686404165311146*^9}, {3.6864049176812468`*^9, 
  3.6864049383757877`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"1", "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       FractionBox[
        SuperscriptBox[
         RowBox[{"rt1", "[", "T", "]"}], "2"], 
        RowBox[{"2", " ", 
         SuperscriptBox["\[Sigma]", "2"]}]]}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "KillFrac"}], ")"}]}], "-", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       FractionBox[
        SuperscriptBox[
         RowBox[{"rt2", "[", 
          RowBox[{"t", ",", "T"}], "]"}], "2"], 
        RowBox[{"2", " ", 
         SuperscriptBox["\[Sigma]", "2"]}]]}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "KillFrac"}], ")"}]}]}], ")"}], " ", 
  "KillFrac"}]], "Output",
 CellChangeTimes->{{3.686403968937325*^9, 3.686404039643819*^9}, 
   3.686404107072269*^9, 3.686404166078321*^9, 3.686404941541894*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"rt1", "[", "t_", "]"}], " ", ":=", " ", 
   SqrtBox[
    FractionBox["t", "\[Pi]"]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"rt2", "[", 
    RowBox[{"t_", ",", "T_"}], "]"}], " ", ":=", " ", 
   FractionBox[
    SqrtBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", "T"}], "-", "t"}], ")"}]], 
    SqrtBox["\[Pi]"]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T", " ", "=", " ", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"KillFrac", " ", "=", " ", ".9"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]", " ", "=", " ", 
    RowBox[{"1", "/", "2"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", 
           FractionBox[
            SuperscriptBox[
             RowBox[{"rt1", "[", "t", "]"}], "2"], 
            RowBox[{"2", " ", 
             SuperscriptBox["\[Sigma]", "2"]}]]}]]}], ")"}]}], " ", 
      "KillFrac"}], ",", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"t", "<", "T"}], ",", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"-", 
             FractionBox[
              SuperscriptBox[
               RowBox[{"rt1", "[", "t", "]"}], "2"], 
              RowBox[{"2", " ", 
               SuperscriptBox["\[Sigma]", "2"]}]]}]]}], ")"}]}], " ", 
        "KillFrac"}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"-", 
             FractionBox[
              SuperscriptBox[
               RowBox[{"rt1", "[", "T", "]"}], "2"], 
              RowBox[{"2", " ", 
               SuperscriptBox["\[Sigma]", "2"]}]]}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "KillFrac"}], ")"}]}], "-", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"-", 
             FractionBox[
              SuperscriptBox[
               RowBox[{"rt2", "[", 
                RowBox[{"t", ",", "T"}], "]"}], "2"], 
              RowBox[{"2", " ", 
               SuperscriptBox["\[Sigma]", "2"]}]]}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "KillFrac"}], ")"}]}]}], ")"}], " ", 
        "KillFrac"}]}], "]"}], ",", "KillFrac"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", 
     RowBox[{"2", "T"}]}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", "Automatic", ",", "Dashed"}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", " ", "\"\<percent mosquitos killed\>\""}], 
   ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<time\>\"", ",", "\"\<% killed\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<continuously spiralling out\>\"", ",", "\"\<doubling back\>\"", 
      ",", "\"\<Kill fraction\>\""}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.686399266982115*^9, 3.686399283810313*^9}, {
   3.6863998752462378`*^9, 3.686399899588854*^9}, {3.6863999533616743`*^9, 
   3.68640000720662*^9}, {3.68640202288573*^9, 3.686402141700808*^9}, {
   3.686402666456897*^9, 3.686402781836211*^9}, 3.68640281665514*^9, {
   3.686402905363716*^9, 3.686402921533815*^9}, {3.686402962753973*^9, 
   3.686402970223963*^9}, 3.686403069142379*^9, {3.6864031632514343`*^9, 
   3.686403238377129*^9}, {3.686403457387494*^9, 3.6864034799028187`*^9}, {
   3.686403548621872*^9, 3.68640359239333*^9}, {3.6864036422286997`*^9, 
   3.68640374165281*^9}, {3.686403824726643*^9, 3.686403833390768*^9}, {
   3.686403898810103*^9, 3.686403907135154*^9}, 3.686404058436164*^9, 
   3.6864041723092833`*^9, {3.6864042864163322`*^9, 3.6864043034216843`*^9}, {
   3.6864047039368477`*^9, 3.686404706093902*^9}, {3.686404839416201*^9, 
   3.686404841551372*^9}, {3.68640495876672*^9, 3.686404997623304*^9}, {
   3.6875380537387447`*^9, 3.687538079369308*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwV13c8Vl8YAHCjKJK99x6v8Q6VROdpSBJJS5JNVmalQhllJUpGCklLKUqU
UUIoM6pfZgmZ7xUyQ/zO/YfP93M+57n3POc8z7mvvKOPpQsbCwvLEfyH/J9x
wZGD5nx7KwtLxaC9U8LWTGtC/4jcOWR2KuLplTdeqMMs1l9OLgaFOhJ6c8+C
UaDx0fWr5dJQ57GTvCbX49CuarCZk32MRtsLrK5apaNn4boRE7IlyPEf/8mx
4VzU65AnMiZbh7ydjmnH8JWh0XsrTsRwHQrI/vufW1cZ+jNg8YL5oh65K/UK
XnjwBq3ymDId3dGIRNMTz+3dVI5U/PXChk58Qi5S/W4fcirQxm29MxNtn9G2
iAyN3OfvUdB+T3umbAe62ty9mHKuDi1HbBTvietATjNz3FmddSj0Fevnz387
UBCHMAW21KNLkjd3lH7pRJanWo8ZL9aj+IFqlZiobrS0sPw55EwjyjonM6Yy
3oOEdvSOMI9+Qv0twwY0u36kX8t787vnZ6TkYS6em9yP4n1yQw1SPiNX9sIZ
pcZ+5JOQkXKy4jMa3nAxT2zzL5SzO4bPWOgLIm4Jy7EIDqALmb9vdZd8QbPO
29k/1Q4iCfdnFm+WvqK1f2/XeWmPIs3p0YlkxzakF9Vxfo/DKJL4ViaudLkN
uQmLaqoljaLHdfY2CY/aUC0tMb7/7yjKjVkp+8dsQ5c8og9Y1zAR7WDZK8OA
dsTSfeq7sc0Y2il8t9gtCK+75+FZfqMJ1Gw503MwoAslPjTaH2o7gZIp/OMf
rnehJyd/qY8HTqBLEwmGUs+7UOeifFfjkwmkdu+zkDvRhfTEMgyj+SbRrsrj
XKlO3WjW4gbbStckMvnZdtt273fkV3UxjvCfQo/T+C54rOlB8/xJz7quTKG4
qQ3fixV60AWHnOb6+1PIRkyJOmbQg+JYWvkef5tCwbxeYmv8elDOVoVkF/1p
9ETjRvna9h70s7Q64wfrDOqL49z02OInsni5Nr/l2ixCXxRtPvP1ojY2mZZ3
j2eRGivHV1+pXmRrSZ/Mq5pFdfdz6tnVepHXpDXj6vQs2rG7yIET9aJonaev
TazmkH+WXECkVy96l2teUSU7jxJFz/88WdOLtO/faC3M+4um5dRTtHz6kNBN
6lxF3V8kxZ5kv+98H1q80iTV9Osv6v8cvdHlch/6GMDpNiCxgMR2Htc7ebsP
Oe4IWhaOWkBOHxvmxmv7UHKfIyXQbhFdzpOxbpDsR0ty9Mub+f6hp1Y3bmm/
7Ud9Qp+eGFH+oT0nOF6O1PajujVeLft3/UPWyZutbrX0o5SJB5Iewf/Q4IHi
0939/YhaIV5wa/gf0rax0x1Y+ws52bH2LFYso/M+xQcEDv5CA+ZuUj16LEDb
O31EufcXEqr1UrpgxAIPJq52CY/8QtsN/TSlLVlgZ1e1+/LEL5RFOW9wzJMF
9FKZNa9ZBpDNmjibtgwWoKtEWjfKDqDPlfnpn9hYYaDBszbCZgCV685JVTSy
Aue6irv2LQNoLHdRya6DFda/Nzri0DaApBRZtJYHWMF+vo7z2I8BdI5/raHB
Cis08BGnNxMDSPe3xPFiGhsUET9N7nEOoiePtmY8T2GDlf/EvlINB1GqRKT0
XXt2KHBP1HC8N4hm+5sfmXuzQwTlxRnBJ4Po4DNR+lIQO0x2jIW8fT6IBODx
riOp7PBD0ez74ttBFOfS6MPTzA5h5rdKFdoHUehzgapzW1bBy4WwXFnuIeS2
646rpchq6Hyz7yaX1xCq5R2eWFFcDewX10/1+g0h5Q5q0DPaamjKzZ4pCBxC
fZ5VCWvMVoOh8Fee7RFDyOb6QHF5xGroDgo0Eb41hCy6KdyUydWQvS2iObl2
CG32L85nb+SAeOeqDE3JYdSyssXWr4MDguwaVrTkhpHr1XfregY5YO9WF24N
5WGUmFPrXsrKCTqSXBsFdIbR6I+vin6bOCHg38KZe9uHUbrpZOqPbE5IurkU
3uw2jJaVNEJLzq0Bj91e3l4vhlFSwTNt1ag18GgpK7WpaBhpAO17UtIakOrd
JqxROowOH9PT981fA68f5sn/VzWM8q/vmlYZWANrflutnf4yjOyXHd2SLNaC
DOfcgaMzw+h9220LH1UuYDGMbejTHUFJjoemZxhccM3Rbu603ghyHVt/Mxi4
ICa9Imm1wQjiYg/viTnKBYmte+gSO0aQhbab9/0rXPA0rMBafP8I+nFJN65j
nAvuUoVO+HuNoAVa04cdxdxQt6b598OsEdT4JtKzvpob3n9986v53gjKNAbe
/a3csF/i56uphyNo2/GXh21HuUHqOlpiPBtB0dFpA2el1oG6mbBjQskIEulx
Yc8LXQedI0+NCltHEC1ueauYCQ+ccHDUbFgZQXT3Jednh3kgaUtxVAvbKNLd
tRC73ZkHTpkzsz6vHkUbWWa/eV3kATGxaYkm7lFkcGrMu7KIB3qfrU24LTqK
dtt0Z3oorIcqWvuZu7gv22uWLr9ZXA8qu2Uj3KxHkePaYiXLtbwwWs+msO74
KHIaLNozJMILAjbaw0/tRpFr1osUfjovLJtnzw44jyIvocfarm68IGGp7LfR
ZxQFLqXa8v7HC82F6kEHIkaR8aB+D/UIH2Qes6AlPsbzv3wloo7zgVJAiklJ
7ii6VOG98MOJD1TTezb+eDaKKm9lC1/15QPTRN00+YJRtGUf196RGD4IPBta
El86inSKO4rvvuGDjI7tu1Y1jCLR2LOJAgr88Hj49XrPUbz+QIEsdzV+kGjv
aLcgRtFB56fPKrT5Ya3Y+xLd36Po+tafH7238MM/8/QPs5OjiHvKeKX+ID90
/Pq82xnfOyvHRL0iovghoPBo5CAnEw1pvTKaJvjhnpJbYZIiEymEnHShTPHD
XLDYZT1lJrJpVLrs+Jcf9ObNXneqMFGLx43qltUCIJGRu0tCg4lKH/nueCYj
ALUh1wwjqUwUJ0/Z5mohACWqPSMChvheE84yaH8pAJPuo11rDzGRl/MRG95S
AUhmPdYefJiJHr5cH7yrQgAeyEa6/j7CRBKWIWWFjQLgwvrCsMmaiVYlWOtf
HxCAVt6E5XP2TPRtjbDeHlFBSDuQtnLNk4mClmIYb84LAuXErEN5KBM1n3JK
Oh8mCCX6FpwK4UwkN2YwoxctCFerKnQuRTBR9ffxV0XJgsAuvZNvZyQTrXt3
SD//uSDc4F1jUHCFiTLD5LdlDwrCvqL7t0xSmKiSo8Q82lIInDY7rng/YSKh
i4n5u44KwTWXsX8PcpnIdc6Tb7W9EFQoOOZ3PWUirmGZz2EnhSD2cxp1Rz4T
WdZdOhQULQQ5NiOf2QqZ6NcVCxvvciFoaQv4YPSWiTj5h90PagiD3J9LOf3N
TDQbZWN0hyoMx8Un/Xo/MdHgcovc6EZhyIx+afijhYlqiZK2izuEodud+vPr
ZyaK/HjFKNdGGPZoRHm9+sZEHKE68mwJwmC8xTbI9Af2+Jn2/ClhyE4OXF1N
4PguzJcLf4Xhw9btf+6N4fjddglGLCLgJ2KwEv4bx6/fvatrnQioGG0J2TqB
4z+UKORQEYG9iTnyuVM4nm15wnErEbj39lTDsQUmWt202pj7rQiscTznK8dJ
oHUn052+vxcBS3bOxFlsIR5GaH69CKyWudPQsIZASmb2JQfaRcCjpjM2gItA
O5tKKelTIjBbUnywmIdA4U0+fFoaonCsyo0QFSIQS3NHh3mqKAjd/ZuzQY5A
a7x9Z+UyRcHJ7kXmBDbfek7BqfuiIHu1r+6JPIHkzHX3phaIwth/0tVSigRC
zfHlPU2isPLijd2cMoEuNO+457tKDEYpVb+jKARabH7mlegnBonmwSJSGwkk
0+pwe+dZMeh19bd6g739i3D97AUxsPn4d/zYJgLFtoWoHosTg/OPrymk6RFI
7KdZn+IjMSgtDn/MvYVAGyfHjhR1i8FxWfWOVkQgX0HtHe3G4kD5qeEztJtA
ScJ9frHm4tDPNC8MMCHQa9GULIND4rBl0sh5BXtZcvlflqM4vP6mwilsSqCr
Ss3F7iHiQG365b7ZjEBPNnhrLxaIQ6f9a40T+wk0cCRPXEZGAgpZ37+0Pkqg
h1b/qmyUJMDrwWa9Jmy3o3u9bmtIQOUVUVNkTaBR69FysU0SIO3VIK1wjEAT
x1WcBS0kwI1hGtFnQ6Alp8y8NeESMFWxkmduTyBB3/gdUwMSsF2453SbK4G+
+n4naIQERDceTjM4QaAUP80U3z8SYLolyOoutlhA/fDYsgTkjR/JdXfD+TzD
ET8sKgn32Cl5M+4E0gi+0P7dRBLUHpiGLHoRaFu098mPzyThSWf2twp/AkkU
9ByJL5SEay8aX8oHEGi6y2L7wTJJ4OOuVgvHfqjDEP35URJElbu6tp3C561t
rmKuXxKmGz75vzlNoG/KYUKqElKgMXjqfeZZAnm+v1F2OVIK2i8J/CdxAZ+3
sVUPTa9KwY+HBsE+2DKiZ67xJ0nBienDH99jt3hYuWTclYJzQf0WnhfxfgpI
8xa9kYJc1b9ar0LxeXR46PjrjxRkFj7x3BJBoOTl4rU77KRhLF0ohCMav49q
jXeyizQs6y/GmWJf2tf6ZchTGj6tiz5yDds/ayQj7qw0vEt+Ii0eQyDz7RL0
b9elIYMj67RqLIE4IoOs3aulwXCxJWFTHIHO8mzNTVCXge8suVtUrxFofMMe
vj4dGcjOlFNwxna1PXxad6MM/Ej3bsjCPpjvjTq2y4CpfMwJ8esEou2/80XB
RgbUcuwbORPx/iexLBXFywBXsnBIxw0CHZN6v7d7SgYYn/cLWKbi8ZOTf4oW
ZKDwYh3EYZ99J5uWwCoLHAozOrXYKY7BA9t5ZcHwZND+zTcJ9Dlnw4XHGrJg
NVCSI5VGoD0bcvLPOMjCKpmyvrZbBNI3vyrA/0kWJK1Y9ypkEqjuTlnx6H+y
IB3Rz3cI22pyxLa6Wxbk+WIzo7BPJ+3KDRyVBWUPIWGCHB9bkR9nkwN6Stbp
gju4fhglpYdk5KCno23Thrs43xUUQuGQHJgFzZoJ3SdQX9r+jxet5GD21kwj
wn4dEHi/+5gcGDVfkPbEdlR9b5PiKAdKb2cYleR4vHXTWl85qNz7bYvnAzx+
PCZvIlYOCj6V9b56SKDihUHf8go5kDMMbtZ6TKD4r+vMJKvlIF6fpesAtlMe
Xf3sBzkYbO0pP4e93vFCL61ZDoR32fHUkON1wpYPuuTgta9g/dEnePzmTkbc
rBwI5dkMBeUSyGVD9sxRTXmgnHvVcu8Z7i/xwrwhOvLAOVj/owo7byhaLYsu
DwPriaZe7Nk0n2ODevIg0P5pn2wegaKXDSr9jeTB8uTpgZvYTz60xV2xlQe2
ayn+kfkE+n2UR+ntNXlIFxXoNX1BIIGXoYY/b8iDv8vWPSewN66bPsyeiuPT
xG+GY18s74wxyZAHbUHjvmJsPsWc8f8ey+N+EshQKiAQndhe9rtKHnb3+f2c
wQ68cNZSbkYeeDzvikcWEkiNCF4XNS8PvWu/HsjCbj8aVju2KA/Krc/9SrH1
NsTql7EpwDFKv9Vv7HnmbYXDfApQKRHcfrCIQOePvvtzhaIArE/SX0m9wv1a
l+PGnIMCrKpeU3LzNYG0s7nMbF0UgHjleDcf+wcvL2eNmwII/l3yrcVGTNGg
RB8F6N12vHYKmyVb3UkrRAFYzhfsNSvG9wuvGcPppgIcXXvxxyL25dEbX5qb
FaDK0O+DcSmu17aB+sVWBcjJdDtjTbp6U5Xafwqg/jpS4CR2eGbX8/AuBXjM
HSGQiH3BUjF+47AC3Px3hdGFfaa0YHcmqyKk/pHh8ijD/Te29e1JXUW4VhsW
df4NgU4EKhbd2qQIJWHly7HYrs6nn37QV4SlQluX29jOW8Vvy29ThJigdaxv
sB3+2J/9z0wRHt/5HbCEbW09QTc8oQj9HrKHz78l0F4N3px1txQhAPkGeZQT
6OhHnxz1DEXIsI4sOovt6tqSsytLEdw0YnsjsUOzrz8OfagI7ZcTee9hF0oI
5U4XKILcBbWaTmwpbvG87gZF4L6xL9v4HYEIpkLh03+K4L60Kky0gkB/YyIK
61iUIOVMjYASNofar8JBdiXQshK9ScWWc35QJMelBK9OZYWYYB/sVn2dJKIE
tY4ZReex3zRqlgbrKIG9aU1/J/bVZxsr9jooQVZeWGxiJYFU7NUcnjkrwZCc
UEomdrmABNt6NyVw8y9NeoI9EfhvxydvJbARO+9ZhX1we/WH/cFKcGPOKHQS
W6pt/6fDqUrw1/SXpVkVgZ6ynPxh36QEaxYn5xaxjV7aXqxsUYITC9UXOd7j
8+NiIafwVQmU/jNd4sPma2A49ncqQUXsgy/K2KeSFwZchpUgU7FjyRx7i0b0
mAe7MqyOubnjDnb9gXtLpzYrg8Hph382VROo4HJf520DZWj+YRUL2Ldey5dU
IWV4/8ZX3ATbQzLrNN8uZfi4fUraGnttf/rvXEtlaLtGrwzC3u2f8rPPUxl+
qM8FvsWuuRZTbZGpDOEyTT36NXg9VR+zA+8qQ+EVg1PbsZOmOcMy7yuDHocw
6x5sZ6tIQ+KJMniHya46ir1KLuJV1Gtl+Bl08vkZ7O35wTnlLcpgZuqV8xy7
osknTpNdBSL4vHbL1hJIVwi4UzlUYGLWIkoFO8eaL5aVSwV4txwt18JOGHoe
9Y1PBXb+mREywLZl/RMeKqMCBS/2ulhhL+meOvd1swosGb9KS8DenH7WNdhX
BWjuPTHz2E/7dg8MBqhAkPra78vYcurizvsDVeDS+sPqqz/g77tXJQ4qF1Sg
kTPwGT92+6cFm5YrKmC75b6zBvYZ9pADSo9UIP/N6mRr7AKPMGj8rgIbf8vq
vMLWdbT/qNKrAg+lqm+VYb86iizCfqnAfcFslkrskt3/7DYyVSBmXLGsAbtC
5dzFrHkVcF8ZYf7EburzLT8lqAoDDu+2cX0k0LC1vYG0iSpQG3cOWWF7WKLq
wL2qoPX5+oPj2ISJzN7P+1TBdnerrSP2uF73sajDqpDGaVjliT0rYhU06aQK
AfLHzS5gs3/ZV1pzQRW21hw5l40tY4r0vAtVofXaN9Mh7N+Vnv/iX6tCXrw4
hYn9Tu9mVX6pKkSGRHCMY9urTO6drFCFsdNdL2axs1nvOZxqUgWB6dVdq+sI
pFrMceX8oCoYzMScV8SmKjd/jxRTA+PRQk4bbJb0hexHkmrwlWvO3w67VUDV
7aOMGjg5fel0xPZnCf2zVlkNovXdstyxi7ponFdpalC1yZ49EFs/MZl6Yw/2
Pi/KdewdKzYRd4LV4OcXR4n32FmxEiPsoWrw/YWVfS32knC7uVuEGgjkfsiu
w36leUCCFqsG/jJy0i3YatYmL6pS1UDRV2m4G3td0YaegQI12F5d3DmD/dVj
/RbNETUISKCbKtfj9cySnzlqUFlzTFUN+2pYDMfMuBoUifiyULB33Vz1+e2s
GoiYnXhMxS6uWXDbt0od/igS37Zgp8sNpfjLqoP4S6V7+7Gdv737U3xIHc5b
GosEYfP11if3W6mDukS0Zwh2GfM/vfU26nCC37f8IrYAK3HByVEdav9tPX4J
+x1FjHu9jzrwHZS4eBVbIsxX0SlaHc4ENxy6g91KkT/IU6YOUxuqbSuxgzdq
zm0qV4d4vf0n32Orbdt0y7FSHdxiG8/VYF84bPbz9Qd10DiZEleHrRl2zsvx
qzpQp56ntWJHf2u99HpMHYodPh7oxd4aFl7kIKcBxA7LQyvYcwbpDsGKGpCn
7yHF2kCg5/NFPKkqGnDasbKXDVvRd8SlUVMDmrR0T3Bgr7GzENm0WQOevzh2
nAf7i4FM4DpLDTD+rjkvge02X6L3OkIDePQPTeliyxd++dUaqQEK5XGXN2J3
+oxdI2I04O3NTSJ62GZDciPy1zTgndcYfQs2/VtUWlw6fv4Cu/U27H8vDy04
FGmAnyLF3gw70WeybN2QBujbxhx2xm5D6Ws8RzUgJXxDuwu2FJ/xoboxDYhl
NbI6gf3oefrvy9Ma4D2VdMAD+82ksfwKKwWCQtQ2+WIPBmRGTkpR4Mxoyssg
bP2zpvu/WVJA2mkh7jr2xd2zGbqHKWCUtOtHIna12N3RxKMUEO9T107C3lcy
G7HPngL5nWV1KdjOC3dffTxJgXbhTRO3seOD5yXLoilwgf518QF2X+iDwTvl
FLjYdk+0BPtMS4ZvdSUFVOqGNUqxueRSFoarKfBrQMKwjMzHu8j19AYKUEb2
2L7Fjvh3YmN1GwUqvs3dqMRWOq8ROTxBgfR2n6Y6bNeAfGWaoib0tc1e7MBe
qHqUf0hFE/Qf/fTvJN9HIGvzeXVNyBpvc+7CfvXimtl7HU3Y8vKP0Xdszgm/
04cMNMF019TST+wcL92ac4c0oT9pfOswNtOlxLkqShP8V6TEZ7HX1W9P0Lii
CbbGp1jnsDW1G0sS4zXBR75lmLTX7I/1TsmaoNWQVvgXm4hcVcJ+TxOsfBLh
H+lH+3iMyjVhVISVsqoR97ORgaIP05rQutRpwY+93tznp868JpQIl0sKYGsX
zHPdXNQEr6yaAdLe57nt3di0ILnCKFCInM9F41rLpwXhI4rXRLHHKcG2eyha
kHJV4ZY09sRJAc4mBy3gVdkrrI5tt3/Ee9FZC1K1KktJN+tWfFN304Iv/+Lt
NLCfLp58GOmtBSW3Nz2iYLvF1BlBkBZoyX7S1sb+eT/00sskLWB99kiWgf2p
6zfrrQ9asD3aPs4Ae+u7GveP9VrQGq4uY0jGy05vnW3Swr8P7fJJx7rvuXvg
qxbseC/QshV719wD4OnVgqOuuVzbGsnvmeMXQxe0YH2avIsRdp5Jw5KrljbM
zP8rMMOm/Hh+8jJVG37t/U01x87xT/lxj6EN29oc8khn33ao+LlZG5xDvj7a
h508NhdhvUsbjgTOJO3HDr6uxG1upw3t3xKsDmHv6QgR33BdG7o/Hou2wf5w
0in2QJI2vD2TNkd6J5vJol+qNpgy3VyPk+ujCH3Py9CG/u7y7bbYtJAnWWpP
tCGmxHLWDltMvk1V6r02HH0daOKEPehG3cg+ow027nHZ7uT+8D8ydpnXBt87
Ujwe2POl0kc/LGoDt6V+IOm1PNzBV9h0IEFMbo8ntuaLgUpBPh2Yupg96oUd
8PeWmRJFB7a8Zor4YrPErnYxctCBhrq3smfI+YzgM4+cdUDcuC+YtED3n6i1
bjqw+DS7g7Si9s8nTd46gH7OXw8k8/+5dOJQsA4oxHEsn8W+KuEb7JqqA2rv
2KqDsCVyO29ENenAQ95dXGHY/l8y+/JbdOCr8c7DpOsWHWntX3RgyGj2Lumz
e5nNap06cKDmjF44dtvY4tr6QR0wk/zjEEHm++Z64GChgm6I4KPL2Gu6dF7t
FqdCat3SYgy27vj1790SVBjdyoZise3Zp1f5SVFh4Vx1GOliSvGBNFkq1JiH
clzBPhEMkyPKVLhf1b0uDrtWer/mFToVmk478sRjR9j7ZzeZUiG83r7nOvb0
stStCDMqaM16yiZiu2Z8uL55H36fKJod6T2dUmEPLKmQxTn2nbTAwQ92IUep
MPBSq/0GdpaxlLTWCSp0gEhFMvZb7drUuHAqsMFZuzSyXpt8E7ZfooL1HZtU
0lmeklHzl6mwDlZ9In0px/eMcwwVtptlGt7C3qsgecjgGhWIt6vEbmN3CvsK
EBlUcNv9pTIde25J/KppCRUkfSjMO2Q9T5nG/C2lAjWMVzILe3g05PKjN1QQ
P1exh3Rne28IewUVTKZjHpMuL3zsXVZLhXyWSue75PO9NltQvlJh78JYazY2
X7eVIPc4FY6bPI1+QJ6fL7G8JRNUoJ9JLCDNVv+G+8QfKtweM+0mPfVabtX7
GSrUn9+s8xD7243h6fNLVBjZvOoL6XTTs99G19LgHGuYQA62WllqWr0SDfrd
Dvg/wf7o51t4TIUGo1GRSaTd1Ew+Eao0YLmd+or04+SFVbwUGnxUOrhAWsP3
uO8BGg0SAvRDc8n6V1Y07jakgeZc++WnZL4T8qbHDtOgrXTruTyynxlF8V60
okHoFZ9U0t5Ldhp81jT4bRZeRDrfnd+efpwGT2TNJ0lTd55qOONEA/kN4Sfy
sel/N2ev+NDgbdlp8+fYG5xq9vHH0CBtzoKzAFvq/qB+dSz22w1KpNkGOFUC
42gQeHARSDe77lnqTqCBaZD6edKuHp9yclJoUGMpzCR906+DFe7j5/cYf3iJ
vXBx7KX3OxoMrZpzLyL7a8X6O/KVNHDy040gXctKjf1aRYOtWYfTSd+I8LfX
r6VBZKlJM2nNqLl1HE00aOb7TX2FfTye1TWjE88/unuSdEW6sFjjDA1WPq62
K8Y2z/gu7zhHg8/86QGkuzIeUObnaRB7Wzqa9GzmBqS0RIMNNX3PSWvdPeQa
zEaHwqJA1hLsWw+SCzV56cAY+Z5J+lSe8P6ranRwdVJpKCXzkf/dWlGDDmzl
pt9JJ+Q/cC6h0GH3J9tx0k+ebzg7oE3H1WIuWIbdW3DojuEGOrRsOGRN2vx1
8tjYNjrMnOMfIK1WIRxrfowORoXlY2+wDcRdbnbb0IHjl9c/0vv9Cx962NLh
RzI3z1vs80oH3kc60IH1rYQm6cboa0vlJ+gwVBnmTtpvP7ePzik6qL+52Eu6
tI/lIN9VOuxXvVtbTu7fFgvHzHg65CgFfyXdn3THV/MaHZ74mfSRXme89eru
G3Qop5b9I22XG1QbmkaHmNIlxjvsVadm9SYf0OFNHHsmabPVhPTncjqIcZ13
qyDvq+GIpbAKOij2V54mzdYo2UWrokNI6GI46eJE05vXa+jAb7Qzg7SCXK7A
/kY6dKRrtZKe1ffgbOmgA+cVr42V2Jm+wxNN03RYa8YyR3r+QOinkFk6pHFl
sFVhH9gklqc1T4dNh7XWk16zbOx5dZEOvxrVlEn7X3k0sJeNAbOP4yxJGz90
7WzgZUDkJcFc0hNdv97XaTDw/Xv6wHvsPxcUK200GXDvw7gN6Wl5x/JxLQZw
S9m7kp4/0VMsTGPAcJDSOdIs0x3PHDYx4I+MYSZpvnWfUv/uYEDwuleDpKkG
JZ7qxxmwcHa1XzVZfz1zbm9sGbDuicM50rrhG1332TMg/EJRGGm9jy/tTzsx
gIuxM5E0HMw7VOnOgEcFywWkLbzuoaNnGMBDH/9D2if9qmBMAgMelM141ZDn
gVVpfM91BpzipZ0mrXGitH7dDQb8pjuFkP5FGwq7lsKAHv6nV0lbfYCJ1AwG
CO9tfUZ6+5+pxoe52L7+BGmR3daR1R8YwFQ/4FRL3s/PJhwi6xiQHhTkQbpF
IMpwdwMDpj/d9iN95fvL6YZmBmy+X32RNEsAj9OX/xhg8+f1bdKjGRWor58B
eu80P5M2Zj8ieX8A5+NgRzvp+25jsy5DeD2nL/SQtmNI5I2MMsAltIAg/fVj
gNTkJAMe36ri+IBN0+aaL5jC+QvW5SEdfyPry6kZPF/zjiBpE9um2Pl5vF+i
dnKkH753ci1dYMCiY6EK6VXqC9uClxiwM51Ni7RD/DXprcs43w0mDNLlUyp/
V1YYsDIfs5n0/1xwSM0=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwV13c8lV8YAHCyR7bMzGte415XqOg8DWkZkZJUdrJFUVRGWRklo4GkklGU
PUqSiOzKLiEy3mtECOV3fv/w+X6e933uOec95znnyNp7mTttYGBgcMN//v+f
dsWelep4fwcDQ82YrUP8jnRrYtsxmYvI2C/s2Y1X7qjXOPqcjEwUCrYn9Jae
ByF/o+M8LDJ3Ud8JD979t2LQ3jqwWZLOQZM9hVaxVqnoeah22Kx0BbL/y+9B
H89DQ3b5m+jSjcjT4YRGFF8Vmny07kCMNyLfzD9fXPqr0K9Rs5dTL5vQWdKQ
4JUnrxCz6/zByd3NSCQ14eIh3WqkeE4v5OeZNuQkOeLSkF2DdHYO/Z7t7kQ7
w9JU8168Q4GH3WynpHtRbOvAavLFRvQvTEdsMKYXOfxe4sroa0TBpYydnX96
USCrMBm2N6FrEnd2V37qQ+Z+HSeMVptQ3GidYlTEAFpb+dd5+UIzyrgoRVec
GURCu4cmpo63oZH2cX3q6RG0rZ73zle3TkRyNRHLSxpBcV55wfrJnciZqfg3
qXkEecWnJXvUdKLxLVfzRbf+QNn7oviMhD4h4p6wDIPgKLqSPn1voOITWnTc
xdRWP4bEzz43e7X2GXH8ud/orjGJ1BYmZ5Psu5FeRO+lA3aTSLyrSox0vRu5
CIuoKSdOopxGW5v4p92onpoQN/JnEuVFrVf9nepG11wjLazfTyHqkapSA98e
xDDg99XIho72CD8sdwnE/R7MCuA3nEWt5r8Hj/j2o4Qsw8PBp2ZREpl/puFW
P8r1+KEy4z+Lrs3GG0i+6Ed9q7L9zbmzSPlRp9BZoh/piaYZRPLNob1vT3Km
OAygRbPbG9b759D+7933Tx36inxqr8YQ5+ZRzl2+K67sg2iZP/F5/415FDO/
5Wu53CC6Ypfd2vR4HtmIkih0/UEUw9DBl9M1j4J43UXZfQZR9g65JKdtCyhX
9XY1R88g+l5Zl/aN8TcajmHTzTH7jsyKOAraby4i9EneppNvCHVvkGp/k7OI
lBlZP3tLDqFT5lpz+bWLqPFxdhOT8hByn7OmxS4sot37SuzY0BCK1HxWtt9q
CZ3LkPENdx9Cb/JMamqll1GCyKXvHu+HkMbj2x3F+X/QgoxKsrrXMBK6Q1mq
afyDJJkSbU0vDaPVGy2SLT/+oJHOSB2n68Pogy+by6j4ChLdc1LP4/4wst8d
+E84YgU5fPi4NFM/jJKG7cn+p1fR9Xwp648SI2hNRuv6Vr6/6JnV7Xsar0fQ
sFBbriH5LzpwhrVoon4ENbK7tx/e+xdZJ221utc+gpJnn0i4Bv1FYxbl5wdG
RhClRqzw3vhfpGFzWnuU4wdyOM04uFrzD13yKrcQOPIDjZq4SA7qMQD10MIx
haEfSKjenXTFkAGezMb2C0/8QLsMfNQ2mzPAnv66s/9mf6AM8iX9E24MoJcy
9b6MYRTZsMfYdKcxgJZiuHWz9CjqfFuQ2raBEUY/utWH2Yyiau0lyZpmRmDj
rnlo2z6K6HmrpNO9jMDzzvCYXfcokpRnUP83ygi2y41sJ76Noov8HAb664zw
kY84v5UYRdrT4ifLqRughPi+/xHbGMp9uiPtRfIGWP8i+pliMIZSxMM3P7Rl
gsKzCar2j8bQ4kjrUxNPJggjv7wgmDuGjjwX0VoLZIK5Xvrl1y/GkADk7D2W
wgTf5I2/rr4eQzFOzV4bW5kgxORepVzPGAp+IVB7cTszFK2E5Elz/UQuex84
m29igb5Xpnc43X+iet7x2XV5FmC6yjM/5PMTKfRSAp9TWaAlL/N3of9PNOxW
G89uzAIGwp837gr7iWxujZZXh7HAQKD/fuF7P5HZAJmLPMcCmTvDWpPqf6Kt
58oLmJpZIc6xNk1NYhy1r28/5dPLCoGnP66ry4wj59g33INjrHBohxOXqsI4
SsiuP1vJyAaaEpw6AprjaPLbZ3kfXTbw/bty4dGucZR6cC7lWyYbJN5ZC211
GUf/SKrBFRfZwXWfu6f7y3GUWPhcQymCHZ6uZaS0lIwjVaB+TUxkB8mhncKq
lePo6Am9bd4F7FCWlS/7pXYcFdzau6A4yg7s01YcC5/Gke0/e5dEMw6QYluy
OP57HL3rvm/mpcQJDAbRH4e1J1CiveXCbxon3LQ/vXRebwI503nuBAEnRKXW
JLLoTyBOptDBqOOckNBxQEt89wQy03DxfHyDE56FFFqLHZ5A365px/TOcMJD
itCZc+4TaIXa0rC7nAsa2VunszImUPOrcLemOi549/nVj9ZHEyjdCHgPd3DB
YfHvpfNZE2jnyaKjpya5QPIWWqM9n0CRkXdHAyS5QcVY2D6+YgJtGnRiyg/m
hr6JZ4bFHROIGvNvh+j+jXDGzl7t4/oE0jq75vj86EZI3F4e0b5hEmnvXYne
5bgR/EymMjpZJpEOw2KX+9WNICq6IN7CNYn0/eieb0s2wtBzjvj7IpNon81A
uqscD9RSey48xHXZVq3y36tVHlDcJx3mYj2J7DnKSeYcvDDZtEGO++Qkchgr
OfBzEy8I2GiMPzs9iZwzXibza/HCP5PMxVHHSeQulKPh7MIL4uYKPjpek8h/
LeUU7xdeaC1WCbQIm0RGY9sGKcf4IP2EGTUhB7//6TMRcZIPSL7J+yvyJtG1
Gs+Vbw58oJQ6qPPt+SR6ey9TONabDw4maN+VLZxE2005D01E8YF/QHBFXOUk
0izvLX/4ig/SenftZf44iUSiAxIE5PghZ7yMx20S999fIOOsMj+I9/T2mBGT
6Ijjs+c1GvzAIfquQnt6Et3a8f2D53Z++GuS2rA4N4m45o3Wm47wQ++Pzn2O
eN9ZPyHiHhbBD77Fx8PH2KbQT/VSwwWCHx6RXIoT5aeQ3GUPJ/I8PywFiV7X
U5hCNs2k6/Z/+EFv2bisT3EKtbvermtnEQDxtLy94qpTqPKp9+7nUgJQf/mm
QThlCsXIknc6mwlAhdLghIAB3teEM/R7igRg7uxkP4flFHJ3PGbDWykASYwn
eoKOTqGsIp6gvTUC8EQ63Hn62BQSN79cVdwsAE6MLw1arKcQc7z1tlujAtDB
G//vou0U6mIX1jsgIgh3Le6u33SbQoFrUbRXlwSBfGbRrjp4CrX6OSReChGE
im1mbHKhU0iGrv9bL1IQYmtrNK+FTaG6rzOlJUmCwLR5D9+e8CnE/cZyW8EL
QbjNy65feGMKpYfI7swcEwTTksf39idPobesFSaR5kLgsNV+3TN3CgldTSjY
e1wIbjrR/z7Jm0LOS258LLZCUCNnX9D/bApxjkt1hngIQXTnXcrugilk3njN
MjBSCLJtJjo3FE+hHzfMbDyrhaC927fB8PUUYuMfP3tEVRhkfl3LHmmdQosR
NoYPKMJwUmzOZ6htCo39a5eZ1BGG9Mgig2/tU6ieqOi+ulsYBs5Svn/unELh
H24Y5tkIwwHVCPfSrinEGqwpuyFeGIy2nwo8+A175kJPwbwwZCb5s9QROL/T
VNHKH2Fo2LHr1yM6zj9wOt6QYRP4bNJfD53G+Zv27e3n3gSKhtsv75jF+bPE
i1kVN8GhhGzZvHmc71R1/EmrTfDotd/HEytTiKWFxYjr9SZgt7/oLcNGIG6P
VIev7zaBORNbwiK20EZacEHTJmCRevDxIzuBSMa2FRY9m8D1fV+0LyeB9rRU
klPnN8FiRfmR8o0ECm3x4lNXFYETtS6EiBCBGFp7e01SREDo4Z/sLTIEYvf0
XpRJFwGH0y/TZ7H5eNgE5x+LgHTscGOuLIFkTLQPpRSKAP3L5jpJeQKh1rjq
wRYRWH/56vSSAoGutO5+5M0sCpPk2ukIMoFWW5+7J/iIQoJJ0CZJHQJJddjd
3xMgCkPO56xeYe/6JNy0eEUUbD78mTmhS6Do7stKJ2JE4VLOTbm7egQS/W48
LP9UFCrLQ3O4thNIZ45+rGRAFE5Kq/R2IAJ5C2rs7jESA/J3Va+f+wiUKDzs
E20iBiNTJsW++wlUJpKcoW8pBtvnDB3Xsf9J/PubYS8GZV2KbMIHCRRLai0/
e1kMKC0/zm41JlDuFk+N1UIx6LMtUz1zmECjx/LFpKTEoZjxXZH1cQJlWf2t
tSGJg/uTrXot2C7HD7nfVxWHtzdEDiJrAk1aT1aL6orDZvePm+VOEGj2pKKj
oJk4uNAOhg3bEGjNIT2fPVQc5mvW801sCSToHbd7flQcdgkPnu92JtBn768E
lRCHyOajd/XPECjZRy3Z+5c4HNweaPUQW9S3aZz+TxzyZ47lnXXB43mBNW5c
RAIeMZHzf58lkGrQlZ6v+yVA+cnBy6vuBNoZ6enx4bkE5PZldtWcI5B44eCx
uGIJuPmyuUjWl0AL/Wa7jlRJAB9XnXIodpYmTeT7BwkQUejv3+mH51v3Us3S
iAQsfGw79+o8gboUQoSUxCVBdczvXXoAgdze3a66Hi4JPdcEvohfwfONzpx1
MFYSvmXpB3lhS4lcuMmfKAlnFo5+eIfd7mrllPZQEi4Gjpi5XcXfU2Azb8kr
SchT+qNeGozno12W/Y9fkpBenOu2PYxASf/KOXaf3gz0VKHLrJG4PUrvPZOc
NsO/basxB7GvmXZ8+um2Gdq4I4/dxD6XMZEWE7AZ3iTlbhaLIpDJLnGtrlub
IY0147xSNIFYwwOtz9ZtBoPV9njdGAIFbNyRF68iBV8Z8rYr3STQzJYDfMOa
UpCZLiPniO186uh5bR0p+Jbq+TED+0iBJ+rdJQUHZaPOiN0iEPXwg09yNlKg
nG3bzJaAv38iw1pJnBRwJglf7r1NoBOS7w4NzEsBrfOwgHkKjnvM/SpZkYLi
q40Qgx3wRvpuPKM0sMr91qzHTrYPGt3FKw0GHoGHt94hUGf2lis5qtJgNVqR
LXmXQAe2ZBdcsJMGZqmq4e57BNpmEivA3yYNElaMh+TSCdT4oKp88os0bA4b
4bPEtpqbOFU3IA2yfNHpEdjnE/fm+U9Kg4KrkDDxf5y+LjuzQQa0kjPOFz7A
64dWUWkpJQODvd26Wx7i8a4hE3KWMmAcuGgs9JhAw3cPf7hqJQOL9343I+wy
X//HAydkwLD1ymY3bHuldzbJ9jJAev2b9vb/eJx1C4e3DLw91LXd7QmOn4zK
n42WgcK2qqHSLAKVr4x5V9fIgIxBUKt6DoHiPnMbS9TJQNw2hn4LbId8LZWA
BhkY6xisvojNY39liNoqA8J7T298/3+8Udj8Sb8MlHkLNh3PxfE7e2gxizIg
lG/zMzCPQE5bMn8fV5MF8sXS9kfPcX2JE+a9rCkLbGNN32qx839GKmdoycIo
D9EyhL141+vEmJ4sCPS0mUrnEyjyn/7bc4ayYO5xfvQOdm5Dd8yNU7Kw4Wby
ufACAk0f30h6fVMWUkUEhg6+JJBAUbDB99uycM5px4Ez2DrcC0eZUnB+qtid
UOyr1X1R+9NkQUPQaLgcm08+e+ZLjiyuJ/40UiGBtIhdVdO1srBv2Of7b2z/
KwHmMr9lYaPbQ7HwYgIpE0HcEcuyMMTx2SIDu+d4SD19VRYUOl74VGLrbYne
VrVBDk6QR6ymsZen7ssd5ZODt+JBPUdKCHTp+JtfN8hywJibWipZiuu1Nuvt
JTs5YK5jr7hTRiCNTE7jU05yQJTaPyzA/sbLy/beRQ4E/6x512OjKZHABC85
GNp5sn4emyFTxUH9shwwXCo8ZFyO9xdeY5rDHTk4znH12yr29cnbn1pb5aDW
wKfBqBKv1+7RptUOOchOd7lg/b/rdGuVv8iBSlm4gAd2aHr/i9B+OcjhChNI
wL5iLh+nMy4Hd/7eoPVjX6gs3JfOKA8pv6Q4Xatw/Y3ueO2hLQ8360MiLr0i
0Bl/+ZJ7uvJQEVL9Lxrb2fH8s4Zt8rBWfMrpPrbjDrH7sjvlISqQm/EVtt0v
24AvxvKQ82Dadw3b2npWy+CMPIy4Sh+99JpAh1R5s7nvyYMv8g50rSbQ8Q9e
2Spp8pBmHV4SgO3s3J69N0MeXFSjh8KxgzNv5QRnyUPP9QTeR9jF4kJ5C4Xy
IHNF+X0ftiSXWP7AR3ngum2aafSGQCo5F/P/tMpDy4kcRktsHaO+/E2d8lBC
bbSwxzYLu19g1iMPgwfj24Owr61ufln3Qx7mj2Wov8S+dffKy6Gf8pDElEyq
xk7XHXz5b1IewtbKeT5il/tmFOrNyQPb9YpXP7Df8zMWWS7Iw8tDL4LnsDsL
7IrOLcnDeAer3j/sQePaovgVeUi/1TjMWUMgYkqu+NlfeTi7xhwigv0nKqy4
kYEExuLrOrLYrMo/iseYSHBG8sxFOWzB+j0lTGwkcDDgfS2PLeP4pESGkwRi
VcuMCtjqG1hLDTaSIOMzaZ8i9rYM51JrPhLsb0qMV8I+MqBUlriJBKGHDeVU
se0uRZa9FCPBr7ORHmRsT9GJslZJEux1F6pUw448klvOLk+CLQe4j2liv2pW
qwzSJEG474MMbexG19jKu1okyOszXtyC3cU+XVm6hQSS10yNdbFn9xRUzW4n
QcLw4fWt2KTX1NeO+0j4vu7vi7Bjn+vUHLIjwW8d/7QD2Iq2ynbPHXE+9xGl
Q9jVAuIbeFxIkBK/XGT8fz7/v7vbPEmgWk/qMPu/P7vqGg4HkUAxtEz6GLZk
9+G2oykk2Mxsx+uI/YzB45ttCwlumzPvvYptWHTq6tt2Eiw+JnOEYH9zMpOR
+0yCrxu2toZi832k2Y/04Tg/z6lwbL+klVGncRL4mPQnxmJvV42kuzIpwH2F
HttU7CaLR2t+WxWgxDIspAq78Ppw3319BUgWZnZ4jX2vTLaiFinApT6XvW+w
XSUyzvPtVYCzvGMC77A5RlKn88wVgK/rR20T9r5zyd+H3RTgdNnT4D7s9zej
6szSFcDT5EDI6v/9qf2Q6f9QAYz8ZR79xU5cYAtJf6wAj80kGtaxHa3CDYhc
BdhTEiHM/JZAzDJhpRFlClAoF9DMjb2rICi7ul0BVvOePJbCrmnxilFjUoSU
XnGePdjaQsCVwqoI4rndz/ZiZ1vzRTNyKkKMtZfJfuz4ny8iuvgUYXv79nsm
2KcYf4UGSymCP8PDI8ex17T9Ln7eqgjZR84c88LemhrgHOStiOv9Ql4a9rPh
faNjvorQ52X1LANbRkXM8bC/IrwwZXzxCJu9tMJO8YoidKhR3+Zg97St2LTf
UARjSU+uUuwLTJctSE8VwaguflcbdqFrCDR/VYSV5W+WzLW4/fa2HxSHFOGp
K2spG3bpcWQW8kMRnPY0iXFhV+z7e1pnCsef6hD82DWKF69mLCtCpjXva2ns
lmHvaj9BJWjO0RXQxx63ttXfvF8Jug0Ynvpju5qjOv9DSvBLMSw0EJvYL3Wo
01QJvD0U7a9iz+gNnIg4qgT2bwbVI7AXN1kFzjkogc62e0vJ2EyfTCvfX1EC
g7MkqzJsqYNIz7NYCegRyHMVe/qt29+4MiUwXXoavY79Ru9ObUGlEkQeUs1j
ekcgW8W5Q3M1SqDAGbvMhZ3J+MjOr0UJJB12vJfEVipnvXFpTAlSXq6oIGyK
QuvXcFFlCBXhRBHYDKkrmU8llCHwF33sBnaHgJLLBylluNF74fZN7HMMwb84
FJTB9Xj0yl3skn4qWyxVGXZu2M74HHtbQhLl9gFluOs3sfAJe/e6TdiDIGW4
EJiXolBHoIxo8QmmYGW4/6zOlIy9Jtxj4hKmDHXCPDxU7FI1C3FqtDKQbQ+l
6WMrW+9/WZuiDMOS2mxHsLlLtgyOFirDlqxCnmvYn115tqtNKIPEX26pCWzK
4v/HRGXw0SvLmcGODYli/T2jDO53LugvYu+9w9z5elEZtC9Y+DO9x/X5/YqL
KbMKZB84tVsKO1XmZ/I5aRU4u+nudktsx643v8otVaBYyXv0AzbfUFPSiJUK
VK97jLRhV0190eOxUYGA1MDxLmwBRuKKg70KcBUOs41ivyGLcvF4qcCe9zmp
jPX4/B/iLe8QifOZXiXpY3eQZY9srFKBaf7ZoVLsIB21Jd1qFWD1N2qvxlbe
qXvP/q0KuJx8WF+PfeWo8feyBhUo4r/8sQtbLeSiu/1nFdBMK9dZwo7s6rhW
RleBu0+v3tvaQKAdIaEldjKq0F/A9qkOe0k/1S5IXhVCzWMft2C/WC7ZmKKo
Cm4TLVe6sOW9J5ya1VSBJT7TeByb/bTZJt2tquDQHWvJ/YFAn/Sl/LnNVSG6
S2XTUWyX5Qq9sjBVeMWte28WW7b404+OcFXY9OJa4gp2nxf9JhGlCpqiRXeY
Gwlk/FNmQvamKuw51Vstiq3VFXE3JlUVCpZOh+3E/ltkuWJXogrcx0QWE7ET
vOaquH+qAumFadPuJgJ1o1R2t0lVyPD/zmmGLclnZNlIVwW5PfetbLCfvkid
vr6gCu1xDRLnsV/NGcmuM5LhTlH0rqfYY77p4XOSZNDc6S7F8xHP14CDh7vM
ySAj6Rwwhn1132Ka9lEyvL/eemkBu0704WTCcTI4GO2J2dBMINOKxTBTWzJc
TbwzIIXtuPKw9IMHGeTOP9e2wo4LWpaoiiQDlylXRwv2cPCTsQfVZAh0cNF6
34LrU3uad91bMuwhzct/xuaUSV4ZryODiGkAaQRb6004j9ZHMkisPzdnbCVQ
2N8zOnXdZLg54Om0A5t0STV8fBY/f6rCpwrb2bdAgSqvBr3jOxLfthFopfZp
gaWiGmRZHg/rxI4TyNh6SUUNCibdw0awS1/eNH6nqQYX896VsrQTiG3W57yl
vhr4ifIRB7Cz3bXfX7RUA1VW+4we7CmnCsfaCDXYOnzxOWMnXn9Nu+JVb6jB
9+edgZuw1TSaKxLi1OD+UIMtGdt98RuPQ5Ia6I5NeFpiE+HMFUyP1ECa+V16
7v9+arrRsFoNyuq77Y9/wvVsYrSkYUENcp1KtRo/4/uDidd3zWU1sOgxZh3C
1ihc5ryzqgYTLE3zy9iel7hsXTaow1U0JKnyBb/PSeXk4FOHL4+ycqOxZ8hB
pw6Q1UFGsK3FvAufBzwE2FrscLyExrTcTaDThyc8Vx3VgeNSQxB/D4FatWu6
VFzUoWSPNh8Z+9mqR1a4pzrcnGG8fgrbJarREALVgSHUPKce+/vj4GtFieog
lLJv4X4vgdr6pxnvNahDmKWe5Yl+vN7evD/7oUkdOt607QjAfpaZ2rHYog5e
wq8Nk7Cjzx54aPEZt+8F37M27L1LT2DjkDpwXfvx1XDg//PMyavBK+rwzGNy
Vvcrvh/t/7jmrK4BJT92vqANEoj87YXHdYoGzAk+6LfAzj6X/O0RTQMsONcU
/bAz79vVfN+qAbOvtaVKsJPoS2HWezVg2JiUoPcd15dbJC6T0xrAJnzlmeEQ
vs/2XhbbcksDHhnOJF0cIVCDh0O0RaIG3GZxYUzH3rNh/6pPigb8GRW/VYu9
gyz0NT9NAxTM3mzm/oHv35dzM5RzNWD/w7WZDGxR2W4lyXcaEHo5/k7HKF5v
LhQdpt8aEDM+w2Q2jr8P/1Mjp2UNiMumvgnCXq7cfLxhVQOYvpXn5mBzbOQK
urFBE/7ucBFknsDz6+XoW0E+TQg4wEWtwvb9c8+YRNYESrtss9YU3q+iWZwM
7TQhJCmZaf80fp8WdOGpoyYMhXdTgrAFBn5FcLhoQulV86QCbHmN77ktnjgf
eZRZZAaPf2flrGWQJoiyClwfx44V9w5yTtGEA64sKHkO1+u8vtsRLZoQw7ts
LvUb73+f0ocL2jXh7cSxxSPYjav21J5PmvDR7nX7DeyAQ1Otyn2acIzFn7yC
3U1f5Wga04Tdh2uv9C7i8b7DA6wMFMjtsmnNXMb1tV+zdJ8YBUSOPMu1W8Pn
k5lbXwfEKZAl4Jv+ANuWaYHZR5ICd9dS279il5PLLe5KU8BkUHjO+i++bwXB
3IQCBZzTolWs/hGofvNhtRtaFPD8/eHFKQY6CrM9l9lykAIq5k7jacx0tPBP
8l6YMQVSGn5zTmI7pzXc2mpKgQWLB8E6LHR0oE8y5Ik5BTgGs53bsQWONJy+
fJwCT1/dVWJno6MMI8nN6mco0KVzsjWCg45ea9SnxIRSoNz2j2kTDx1ptHjH
77pGAUq4bKwsL37eTSJi+ToFNliEqFzEvpbtfcExigIzbJEhKnx0dEhOwlL/
JgWqWsmVcfx01CfsLUCkUeDLVpE8NyE6WloTiz1YQYF+N7m4c+J0NDt/MOpP
JQXSvgi9/Iw9Pnn5+tNXFJhj1TTQlcDv9wxdZqqhQCI9LeEvdnVxjmdVPQW+
x3TtiN+Mf999qxn5MwWMLZsZG2ToiG/ASpBrhgJMO3z8bijREcenaN6KWQoE
L4hkrGJvaHrFdeYXBeIkZne7K9PRfJkM87vfFBj20Fs0UaGjrtvjC5fWKKBq
aScoTqaj1IMBXZMcVLBPynzUoEFHylUpd5tIVPAVHPsSpkNHH3y8i08oUiHW
dYvbKraL8v42QokK7TzsAb66dJSTtMLMS6aCf6DwiqMeHal6n/S2oFLBrO7f
M+NtdERWkDcaMKBCly77Vp0deLzj8xfoR6kw8uvUiTN76ajVMIL3qhUV2PXa
OqaxPddOq/JZU0E04mHbBSM6KjjLb6t1kgpfGKIdIvfREWWP38cLDlTINLRa
fXmAjrT+bM1c96ICRUfSUdqUjrY4vDflj6LCjvxihjNWdCT5eGxbXTQV4n+V
um48jsdnlE3RPwa3j0Mkqhi71fnA2kA8FewurI8yn8Dzy7UtOzuZCtZH2HTy
T9LRHZ9eRnhMhRfrzt/kHeho5Sq9yPMNFcScPP9keNLR9xqeB7JvqcAc63/p
tBcd1TNSoj/XUiH7/kqjlDcd3Q47Z7utngoL16e7H/jQkVrEEjdrCxV2Xd/9
Ic+Pjk7GMTqn9VGhiiPo3dQlOqpJFRZt/o2fp/xKF4ikI5O0r7L2S1TgyVSn
fsPuT3tCXl6mwu3QU7dyo+hoMX0LIq1RgRgZrja8QUfqDy2dgzZowbtCv9Hr
cXR070lSsRqvFuSSvSU0kujIL1/4cKyyFrSx+6iTHuHxKPhqLa+qBZOHguW4
HtNRfMETxwqyFqRt3MY4j537YkvAqIYWSCWevvo+i46GCi0fGGzRAl3lqDvn
c3H7ypLo9J1aYD+vJMBUiOdPjXC0yQkt2LKmv9D7lo70xZzuDNhoAZ2NpbOv
lo4OnyvOcj2lBe5Z8fkD7+joEsniXbidFoQZfj8z8p6OmiNvrlWf0QKbctOl
tUY68jnM5aXppwUTKS/c7DrpqHKY4QhfrBbUNxr+WhzB32+7mX16nBZsq/N6
IjZKRyOJD7zVbmpBxvPJAIMxOuI22hG777YWPNU9dD1ynI5O5wXWB9/VAsfe
AxZqdDpi9lvUm3uiBb+KjOvyFunImIXY3FmtBZZORboJnNMoezxsLaRGC5SW
/HSWuKbRhmaJfmqtFhjWupWc3DiNyhMO3rn1XgsOvPLepsk3jeRk8gQON2tB
GXtw3A/habS4zZWtvVcLGq/XdNyVnUbp3uOzLQtaMB4e/mrbtmm0bBHcdnkR
t4+7neXT9mlkoSuar76sBdrbQ1k9DKYR+z8jt9hVLRBTD9+SBdPo3I2no4c2
0GCH6+4r6kbTyCjLue8jLw0u68/Y3zoyjWb7f7xrVKXBhO6y8ivvafTrivxb
GzUaTGa3dnidm0YLsvbVM+o02M0oRlHww79/ZrBcmEqDANK4YJL/NGJY6H1u
p0uD33rj2VFXphEfd1vKn900GGeYudUQM40o+hVuKidpYN9wkPNR7jTSGlxy
eXWKBiptrN03n00j7VAdZ1NbGriPJd8Ozp9Geh+KbM870MCnZH3EqXAawZF8
y7dnaRD2ekR0X+U0MnN/hI5foEGS5fJN96Zp5JUaKxgVT4P8nbrCe4hp1MxI
mjlwiwYPvYqYS6ankeqZyibu2zQQCPzyQnluGv2g/gy5mUwD4tWRg6KL08iq
AWZT0mhw1pP5uyjDDNr1a745K48Gehub92cKzaBN+6zD6xpocEiahHfnGeT7
fNYuvJEGvFZKj6t2zaB2gQiDfR9pIMz051qs4Qy68bVo4WMrDRhPq9RvOziD
GHw3Onz6guOhkblVR2fQZFoNGh6hwdHDzYrWnjPIiOmYxONRGjzauDJt4zOD
HrvQF51+0mCw/rCIg98MOk0Tz5+YpMGtb1kpFy/NoM8ffCXn5nB/+Ii3beEz
iKrBuVw4T4MHL8wW6VEzKO52xie/3zRg4UjP4Y2dQftPtUQvL9MgPuVx6snb
MyjrnYNz5QoNZnN2/ohKnkHMKis7g9ZoEK4TX1lxdwbZxd3cvOMfDT7vipan
p86g6nnFP+vrNBAx1pYnZcyg/wCVrJYx
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6], 
        Dashing[{Small, Small}]], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQPbcuic0wZbbd2TMg8Mb+YeI6sbfyJ+1h/OrA7ITX
8jfhfM6fs0/m6L2C8wsP1fe8KfoM5+stmXxxy7qfcP5TvwyZ+xYMDjD+dKk2
2YUJzHC+ZdGO9cxn2OD8w9dnB+Src8H5hj3/7CQ8eeF892dW9w3CBeD857rb
XL+8EYTzq/90Gu+pEobz2QVfZIZoicL5rGdZ3bn3isH5v8+tzZlUKAHnPw1f
JyknJwXnO3bk5Z5YKw3nT/23g9M5XhbOj5Y57HPnsxycz3NA+41SqAKcn2q6
6GukjiKcX15XEaTwFcFvfTX58rlzSnC+jxb/Cp5ZynB+71qzAz6JKnD+qeDF
f0osVeH8A2fze3SY1eD8TVmNDmfuIvhy3vYWeVvU4Xzn/zHN82s04PyUa/s/
7QjVhPPtGpu2JipowfmT8j/u5nmO4D9qWPps/j5tOP916s6UQ+06cP6HXCH2
s4m6cP46z9N/0nT14PxnGQZmzF8RfKnVtya3n9WH85sTihad9TaA87//kez1
3onga+yePvOUiiGcb5p81F+wE8E/MEdU4sxXBF/jgGiXX7QRnO/L+kb20j4E
/8PtJ4dPahnD+flzeoU7+xF8MY+otiPHEfx9n9V+/v+P4AMAIHHt9g==
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"time\"", TraditionalForm], 
       FormBox["\"% killed\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotLabel -> FormBox["\"percent mosquitos killed\"", TraditionalForm], 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"continuously spiralling out\"", "\"doubling back\"", 
       "\"Kill fraction\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.6864037153642387`*^9, 3.6864037424255257`*^9}, 
   3.686403776305922*^9, {3.6864038126757717`*^9, 3.6864038374431887`*^9}, {
   3.6864038992983723`*^9, 3.6864039077985163`*^9}, 3.686404059666885*^9, 
   3.686404117982513*^9, 3.686404172929685*^9, {3.6864042871864557`*^9, 
   3.686404304012858*^9}, 3.686404707085483*^9, 3.686404844238875*^9, {
   3.6864049606967907`*^9, 3.686404998387973*^9}, {3.687538049461461*^9, 
   3.687538079805464*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"rt1", ",", "rt2"}], "}"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"rt1", "[", "t_", "]"}], " ", ":=", " ", 
       SqrtBox[
        FractionBox["t", "\[Pi]"]]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"rt2", "[", 
        RowBox[{"t_", ",", "T_"}], "]"}], " ", ":=", " ", 
       FractionBox[
        SqrtBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", "T"}], "-", "t"}], ")"}]], 
        SqrtBox["\[Pi]"]]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"-", 
                FractionBox[
                 SuperscriptBox[
                  RowBox[{"rt1", "[", "t", "]"}], "2"], 
                 RowBox[{"2", " ", 
                  SuperscriptBox["\[Sigma]", "2"]}]]}]]}], ")"}]}], " ", 
           "KillFrac"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"t", "<", "T"}], ",", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"-", 
                  FractionBox[
                   SuperscriptBox[
                    RowBox[{"rt1", "[", "t", "]"}], "2"], 
                   RowBox[{"2", " ", 
                    SuperscriptBox["\[Sigma]", "2"]}]]}]]}], ")"}]}], " ", 
             "KillFrac"}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"-", 
                  FractionBox[
                   SuperscriptBox[
                    RowBox[{"rt1", "[", "T", "]"}], "2"], 
                   RowBox[{"2", " ", 
                    SuperscriptBox["\[Sigma]", "2"]}]]}]], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "2"}], "+", "KillFrac"}], ")"}]}], "-", 
               RowBox[{
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"-", 
                  FractionBox[
                   SuperscriptBox[
                    RowBox[{"rt2", "[", 
                    RowBox[{"t", ",", "T"}], "]"}], "2"], 
                   RowBox[{"2", " ", 
                    SuperscriptBox["\[Sigma]", "2"]}]]}]], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "KillFrac"}], ")"}]}]}], ")"}], 
             " ", "KillFrac"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", 
          RowBox[{"2", "T"}]}], "}"}], ",", 
        RowBox[{
        "PlotLabel", "\[Rule]", " ", "\"\<percent mosquitos killed\>\""}], 
        ",", 
        RowBox[{"AxesLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<time\>\"", ",", "\"\<% killed\>\""}], "}"}]}], ",", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"Epilog", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"T", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"T", ",", "1"}], "}"}]}], "}"}], "]"}], "}"}]}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
          "\"\<continuously spiralling out\>\"", ",", 
           "\"\<doubling back\>\""}], "}"}]}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"T", ",", " ", "10"}], "}"}], ",", 
     RowBox[{"1", "/", "100"}], ",", "100"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"KillFrac", ",", ".5"}], "}"}], ",", 
     RowBox[{"1", "/", "100"}], ",", "1"}], "}"}], " ", ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Sigma]", " ", ",", " ", 
       RowBox[{"2", "/", "3"}]}], "}"}], ",", 
     RowBox[{"1", "/", "100"}], ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.686399266982115*^9, 3.686399283810313*^9}, {
   3.6863998752462378`*^9, 3.686399899588854*^9}, {3.6863999533616743`*^9, 
   3.68640000720662*^9}, {3.68640202288573*^9, 3.686402141700808*^9}, {
   3.686402666456897*^9, 3.686402781836211*^9}, 3.68640281665514*^9, {
   3.686402905363716*^9, 3.686402921533815*^9}, {3.686402962753973*^9, 
   3.686402970223963*^9}, 3.686403069142379*^9, {3.6864031632514343`*^9, 
   3.686403238377129*^9}, {3.686403457387494*^9, 3.6864034799028187`*^9}, {
   3.686403548621872*^9, 3.68640359239333*^9}, {3.6864036422286997`*^9, 
   3.68640374165281*^9}, {3.686403824726643*^9, 3.686403833390768*^9}, {
   3.686403898810103*^9, 3.686403907135154*^9}, 3.686404058436164*^9, 
   3.6864041723092833`*^9, {3.6864042864163322`*^9, 3.6864043034216843`*^9}, {
   3.6864047039368477`*^9, 3.686404706093902*^9}, {3.686404839416201*^9, 
   3.686404841551372*^9}, {3.68640495876672*^9, 3.686404997623304*^9}, {
   3.6864050289754744`*^9, 3.686405120840661*^9}, {3.686405172389267*^9, 
   3.686405192698319*^9}, {3.686405347256791*^9, 3.6864053774978456`*^9}, {
   3.687538113818274*^9, 3.687538192927278*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`KillFrac$$ = 0.27136, $CellContext`T$$ = 
    59.804019999999994`, $CellContext`\[Sigma]$$ = 2.16784, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`T$$], 10}, 
      Rational[1, 100], 100}, {{
       Hold[$CellContext`KillFrac$$], 0.5}, 
      Rational[1, 100], 1}, {{
       Hold[$CellContext`\[Sigma]$$], 
       Rational[2, 3]}, 
<<<<<<< Updated upstream
      Rational[1, 100], 10}}, Typeset`size$$ = {556., {117., 121.}}, 
=======
      Rational[1, 100], 10}}, Typeset`size$$ = {555., {117., 121.}}, 
>>>>>>> Stashed changes
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`T$14666$$ = 0, $CellContext`KillFrac$14667$$ = 
    0, $CellContext`\[Sigma]$14668$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`KillFrac$$ = 0.5, $CellContext`T$$ = 
        10, $CellContext`\[Sigma]$$ = Rational[2, 3]}, "ControllerVariables" :> {
        Hold[$CellContext`T$$, $CellContext`T$14666$$, 0], 
        Hold[$CellContext`KillFrac$$, $CellContext`KillFrac$14667$$, 0], 
        Hold[$CellContext`\[Sigma]$$, $CellContext`\[Sigma]$14668$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`rt1$, $CellContext`rt2$}, $CellContext`rt1$[
           Pattern[$CellContext`t, 
            Blank[]]] := ($CellContext`t/Pi)^Rational[1, 2]; $CellContext`rt2$[
           Pattern[$CellContext`t, 
            Blank[]], 
           Pattern[$CellContext`T, 
            Blank[]]] := (2 $CellContext`T - $CellContext`t)^Rational[1, 2]/
          Pi^Rational[1, 2]; 
        Plot[{(-(-1 + 
             E^(-($CellContext`rt1$[$CellContext`t]^2/(
                2 $CellContext`\[Sigma]$$^2))))) $CellContext`KillFrac$$, 
           
           If[$CellContext`t < $CellContext`T$$, (-(-1 + 
              E^(-($CellContext`rt1$[$CellContext`t]^2/(
                 2 $CellContext`\[Sigma]$$^2))))) $CellContext`KillFrac$$, (1 + 
             E^(-($CellContext`rt1$[$CellContext`T$$]^2/(
                 2 $CellContext`\[Sigma]$$^2))) (-2 + \
$CellContext`KillFrac$$) - 
             E^(-($CellContext`rt2$[$CellContext`t, $CellContext`T$$]^2/(
                2 $CellContext`\[Sigma]$$^2))) (-1 + \
$CellContext`KillFrac$$)) $CellContext`KillFrac$$]}, {$CellContext`t, 0, 
           2 $CellContext`T$$}, PlotLabel -> "percent mosquitos killed", 
          AxesLabel -> {"time", "% killed"}, Epilog -> {
            Line[{{$CellContext`T$$, 0}, {$CellContext`T$$, 1}}]}, 
          PlotLegends -> {"continuously spiralling out", "doubling back"}, 
          PlotRange -> All]], "Specifications" :> {{{$CellContext`T$$, 10}, 
         Rational[1, 100], 100}, {{$CellContext`KillFrac$$, 0.5}, 
         Rational[1, 100], 1}, {{$CellContext`\[Sigma]$$, 
          Rational[2, 3]}, 
         Rational[1, 100], 10}}, "Options" :> {}, "DefaultOptions" :> {}],
<<<<<<< Updated upstream
     ImageSizeCache->{607., {189., 196.}},
=======
     ImageSizeCache->{600., {189., 194.}},
>>>>>>> Stashed changes
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.686405121586083*^9, {3.686405188282948*^9, 3.686405193316538*^9}, {
   3.6864053485605288`*^9, 3.6864053778881607`*^9}, 3.687538092647354*^9, {
   3.687538143296875*^9, 3.687538193202754*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell["\<\
ITEM:
Simulate mosquitoes always reforming normal dist.  This is a discrete \
simulation where you kill 90% of the mosquitoes that are at the robot\
\[CloseCurlyQuote]s current radius every 1 second.  Staying at the center \
maximizes kill rate -- what is the kill rate as a function of time?

# of surviving mosquitoes => n(t) = n(0)*(1-k*p)^t
# of dead mosquitoes => d(t) = n(0)-n(t) = n(0)*(1-(1-k*p)^t)
k = kill percentage, p = percentage of mosquitoes in kill zone\
\>", "Section",
 CellChangeTimes->{{3.6875382573636*^9, 3.6875382940488873`*^9}, 
   3.687538627714513*^9, {3.693843025108809*^9, 3.6938430863829603`*^9}, {
   3.6939172583044453`*^9, 3.693917259418294*^9}, {3.69392010148545*^9, 
   3.6939201952337084`*^9}, {3.693920226633458*^9, 3.693920418679517*^9}}],

Cell[TextData[{
 "TODO: \nGenerate Markov transition matrix P for a square area A with a \
sticky wall effect -- make the transition out of the wall cells to be ",
 StyleBox["f ",
  FontSlant->"Italic"],
 "of normal. Tests:  run boustropheon, compare to running along the wall as a \
function of ",
 StyleBox["f  ",
  FontSlant->"Italic"],
 "and area",
 StyleBox[" A",
  FontSlant->"Italic"],
 "."
}], "Section",
 CellChangeTimes->{{3.6875382573636*^9, 3.6875382940488873`*^9}, 
   3.687538627714513*^9, {3.693842929499015*^9, 3.693843020428604*^9}, {
   3.6938432008509827`*^9, 3.6938432314666843`*^9}, {3.693843738570375*^9, 
   3.693843844019568*^9}, 3.6938440378417997`*^9, {3.6939342547825723`*^9, 
   3.6939342590113935`*^9}}],

Cell[CellGroupData[{

Cell["\<\
TODO: generate a 3x3 markov transition matrix P that has a normal stationary \
distribution w.  We want P to be symmetric.\
\>", "Section",
 CellChangeTimes->{{3.6875382573636*^9, 3.6875382940488873`*^9}, 
   3.687538627714513*^9, {3.693842929499015*^9, 3.693843011620427*^9}}],

Cell[CellGroupData[{

Cell["\<\

try in 1 D.  This worked great for the 3x3 matrix and failed for 5x5\
\>", "Subsection",
 CellChangeTimes->{{3.6938445351989317`*^9, 3.693844540729684*^9}, {
  3.6938510346389647`*^9, 3.693851052652822*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"P", "=", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{"1", "-", "b"}], "b", "0"},
      {"a", 
       RowBox[{"1", "-", 
        RowBox[{"2", "a"}]}], "a"},
      {"0", "b", 
       RowBox[{"1", "-", "b"}]}
     }], "\[NoBreak]", ")"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.693844564395137*^9, 3.693844645625958*^9}, {
  3.693846850730548*^9, 3.693846851280683*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Assuming", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"a", ">", "0"}], "&&", 
     RowBox[{"a", "<", 
      RowBox[{"1", "/", "2"}]}], " ", "&&", " ", 
     RowBox[{"b", ">", "0"}], "&&", 
     RowBox[{"b", "<", "1"}]}], ",", 
    RowBox[{"Limit", "[", 
     RowBox[{
      RowBox[{"MatrixPower", "[", 
       RowBox[{"P", ",", "n"}], "]"}], ",", 
      RowBox[{"n", "\[Rule]", "\[Infinity]"}]}], "]"}]}], "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.693846820227318*^9, 3.6938468258353863`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["a", 
       RowBox[{
        RowBox[{"2", " ", "a"}], "+", "b"}]], 
      FractionBox["b", 
       RowBox[{
        RowBox[{"2", " ", "a"}], "+", "b"}]], 
      FractionBox["a", 
       RowBox[{
        RowBox[{"2", " ", "a"}], "+", "b"}]]},
     {
      FractionBox["a", 
       RowBox[{
        RowBox[{"2", " ", "a"}], "+", "b"}]], 
      FractionBox["b", 
       RowBox[{
        RowBox[{"2", " ", "a"}], "+", "b"}]], 
      FractionBox["a", 
       RowBox[{
        RowBox[{"2", " ", "a"}], "+", "b"}]]},
     {
      FractionBox["a", 
       RowBox[{
        RowBox[{"2", " ", "a"}], "+", "b"}]], 
      FractionBox["b", 
       RowBox[{
        RowBox[{"2", " ", "a"}], "+", "b"}]], 
      FractionBox["a", 
       RowBox[{
        RowBox[{"2", " ", "a"}], "+", "b"}]]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.693846821117399*^9, 3.693846826581534*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"P5a", "=", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{"1", "-", "a"}], "a", "0", "0", "0"},
      {
       RowBox[{"2", " ", "a"}], 
       RowBox[{"1", "-", 
        RowBox[{"5", "a"}]}], 
       RowBox[{"3", "a"}], "0", "0"},
      {"0", 
       RowBox[{"4", " ", "a"}], 
       RowBox[{"1", "-", 
        RowBox[{"8", "a"}]}], 
       RowBox[{"4", "a"}], "0"},
      {"0", "0", 
       RowBox[{"3", "a"}], 
       RowBox[{"1", "-", 
        RowBox[{"5", "a"}]}], 
       RowBox[{"2", "a"}]},
      {"0", "0", "0", "a", 
       RowBox[{"1", "-", "a"}]}
     }], "\[NoBreak]", ")"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.693846890114347*^9, 3.69384696213859*^9}, 
   3.693847019006823*^9, {3.6938512505254307`*^9, 3.6938513202292843`*^9}, {
   3.6941879755502853`*^9, 3.694187975857329*^9}}],

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "-", "a"}], ",", "a", ",", "0", ",", "0", ",", "0"}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"2", " ", "a"}], ",", 
      RowBox[{"1", "-", 
       RowBox[{"5", " ", "a"}]}], ",", 
      RowBox[{"3", " ", "a"}], ",", "0", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"4", " ", "a"}], ",", 
      RowBox[{"1", "-", 
       RowBox[{"8", " ", "a"}]}], ",", 
      RowBox[{"4", " ", "a"}], ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", 
      RowBox[{"3", " ", "a"}], ",", 
      RowBox[{"1", "-", 
       RowBox[{"5", " ", "a"}]}], ",", 
      RowBox[{"2", " ", "a"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "a", ",", 
      RowBox[{"1", "-", "a"}]}], "}"}]}], "}"}], "]"}]], "Input",
 NumberMarks->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Assuming", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"a", ">", "0"}], "&&", 
     RowBox[{"a", "<", 
      RowBox[{"1", "/", "8"}]}]}], " ", "\[IndentingNewLine]", ",", 
    RowBox[{"Limit", "[", 
     RowBox[{
      RowBox[{"MatrixPower", "[", 
       RowBox[{"P5a", ",", "n"}], "]"}], ",", 
      RowBox[{"n", "\[Rule]", "\[Infinity]"}]}], "]"}]}], "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.693851091483822*^9, 3.693851109900013*^9}, 
   3.6938512519152412`*^9, {3.693851338635461*^9, 3.6938513635356493`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["8", "27"], 
      FractionBox["4", "27"], 
      FractionBox["1", "9"], 
      FractionBox["4", "27"], 
      FractionBox["8", "27"]},
     {
      FractionBox["8", "27"], 
      FractionBox["4", "27"], 
      FractionBox["1", "9"], 
      FractionBox["4", "27"], 
      FractionBox["8", "27"]},
     {
      FractionBox["8", "27"], 
      FractionBox["4", "27"], 
      FractionBox["1", "9"], 
      FractionBox["4", "27"], 
      FractionBox["8", "27"]},
     {
      FractionBox["8", "27"], 
      FractionBox["4", "27"], 
      FractionBox["1", "9"], 
      FractionBox["4", "27"], 
      FractionBox["8", "27"]},
     {
      FractionBox["8", "27"], 
      FractionBox["4", "27"], 
      FractionBox["1", "9"], 
      FractionBox["4", "27"], 
      FractionBox["8", "27"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.693851334849264*^9, 3.6938513436939363`*^9}, 
   3.693851555916471*^9, 3.6941880437918777`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"P5", "=", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{"1", "-", "d"}], "d", "0", "0", "0"},
      {"b", 
       RowBox[{"1", "-", "b", "-", "c"}], "c", "0", "0"},
      {"0", "a", 
       RowBox[{"1", "-", 
        RowBox[{"2", "a"}]}], "a", "0"},
      {"0", "0", "c", 
       RowBox[{"1", "-", "b", "-", "c"}], "b"},
      {"0", "0", "0", "d", 
       RowBox[{"1", "-", "d"}]}
     }], "\[NoBreak]", ")"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.693846890114347*^9, 3.69384696213859*^9}, 
   3.693847019006823*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"MatrixPower", "[", 
   RowBox[{"P5", ",", "n"}], "]"}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.693851091483822*^9, 3.693851109900013*^9}}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             FractionBox[
              RowBox[{
               SuperscriptBox["2", 
                RowBox[{
                 RowBox[{"-", "2"}], "-", "n"}]], " ", 
               RowBox[{"(", 
                RowBox[{
                 TemplateBox[{"52"},
                  "OutputSizeLimit`Skeleton",
                  DisplayFunction->(FrameBox[
                    
                    RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                    Background -> GrayLevel[0.75], 
                    BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 1, 
                    FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
                 "+", 
                 RowBox[{"c", " ", "d", " ", 
                  SqrtBox[
                   TemplateBox[{"1"},
                    "OutputSizeLimit`Skeleton",
                    DisplayFunction->(FrameBox[
                    
                    RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                    Background -> GrayLevel[0.75], 
                    BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 1, 
                    FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )]], 
                  " ", 
                  SqrtBox[
                   TemplateBox[{"1"},
                    "OutputSizeLimit`Skeleton",
                    DisplayFunction->(FrameBox[
                    
                    RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                    Background -> GrayLevel[0.75], 
                    BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 1, 
                    FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )]], 
                  " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    TemplateBox[{"1"},
                    "OutputSizeLimit`Skeleton",
                    DisplayFunction->(FrameBox[
                    
                    RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                    Background -> GrayLevel[0.75], 
                    BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 1, 
                    FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
                    ")"}], "n"]}]}], ")"}]}], 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"c", " ", "d"}], "+", 
                 RowBox[{"2", " ", "a", " ", 
                  RowBox[{"(", 
                   RowBox[{"b", "+", "d"}], ")"}]}]}], ")"}], " ", 
               SqrtBox[
                RowBox[{
                 SuperscriptBox["b", "2"], "+", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"c", "-", "d"}], ")"}], "2"], "+", 
                 RowBox[{"2", " ", "b", " ", 
                  RowBox[{"(", 
                   RowBox[{"c", "+", "d"}], ")"}]}]}]], " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"4", " ", 
                  SuperscriptBox["a", "2"]}], "+", 
                 SuperscriptBox["b", "2"], "+", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"c", "-", "d"}], ")"}], "2"], "-", 
                 RowBox[{"4", " ", "a", " ", 
                  RowBox[{"(", 
                   RowBox[{"b", "-", "c", "+", "d"}], ")"}]}], "+", 
                 RowBox[{"2", " ", "b", " ", 
                  RowBox[{"(", 
                   RowBox[{"c", "+", "d"}], ")"}]}]}]]}]], ",", 
             RowBox[{"-", 
              FractionBox[
               TemplateBox[{"1"},
                "OutputSizeLimit`Skeleton",
                DisplayFunction->(FrameBox[
                  
                  RowBox[{
                   "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                  Background -> GrayLevel[0.75], 
                  BaseStyle -> {
                   "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                  Baseline, ContentPadding -> False, FrameMargins -> 1, 
                  FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
               TemplateBox[{"1"},
                "OutputSizeLimit`Skeleton",
                DisplayFunction->(FrameBox[
                  
                  RowBox[{
                   "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                  Background -> GrayLevel[0.75], 
                  BaseStyle -> {
                   "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                  Baseline, ContentPadding -> False, FrameMargins -> 1, 
                  FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )]]}], 
             ",", 
             FractionBox[
              TemplateBox[{"1"},
               "OutputSizeLimit`Skeleton",
               DisplayFunction->(FrameBox[
                 
                 RowBox[{
                  "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                 Background -> GrayLevel[0.75], 
                 BaseStyle -> {
                  "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                   ShowStringCharacters -> False}, BaselinePosition -> 
                 Baseline, ContentPadding -> False, FrameMargins -> 1, 
                 FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
              TemplateBox[{"1"},
               "OutputSizeLimit`Skeleton",
               DisplayFunction->(FrameBox[
                 
                 RowBox[{
                  "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                 Background -> GrayLevel[0.75], 
                 BaseStyle -> {
                  "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                   ShowStringCharacters -> False}, BaselinePosition -> 
                 Baseline, ContentPadding -> False, FrameMargins -> 1, 
                 FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )]], 
             ",", 
             RowBox[{"-", 
              FractionBox[
               TemplateBox[{"1"},
                "OutputSizeLimit`Skeleton",
                DisplayFunction->(FrameBox[
                  
                  RowBox[{
                   "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                  Background -> GrayLevel[0.75], 
                  BaseStyle -> {
                   "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                  Baseline, ContentPadding -> False, FrameMargins -> 1, 
                  FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
               TemplateBox[{"1"},
                "OutputSizeLimit`Skeleton",
                DisplayFunction->(FrameBox[
                  
                  RowBox[{
                   "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                  Background -> GrayLevel[0.75], 
                  BaseStyle -> {
                   "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                  Baseline, ContentPadding -> False, FrameMargins -> 1, 
                  FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )]]}], 
             ",", 
             FractionBox[
              RowBox[{
               SuperscriptBox["2", 
                RowBox[{
                 RowBox[{"-", "2"}], "-", "n"}]], " ", 
               RowBox[{"(", 
                TemplateBox[{"1"},
                 "OutputSizeLimit`Skeleton",
                 DisplayFunction->(FrameBox[
                   
                   RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                   Background -> GrayLevel[0.75], 
                   BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                   Baseline, ContentPadding -> False, FrameMargins -> 1, 
                   FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
                ")"}]}], 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"c", " ", "d"}], "+", 
                 RowBox[{"2", " ", "a", " ", 
                  RowBox[{"(", 
                   RowBox[{"b", "+", "d"}], ")"}]}]}], ")"}], " ", 
               SqrtBox[
                TemplateBox[{"1"},
                 "OutputSizeLimit`Skeleton",
                 DisplayFunction->(FrameBox[
                   
                   RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                   Background -> GrayLevel[0.75], 
                   BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                   Baseline, ContentPadding -> False, FrameMargins -> 1, 
                   FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )]], 
               " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"4", " ", 
                  SuperscriptBox["a", "2"]}], "+", 
                 SuperscriptBox["b", "2"], "+", 
                 SuperscriptBox[
                  TemplateBox[{"1"},
                   "OutputSizeLimit`Skeleton",
                   DisplayFunction->(FrameBox[
                    
                    RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                    Background -> GrayLevel[0.75], 
                    BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 1, 
                    FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
                  "2"], "-", 
                 TemplateBox[{"1"},
                  "OutputSizeLimit`Skeleton",
                  DisplayFunction->(FrameBox[
                    
                    RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                    Background -> GrayLevel[0.75], 
                    BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 1, 
                    FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
                 "+", 
                 RowBox[{"2", " ", "b", " ", 
                  RowBox[{"(", 
                   RowBox[{"c", "+", "d"}], ")"}]}]}]]}]]}], "}"}], ",", 
           TemplateBox[{"3"},
            "OutputSizeLimit`Skeleton",
            DisplayFunction->(FrameBox[
              RowBox[{"\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}],
               Background -> GrayLevel[0.75], 
              BaseStyle -> {
               "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                ShowStringCharacters -> False}, BaselinePosition -> Baseline, 
              ContentPadding -> False, FrameMargins -> 1, FrameStyle -> 
              GrayLevel[0.75], RoundingRadius -> 7]& )], ",", 
           RowBox[{"{", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton",
             DisplayFunction->(FrameBox[
               
               RowBox[{
                "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
               Background -> GrayLevel[0.75], 
               BaseStyle -> {
                "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                 ShowStringCharacters -> False}, BaselinePosition -> Baseline,
                ContentPadding -> False, FrameMargins -> 1, FrameStyle -> 
               GrayLevel[0.75], RoundingRadius -> 7]& )], "}"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarCategory",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{49., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{49., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 45, 27381677818062076649, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{54., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 45, 27381677818062076649, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{40., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 45, 27381677818062076649, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{72., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9657, 0.9753, 0.9802],
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[45]]], "Output",
 CellChangeTimes->{{3.6938510919906607`*^9, 3.693851133165299*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Assuming", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"a", ">", "0"}], "&&", 
     RowBox[{"a", "<", 
      RowBox[{"1", "/", "2"}]}], " ", "\[IndentingNewLine]", "&&", " ", 
     RowBox[{"b", ">", "0"}], "&&", 
     RowBox[{"b", "<", 
      RowBox[{"1", "/", "2"}]}], "\[IndentingNewLine]", "&&", 
     RowBox[{"c", ">", "0"}], "&&", 
     RowBox[{"c", "<", 
      RowBox[{"1", "/", "2"}]}], "\[IndentingNewLine]", "&&", 
     RowBox[{"d", ">", "0"}], "&&", 
     RowBox[{"d", "<", 
      RowBox[{"1", "/", "2"}]}]}], ",", 
    RowBox[{"Limit", "[", 
     RowBox[{
      RowBox[{"MatrixPower", "[", 
       RowBox[{"P5", ",", "n"}], "]"}], ",", 
      RowBox[{"n", "\[Rule]", "\[Infinity]"}]}], "]"}]}], "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.693846981644474*^9, 3.69384701558041*^9}, {
  3.6938471156914167`*^9, 3.693847120185135*^9}, {3.694189173794255*^9, 
  3.694189174110965*^9}}],

Cell[BoxData[
<<<<<<< Updated upstream
 TagBox[
  RowBox[{"Limit", "[", 
   RowBox[{
    RowBox[{"MatrixPower", "[", 
     RowBox[{"P5", ",", "n"}], "]"}], ",", 
    RowBox[{"n", "\[Rule]", "\[Infinity]"}]}], "]"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
=======
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         TagBox[
          RowBox[{"(", "\[NoBreak]", 
           TemplateBox[{"1"},
            "OutputSizeLimit`Skeleton",
            DisplayFunction->(FrameBox[
              RowBox[{"\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}],
               Background -> GrayLevel[0.75], 
              BaseStyle -> {
               "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                ShowStringCharacters -> False}, BaselinePosition -> Baseline, 
              ContentPadding -> False, FrameMargins -> 1, FrameStyle -> 
              GrayLevel[0.75], RoundingRadius -> 7]& )], "\[NoBreak]", ")"}],
          Function[BoxForm`e$, 
           MatrixForm[BoxForm`e$]]],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarCategory",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{49., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
             Function[{OutputSizeLimit`Dump`x$}, 
              MatrixForm[OutputSizeLimit`Dump`x$]], 41, 27381677818062076649, 
             5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{54., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{54., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
             Function[{OutputSizeLimit`Dump`x$}, 
              MatrixForm[OutputSizeLimit`Dump`x$]], 41, 27381677818062076649, 
             5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{40., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
             Function[{OutputSizeLimit`Dump`x$}, 
              MatrixForm[OutputSizeLimit`Dump`x$]], 41, 27381677818062076649, 
             Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{72., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{72., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9657, 0.9753, 0.9802],
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[41]]], "Output",
>>>>>>> Stashed changes
 CellChangeTimes->{{3.693847009809865*^9, 3.693847013595724*^9}, 
   3.6938472412152443`*^9, 3.693847897486293*^9, 3.694188100002386*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell["\<\
TODO: generate a 5x5 markov transition matrix P that has a normal stationary \
distribution w.  We want P to be symmetric.\
\>", "Section",
 CellChangeTimes->{{3.6875382573636*^9, 3.6875382940488873`*^9}, 
   3.687538627714513*^9, {3.693842929499015*^9, 3.693843020428604*^9}}]
},
<<<<<<< Updated upstream
WindowSize->{1366, 685},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"10.0 for Microsoft Windows (64-bit) (September 9, 2014)",
=======
WindowSize->{808, 619},
WindowMargins->{{48, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (September 9, \
2014)",
>>>>>>> Stashed changes
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 420, 9, 121, "Section"],
Cell[CellGroupData[{
<<<<<<< Updated upstream
Cell[1025, 35, 257, 5, 49, "Subsection"],
=======
Cell[1025, 35, 257, 5, 69, "Subsection"],
>>>>>>> Stashed changes
Cell[CellGroupData[{
Cell[1307, 44, 478, 16, 44, "Input"],
Cell[1788, 62, 1169, 37, 73, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2994, 104, 630, 19, 44, "Input"],
Cell[3627, 125, 276, 7, 59, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3940, 137, 320, 11, 61, "Input"],
Cell[4263, 150, 264, 8, 59, "Output"]
}, Open  ]],
Cell[CellGroupData[{
<<<<<<< Updated upstream
Cell[4564, 163, 1154, 32, 59, "Input"],
=======
Cell[4564, 163, 1154, 32, 108, "Input"],
>>>>>>> Stashed changes
Cell[5721, 197, 148423, 2427, 182, 99288, 1620, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[154181, 2629, 727, 21, 46, "Input"],
Cell[154911, 2652, 749, 21, 57, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[155697, 2678, 1218, 31, 63, "Input"],
Cell[156918, 2711, 22992, 374, 177, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[179947, 3090, 228, 5, 28, "Input"],
Cell[180178, 3097, 86956, 1352, 237, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[267171, 4454, 917, 25, 63, "Input"],
Cell[268091, 4481, 21673, 363, 301, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[289801, 4849, 967, 27, 63, "Input"],
Cell[290771, 4878, 915, 25, 57, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[291723, 4908, 1187, 33, 98, "Input"],
Cell[292913, 4943, 103, 1, 28, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[293065, 4950, 93, 1, 44, "Subsection"],
Cell[293161, 4953, 1364, 43, 94, "Input"],
Cell[CellGroupData[{
Cell[294550, 5000, 440, 12, 28, "Input"],
Cell[294993, 5014, 63828, 1046, 347, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[358858, 6065, 457, 12, 28, "Input"],
Cell[359318, 6079, 63257, 1037, 263, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
<<<<<<< Updated upstream
Cell[422624, 7122, 103, 1, 41, "Subsection"],
Cell[422730, 7125, 1151, 35, 100, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[423906, 7164, 602, 18, 31, "Input"],
Cell[424511, 7184, 85751, 1400, 207, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[510299, 8589, 731, 20, 52, "Input"],
Cell[511033, 8611, 121722, 1991, 207, 85542, 1397, "CachedBoxData", \
=======
Cell[422624, 7122, 103, 1, 36, "Subsection"],
Cell[422730, 7125, 1100, 34, 94, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[423855, 7163, 602, 18, 28, "Input"],
Cell[424460, 7183, 708, 17, 207, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[425205, 7205, 731, 20, 46, "Input"],
Cell[425939, 7227, 139905, 2289, 181, 85518, 1396, "CachedBoxData", \
>>>>>>> Stashed changes
"BoxData", "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
<<<<<<< Updated upstream
Cell[632804, 10608, 460, 10, 79, "Subsection"],
Cell[CellGroupData[{
Cell[633289, 10622, 1291, 37, 111, "Input"],
Cell[634583, 10661, 17138, 333, 255, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[651770, 11000, 1813, 48, 255, "Subsection"],
Cell[CellGroupData[{
Cell[653608, 11052, 1012, 29, 101, "Input"],
Cell[654623, 11083, 311, 9, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[654971, 11097, 1553, 37, 121, "Input"],
Cell[656527, 11136, 580, 17, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[657144, 11158, 2187, 61, 153, "Input"],
Cell[659334, 11221, 946, 29, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[660317, 11255, 4411, 115, 464, "Input"],
Cell[664731, 11372, 39916, 723, 255, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[704684, 12100, 5627, 140, 472, "Input"],
Cell[710314, 12242, 3877, 74, 402, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[714230, 12321, 785, 14, 357, "Section"],
Cell[715018, 12337, 732, 18, 179, "Section"],
Cell[CellGroupData[{
Cell[715775, 12359, 287, 5, 97, "Section"],
Cell[CellGroupData[{
Cell[716087, 12368, 218, 5, 79, "Subsection"],
Cell[716308, 12375, 424, 13, 57, "Input"],
Cell[CellGroupData[{
Cell[716757, 12392, 551, 16, 31, "Input"],
Cell[717311, 12410, 1421, 46, 90, "Output"]
}, Open  ]],
Cell[718747, 12459, 852, 26, 87, "Input"],
Cell[719602, 12487, 953, 29, 31, "Input"],
Cell[CellGroupData[{
Cell[720580, 12520, 571, 15, 52, "Input"],
Cell[721154, 12537, 1474, 47, 151, "Output"]
}, Open  ]],
Cell[722643, 12587, 573, 17, 87, "Input"],
Cell[CellGroupData[{
Cell[723241, 12608, 186, 4, 31, "Input"],
Cell[723430, 12614, 20312, 466, 123, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[743779, 13085, 947, 25, 92, "Input"],
Cell[744729, 13112, 392, 10, 45, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[745160, 13127, 287, 5, 111, "Section"]
=======
Cell[565893, 9522, 460, 10, 69, "Subsection"],
Cell[CellGroupData[{
Cell[566378, 9536, 1291, 37, 106, "Input"],
Cell[567672, 9575, 17138, 333, 258, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[584859, 9914, 1813, 48, 244, "Subsection"],
Cell[CellGroupData[{
Cell[586697, 9966, 1012, 29, 91, "Input"],
Cell[587712, 9997, 311, 9, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[588060, 10011, 1553, 37, 108, "Input"],
Cell[589616, 10050, 580, 17, 63, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[590233, 10072, 2187, 61, 138, "Input"],
Cell[592423, 10135, 946, 29, 63, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[593406, 10169, 4411, 115, 431, "Input"],
Cell[597820, 10286, 39916, 723, 257, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[637773, 11014, 5627, 140, 425, "Input"],
Cell[643403, 11156, 3865, 74, 400, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[647307, 11235, 447, 8, 204, "Section"],
Cell[647757, 11245, 676, 17, 155, "Section"],
Cell[CellGroupData[{
Cell[648458, 11266, 287, 5, 85, "Section"],
Cell[CellGroupData[{
Cell[648770, 11275, 218, 5, 69, "Subsection"],
Cell[648991, 11282, 424, 13, 63, "Input"],
Cell[CellGroupData[{
Cell[649440, 11299, 551, 16, 46, "Input"],
Cell[649994, 11317, 1421, 46, 87, "Output"]
}, Open  ]],
Cell[651430, 11366, 800, 25, 97, "Input"],
Cell[CellGroupData[{
Cell[652255, 11395, 571, 15, 46, "Input"],
Cell[652829, 11412, 129, 2, 28, "Output"]
}, Open  ]],
Cell[652973, 11417, 573, 17, 97, "Input"],
Cell[CellGroupData[{
Cell[653571, 11438, 186, 4, 28, "Input"],
Cell[653760, 11444, 20312, 466, 160, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[674109, 11915, 898, 24, 80, "Input"],
Cell[675010, 11941, 8184, 208, 90, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[683233, 12154, 287, 5, 99, "Section"]
>>>>>>> Stashed changes
}
]
*)

(* End of internal cache information *)
